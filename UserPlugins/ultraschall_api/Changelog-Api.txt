<TODO>
    For 4.00beta2.78

Additions:
   - LiceCap: SetLiceCapExe - sets the LiceCap-executable, which shall be used by Reaper
   - LiceCap: SetupLiceCap - sets up the LiceCap-executable settings of the currently chosen LiceCap-executable in Reaper
   - Project Management: SaveProjectAs - saves the current project under a new filename

        - TODO!! XML-versions of the USDOCML-docsfiles
        - TODO!! in the eventmanager-script: 
            - Set sollte es möglich machen Sachen optional zu ändern: pass nil and keep old setting
            - EventManager_SetEvent muss es ermöglichen, dass man Parameter auf nil setzen kann, die man nicht ändern will(Ausnahme: ActionList-table)!
            - CheckEveryXSeconds: mach Wert 0 zu permanent und negative Werte zu EveryXDeferCycle-Werten für mehr Kontrolle darüber(letzteres Kür)
            - CheckForXSeconds: mach Wert 0 zu dauerhaft und evtl negative Werte für Anzahl Defer-Cycles, die gecheckt werden soll(letzteres Kür)
            
        - TODO!! index of config-vars is only one level
        - TODO!! concepts-documentation, autoupdate the download-link on Introduction_002_How_to_Use-chapter
        - TODO!! XML-generator has problems with spaces and & in filenames; use this to overcome this:
                      tempfile=files_array[i]
                      tempfile2=string.gsub(tempfile, "&", "%%26")
                      tempfile2=string.gsub(tempfile2, " ", "%%20")
                      Notes: really tempfile2(!)? And, do I need to exchange only on source or also on target-file?
                      
        - TODO!! reaper.GetLastTouchedFX, reaper.GetFocusedFX - high word/low word-management is too difficult, make new functions of them
        - TODO!!  - Get/SetProject-functions for
        
                  StateChunks:
                  - SetProject_AutomationItemStateChunk - gets an automation-item from a project/ProjectStateChunk
                  - SetProject_ProjectBay - gets the projectbay from a project/ProjectStateChunk
                  - SetProject_Metronome - gets the statechunk for all metronome-settings from a project/ProjectStateChunk
                  - SetProject_MasterPlayspeed - gets the statechunk for all master-playspeed-settings from a project/ProjectStateChunk
                  - SetProject_Tempo - gets the statechunk for all tempo-settings from a project/ProjectStateChunk
                  - SetProject_Extensions - gets the statechunk for all extension-settings from a project/ProjectStateChunk
                  - SetProject_MasterHWVolEnvStateChunk
                  - SetProject_MasterFXListStateChunk - 
                  - SetProject_MasterDualPanEnvStateChunk - 
                  - SetProject_MasterDualPanEnv2StateChunk - 
                  - SetProject_MasterDualPanEnvLStateChunk - 
                  - SetProject_MasterDualPanEnvL2StateChunk - 
                  - SetProject_MasterVolEnvStateChunk - 
                  - SetProject_MasterVolEnv2StateChunk - 
                  - SetProject_MasterVolEnv3StateChunk - 
                  - SetProject_MasterHWPanEnvStateChunk - 
                  - SetProject_MasterPanMode_Ex - 
                  - SetProject_TempoEnv_ExStateChunk
                  
                  States:
                  -  RENDER_QUEUE-stuff
                  - SetProject_MasterFXByp
                  - SetProject_MasterMuteSolo
                  - SetProject_MasterNChans
                  - SetProject_MasterTrackHeight
                  - SetProject_MasterTrackColor
                  - SetProject_MasterTrackView
                  - SetProject_CountMasterHWOuts
                  - SetProject_MasterHWOut
                  
                  - SetProject_MasterVolume - 
                  - SetProject_MasterPanMode - 
                  - SetProject_MasterWidth - 
                  - SetProject_MasterGroupFlagsState - 
                  - SetProject_MasterGroupFlagsHighState - 
                  - SetProject_GroupDisabled - 
                  
               - IsValid-check functions for
                    - AutomationItems, ProjectBay, Metronome, MasterPlayspeed, Tempo, Extensions, MasterHWVolEnv, MasterFXList, MasterDualPanEnv
                      MasterDualPanEnv2, MasterDualPanEnvL, MasterDualPanEnvL2, MasterVolEnv, MasterVolEnv2, MasterVolEnv3, MasterHWPanEnv, TempoEnv_Ex   
        - TODO!! Add/Set/DeleteModulation
        - TODO!! ultraschall.RenderProject_Loops()
                Multipass-rendering
                    When you want to render out a "wet"-loop, that needs reverb or something, you would need to render this loop three times:
                            one to start up all reverbs, two for the actual loop and three for the "loop aftermath"
                    After that, you need to edit this rendered file down to the middle part by hand, which is tedious.
                    If there's a rendering-function could do that automatically, it would be cool.
                        Load the project(if not the current one)
                        Copy the tracks with the to be looped items/timeselection into an empty project, which must hold all rendering-settings(looped-time-selection probably)
                        duplicate it so the items are now three times after each other
                        Render it out and include the rendered file into the current project(maybe as stems?)
                        edit it down to the original loop
                        Render that out into a new file
                        Delete the temp-rendered-files
                        close the projects and return the filename


    For 4.00beta2.8:
         - TODO!! MB and GetUserInputs not working on Mac due unknown bug. 
                 Can't find ID of the buttons anymore. Changes in Reaper in recent versions?
         - TODO!! GetUserInputs - count doesn't match, if fewer inputboxes are filled than do exist.
                        tested with 9 Inputboxes, 6 Captionboxes. There's somewhere a mismatch...
                        Is this fixed? Can't reproduce anymore.
         - TODO!! GetUserInputs 
                - set length of caption-textfields and move inputboxes accordingly, as well as the width of the DialogWindow AND
                  position it correctly centered
                - Captions ending with \n shall be the full width of the window(for full readability of the caption), where the 
                  associated inputbox is moved into the next line,which means, that all lines must be moved downwards properly 
                  and height must be adjusted accordingly
                - additional parameters, x,y, to set a position of the GetUserInput-window
                - maybe auto_size, using caption length and input-box-default-value length to get the desired widths(needs GetLength of Text working somehow, using
                  JS-extension-plugin)
    - TODO!! Monitor the rendering to file-dialog for queue-renders, to get the rendered filenames, using a background script, if possible at all
      TODO!! Default-Color-Theme-Colortables and loading ColorTable from Theme-functions
              Originally Posted by mespotine  View Post
              A second action focusing on only random-strong colors would be useful, I think. Should be scriptable as well though.

              Regarding default color-values, IIRC they are stored in the .ReaperTheme-files, with the currently used stored in reaper.ini as well.
              So how would one reset color palette in reaper without losing theme config otherwise? just colors.
              needs more research
      TODO!! Localize: can we detect, which language-file is currently installed and which language it holds, to decide, which language to use?
                Nope...needs more research
      TODO!! GetTrackPanLaw_Boost(tracknumber, sendidx, setstate)
                    setstate=true -> don't insert it
                    setstate=false -> insert it AFTER the AUXRECV with idx "sendidx"
                    
                    only possible using TrackStateChunks, so no speedup possible
      TODO!! Statechunk-Docs, when Reaper 5.974 or later is released:   + Item notes: optionally display image notes in full height mode
                                                                         new Item/AI-items/Track/Take-extstates from pre-releases
                                                                         AUXRECV is missing in the statechunk-docs, maybe other routing-stuff as well?
                                                                                    funfact - -1:U entry is pan_law, go into a routing-setting and rightclick the pan-slider of a receive to get this dialog
                                                                         AUXRECV_WITHOUT_PANLAW_BOOST - if existing after a AUXRECV, pan_law has the Gain compensation (boost pans)-checkbox set
                                                                                                        go into a routing-setting and rightclick the pan-slider of a receive to get this dialog
      TODO!! Rewrite Doccreation from scratch with proper css.
      TODO!! Lua-eigene Funktionen in die ultraschall-Table übernehmen, wie type, tostring, tonumber, etc. Dies könnten vom user überschrieben werden und dann
             produziert die API Fehler.
      TODO!! Toggle/Set-Mute-state-functions, add autoarm mute-track-parameter
                Needs first functions for activating Envelopes, but they don't exist, until they are displayed.
                I might have to add non-activated envelopes by adding env-statechunks into TrackStateChunks.
      TODO!!  - totype(value, string type), converts a value to type and returns it, if impossible, returns nil; includes string, boolean, integer, float, hex, oct, base64, etc
      TODO!!  - SetStateChunk-functions: how to check for ProjectStateChunk/TrackStateChunk/ItemStateChunk/EnvStateChunk, when new parameters are added to the function?
                                         something with ... ? Otherwise, new added parameters will break old scripts...
      TODO!!  - import/export Bonus-script-packs-functions(for importing and registering additional bonus scripts)
      TODO!!  - Add3rdParty-Script-support/functions-support
      TODO!!  - AddUltraschallScripts() AddUltraschall3rdPartyScripts() add all 3rd party-scripts from the 3rd-party-US-folder
            also add scripts to do that, that will be registered into the ActionList together with the ShowUSApiHelp-script as well
            Note: Should be a script, rather than a function. Easier to handle.
      TODO!!  - Import3rdPartyScripts(string filelist, integer script_target, boolean add)
              copies files from filelist into script_target
              script_target - 0, scripts-folder
                            - 1, ultraschall-3rd-party-scripts-folder
                            --1, don't copy files
              boolean add - true, add the scripts to the actionlist; false, remove them from the action-list
      TODO!!  - create HTML-docs from all files in the functions-department of Ultraschall/3rd-party-functions
      TODO!!  - GFX: virtual screenbuffers(create/remove/blit)
                - probably useless and tow slow
      TODO!!  - ultraschall.gfx_getkey(integer buffer), allows pipe-ing of UserInput directly into a textbuffer. The textbuffer acts like a invisible textbox, which can be shown using drawstr or something
                                                        must support arrow, bspc, enter, return, copynpaste as well

      TODO!!  - functions to setup the LICECAP-settings, before running it; a function to run LiceCap
            set filename with .gif or .lcf to set the default filetype used!
      TODO!!  - functions for native-colorstuff like, gradients, hue
            as well as the same functions for a colorarray, which has a number of colors inside of it, that can be contrasted, gradiented, etc
            they shall support gfx.init-color-values as output(boolean gfx.init-colorvalues (0 to 1)
            Already started with ColorTables for Colorpicker(!!!!)
      TODO!!  - GetAllTakesFromMediaItem - returns an array with all takes from an item, objects as well as info_values
      TODO!!  - Get/SetProjectBay-functions
      TODO!!  - Envelope-StateChunk-functions

    For 4.00Beta 2.9:
        registering of defer-using-running scripts into an extstate ultraschall->running_script_instance->
            All ultraschall-API-using scripts will be registered into running_script_instance automatically, when using defer.
            We will also define an atexit-function for unregistering from the running-script-instance-register, as there can be multiple atexit-functions(up to 1024).
            That way, we can have monitoring of running scripts.
            Should allow monitoring of Defer1 to Defer10-running-states as well. Maybe they need to be set at the beginning as well? Or is it waste of resources?(probably the latter, we can assume, if it's not set "running", that defer-instance is not used and set to stopped.            

        TODO!!  - Mix-Snapshots, who store/retrieve the current/a former mix

      TODO!! SaveProjectAs(ReaProject project, newfilename, relative_sourcefilenames, ProjectStateChunk)
                 params:
                    project - the project to save, either ReaProject or projecttab-nr;
                              0, the currently opened project
                              nil, use parameter ProjectStateChunk instead
                    newfilename - the filename under which to store the Project
                    relative_sourcefile_position - 0, keep absolute paths
                                                 - 1, make paths relative
                                                 - 2, make sourcefile-path+filenames relative to the project-folder(hardest option to code)
                    ProjectStateChunk - a projectstatechunk to use for the save-operation
                    
                 retvals:
                    retval - true, if saving succeeded
                    projectfilename - the saved projectfilename+path
                    sourcefiles - an array with all source/map-filenames[1] and their new filenames in relation of their new position[2]
                                    can be used to copy/move all the sourcefiles into the projectfolder(needs MakeDir(path) as well!)
              Note: could be doable, using the dialog and a background-script, that fills out the stuff from the back

TODO!! buggy function
        the line "reaper.JS_WindowMessage_Send(Textfield, "WM_SETFONT", styles[style] ,0,0,0)" seems to be the problem due WM_SETFONT
</TODO>

## Ultraschall Framework - Changelog

### 4.00 Beta 2.77: - "Monkeys with Tools - Call the planet doctor" - 1st of October 2019

Has now 1029 functions with 44 new ones! Yes, I crossed the thousand!  

  **New in this release:**
  
  - **Event Manager**  
  Killer Feature Time and long requested by many of you!  
  The EventManager allows you to run actions, when certain states occur/statechanges occur.  
  That way you can automatize running actions under certain circumstances without having to run your own defer-script for that.  
  Kudos to @fernsehmuell, who was essential in the initial designs of it!
  
  - **ShowXXXInputMenu**  
  Shows different Context-menus, like TrackInput, TrackPanel, TrackArea, TrackRouting, Ruler, MediaItem, Track/TakeEnvelope,  
  EnvelopePoint, EnvelopePoint for Automation Items, AutomationItems-contextmenu.  
  Reaper's own function ShowPopupMenu is quite difficult to use, so I made some, who make it easier.  

  - **RunLuaSourceCode**  
  Runs Luacode directly without having to create a script for it.  
 
  - **Main\_OnCommand\_LuaCode**  
  Runs Luacode as child-script directly without having to create a script for it.  
  
  - **GetTimeByMouseXPosition**  
  returns projecttime at x-screenposition, which can be nice for mouse-editing-specific actions.  
  
  - **ReplacePatternInString**  
  Like Lua's string.gsub(), this replaces a pattern within a string with a replacement string, but you can choose,  
  which one shall be replaced. And unlike string.gsub() only that one will be replaced, not the occurences after that.  

  - **GetItem\_ClickState and GetTrackEnvelope\_ClickState**  
  Return, if a MediaItem/EnvelopePoint is currently clicked and hovered by the mouse. Could be used for some nice and handy things.

  - **GetAllActions**  
  Sped up and returns now more attributes, like action-type(script, native, custom, extension), termination-state of scripts, consolidate-state for custom actions.

  - **ConvertFunction\_FromBase64String and ConvertFunction\_ToBase64String**  
  Convert a Lua-function to/from a BASE64-string. That way, you can exchange functions via extstates. Convert to Base64-string, put the string into an extstate,  
  read the string from the extstate and convert it back to a function.  

  - **Bugfixes and optimzations**  
  Optimized and bugfixed tons of other stuff, thanks to many bugreports and a lot of feedback from many of you.  
  Big thanks for that :)  
  
#### New features in 4.00beta2.77
   - Defer Management: GetDeferRunState - gets the current runstate of a ultraschall-defer-loop in the current or a specific scriptinstance(requested by rstockm)
   - Docs: EventManager - added concepts docs for detailed description, on how to use and code the EventManager
   - Envelope Management: GetTrackEnvelope_ClickState - returns the currently clicked TrackEnvelope-Point
   - Error Messaging System: SuppressErrorMessages - suppresses and unsuppresses error-messages of the error messaging system
   - EventManager: EventManager\_AddEvent - registers a new event to the EvenManager-checkingqueue
   - EventManager: EventManager\_AddStartupEvent - adds an event into the ini-file of the EventManager, to be registered at startup of the ini-file
   - EventManager: EventManager\_CountRegisteredEvents - counts the number of registered events
   - EventManager: EventManager\_CountStartupEvents - counts the number of currently available startup-events for the EventManager
   - EventManager: EventManager\_EnumerateEvents - returns attributes of specific registered events
   - EventManager: EventManager\_EnumerateEvents2 - enumerates attributes of an event by EventIdentifier
   - EventManager: EventManager\_EnumerateStartupEvents - enumerates attributes of a startup-event
   - EventManager: EventManager\_EnumerateStartupEvents2 - enumerates attributes of a startup-event by an EventIdentifier
   - EventManager: EventManager\_IsValidEventIdentifier - checks, if an EventIdentifier is a valid and currently registered one
   - EventManager: EventManager\_PauseEvent - pauses a registered event in the EventManager
   - EventManager: EventManager\_RemoveAllEvents\_Script - removes all events, registered by a script with a certain ScriptIdentifier
   - EventManager: EventManager\_RemoveEvent - removes an event from the EvenManager-checkingqueue
   - EventManager: EventManager\_RemoveStartupEvent - removes a registered-at-startup-event for the EventManager by EventIdentifier
   - EventManager: EventManager\_RemoveStartupEvent2 - removes a registered-at-startup-event for the EventManager
   - EventManager: EventManager\_ResumeEvent - resumes a paused and registered event in the EventManager
   - EventManager: EventManager\_SetEvent - sets an already existing event in the EvenManager-checkingqueue
   - EventManager: EventManager\_SetStartupEvent - sets an event in the ini-file of the EventManager, which will be registered at startup of the ini-file
   - EventManager: EventManager\_Start - starts the EventManager
   - EventManager: EventManager\_Stop - removes all events registered by the current script/a specific ScriptIdentifier; stops the EventManager, if all scripts who have registered events have used this function
   - EventManager: Ultraschall\_EventManager.lua - the backgroundscript for the EventManager
   - Helper Functions: ConvertFunction\_FromBase64String - loads a function from a BASE64-string
   - Helper Functions: ConvertFunction\_ToBase64String - converts a function into a BASE64-string
   - Helper functions: Main\_OnCommand\_LuaCode - runs Luacode in a temporary new script, without the need to create it first
   - Helper functions: ReplacePatternInString - replaces a certain occurence(and only that one) of a pattern in a string with a replacement
   - Helper functions: RunLuaSourceCode - runs Lua-code directly from a string   
   - MediaItem Management: GetItem_ClickState - returns the currently clicked MediaItem
   - MediaItem Management: GetItem_HighestRecCounter - returns the highest reccounter in the current project
   - MediaItem Management: GetItem_Number - returns the itemnumber of a MediaItem within a project(requested by XRaym)
   - Project Management: GetProjectFilename - returns the filename of a currently opened project
   - Project Management: SetProject\_GlobalAuto - sets global automation override-state a projectfile or a ProjectStateChunk
   - Project Management: SetProject\_Lock - sets locked-state of a projectfile or a ProjectStateChunk
   - Project Management: SetProject\_MasterAutomode - sets automation-mode of the mastertrack in a projectfile or a ProjectStateChunk
   - Project Management: SetProject\_Playrate - sets playrate-state of a projectfile or a ProjectStateChunk
   - Project Management: SetProject\_MasterSel - sets selection-state of the master-track in a projectfile or a ProjectStateChunk
   - Project Management: SetProject\_Tempo - sets the tempo settings(bpm, beat, denominator) a projectfile or a ProjectStateChunk
   - Ultraschall: DeleteUSExternalState - deletes an extstate from the ultraschall.ini(requested by rstockm)
   - User Interface: GetTimeByMouseXPosition - returns projecttime at x-screenposition
   - User Interface: ShowTrackInputMenu - shows a TrackInput-contextmenu
   - User Interface: ShowTrackPanelMenu - shows a TrackPanel-contextmenu
   - User Interface: ShowTrackAreaMenu - shows a TrackArea-contextmenu
   - User Interface: ShowTrackRoutingMenu - shows a TrackRouting-contextmenu
   - User Interface: ShowRulerMenu - shows a Ruler-contextmenu
   - User Interface: ShowMediaItemMenu - shows a MediaItem-contextmenu
   - User Interface: ShowEnvelopeMenu - shows a Track/TakeEnvelope-contextmenu
   - User Interface: ShowEnvelopePointMenu - shows an EnvelopePoint-contextmenu
   - User Interface: ShowEnvelopePointMenu_AutomationItem - shows an EnvelopePoint-contextmenu for Automation Items
   - User Interface: ShowAutomationItemMenu - shows an AutomationItems-contextmenu
   
#### Changes from Beta 2.761 to Beta 2.77
   - Actions: GetAllActions - sped up by magnitudes; returns now actiontype, consolidate-state, termination-state of actions as well; supports now section 1(invisible custom actions)
   - API: functions - moved all functions into modules for future modular-concept
   - Configuration Files: CountIniFileExternalState_sec - had inner variable exposed -> fixed
   - Configuration Files: EnumerateIniFileExternalState_sec - did return keys instead of sections -> fixed
   - Configuration Files: GetKBIniKeys - enhanced description for osc
   - Configuration Files: SetKBIniKeys - enhanced description for osc
   - Docs: Reaper Internals - updated to Reaper 5.983 and JS-extension 0.993
   - DocEngine: Docs\_GetUSDocBloc\_ChapterContext - returned an additional empty non-existant chapter -> fixed
   - DocEngine: Docs\_GetUSDocBloc\_Requires - could produce a Lua-error -> fixed
   - Defer Management: GetDeferIdentifier - you can optionally pass a script-identifier now, to get the defer-identifier of another scriptinstance(used to support only the current script instance)
   - Helper Functions: IsValidMatchingPattern - moved to docs-index API-Helper functions -> Data Manipulation
   - Helper Functions: SecondsToTime - moved to docs-index API-Helper functions -> Data Manipulation
   - Helper Functions: SecondsToTimeString\_hh\_mm\_ss\_mss - moved to docs-index API-Helper functions -> Data Manipulation
   - Helper Functions: SplitStringAtLineFeedToArray - didn't always return the last entry of the passed string -> fixed (thanks to Aurelien)
   - Helper Functions: TimeStringToSeconds\_hh\_mm\_ss\_mss - moved to docs-index API-Helper functions -> Data Manipulation
   - Helper Functions: TimeToSeconds - moved to docs-index API-Helper functions -> Data Manipulation
   - HWND: GetActionsHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetBatchFileItemConverterHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetConsolidateTracksHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetExportProjectMIDIHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetPreferencesHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetProjectDirectoryCleanupHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetProjectSettingsHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetRenderQueueHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetRenderToFileHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetRenderingToFileHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetSaveLiveOutputToDiskHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - HWND: GetVideoHWND - moved to docs-index User Interface -> Reaper-Windowhandler
   - Media Explorer: MediaExplorer_OnCommand - moved function in docs to index Media Explorer
   - Media Explorer: UpdateMediaExplorer - moved function in docs to index Media Explorer
   - Project Management: CheckForChangedProjectTabs - checks now as well, if projectfilenames have changed, by either loading a project or saving a project under a new filename(requested by lexaproductions)
   - Project Management: GetProject\_GlobalAuto - added description for global-automation-override_state
   - Project Management: GetProject\_MasterGroupFlagsState - moved to correct docsindex Project Management
   - Project Management: ProjectTabs-check - initialization had a bug, which could cause CheckForChangedProjectTabs to fail at times -> fixed
   - Project Management: SetProject\_MasterGroupFlagsState - moved to correct docsindex Project Management
   - SpectralEdit: AddItemSpectralEdit - parameter end_pos was actually length -> fixed (thanks to XRaym)
   - SpectralEdit: GetItemSpectralEdit - retval end_pos was actually length -> fixed (thanks to XRaym)
   - SpectralEdit: SetItemSpectralEdit - parameter end_pos was actually length -> fixed (thanks to XRaym)
   - Ultraschall: EnumerateUSExternalState_sec - had problems, when ultraschall.ini was stored with CR+LF-lineendings -> fixed (thanks to rstockm)
   - Ultraschall: IsTrackSoundboard - sped up execution by removing useless loop(thanks rstockm)
   - Ultraschall: IsTrackStudioLink - sped up execution by removing useless loop(thanks rstockm)
   - Ultraschall: IsTrackStudioLinkOnAir - sped up execution by removing useless loop; didn't work correctly on Mac -> fixed(thanks rstockm)
   - Ultraschall: moved ultraschall.ini-related functions to Ultraschall Specific-index in the docs
   - User Interface: GetReaperWindowPosition_Left - deprecated
   - User Interface: GetReaperWindowPosition_Right - deprecated
   - User Interface: GetUserInputs - only working on Windows, currently. Working on fixing it.
   - User Interface: MB - only working on Windows, currently. Working on fixing it.
   
   ---

### 4.00 Beta 2.761: - "Coldplay - Fix You" - 23rd of August 2019

Has now 985 functions with 8 new ones!

**IMPORTANT!: This is a massive critical bugfix release. About 60 functions returned wrong returnvalues in case of an error.  
If you use any of the functions listed in _Changes from Beta 2.76 to Beta 2.761_, you should check, if your scripts still work.  
This is totally my fault, as I had some of them wrong to begin with.  
My apologies for any inconvenience.... :/**  

  **New in this release:**
  
  - **Critical Bugfixes**  
  In case of errors, many functions returned wrong returnvalues or had faulty returnvalues stated in the docs. All of them are fixed now.  
  Please check, if your scripts use any of the functions listed in Changes for more details.  
  Hope this is the last time, stuff like that happened...
  
  - **GetProjectStateChunk**  
  gets a full StateChunk of the current project(finally working!)  
  Now you can get all states of your project!  
  
  - **MediaExplorer**  
  Get the HWND(GetMediaExplorerHWND), update the listview(UpdateMediaExplorer) and run an action, associated with the MediaExplorer-section(MediaExplorer\_OnCommand).
  
  - **ConvertYCoordsMac2Win**  
  Y-coordinates on Mac are different from the ones in Windows/Linux, meaning, pixel 0 is at the bottom, while Windows/Linux start on top.  
  This function converts the y-coordinates between these two coordinate-systems.  
  
  - **New version of Config-Vars-displayer-script**  
  Shows changes with doubles without a problem now, is faster, uses the config-var-docs included with the API to get the currently accepted config-vars.
  I also improved the layout a bit.
  
###New features in 4.00beta2.761
   - Helper functions: FindPatternsInString - finds all occurrences of a matching-pattern in a string
   - Helper functions: IsWithinTimeRange - returns, if a time is within a start and endtime, takes care of the precision-problem time-positions in Lua have
   - ProjectManagement: GetProjectStateChunk - returns the ProjectStateChunk of the current project(finally working!)
   - Scripts: ultraschall\_developertool\_Display-Altered-Config-Vars.lua - new version, which solves the faulty-displaying-of-double-issue, faster and improved layout. Uses now ConfigVars-Docfile to read the currently supported ConfigVars.
   - Trackmanagement: IsSplitAtPosition - returns, if a split/mediaitemend/mediaitemstart exists at a certain position, within certain tracks
   - User Interface: ConvertYCoordsMac2Win - converts y-coordinates between Windows/Linux and Mac related coordinatesystems
   - User Interface: GetMediaExplorerHWND - gets the HWND-windowhandler of the Media Explorer
   - User Interface: UpdateMediaExplorer - updates the listview of the Media Explorer
   - User Interface: MediaExplorer\_OnCommand - runs an Media Explorer action(just like Reaper's Main\_OnCommand and Midi\_OnCommand-functions); runs no scripts yet, only native/extension actions

###Changes from Beta 2.76 to Beta 2.761

   - Automation Items: GetProject_CountAutomationItems - didn't return the right retval in case of an error -> fixed
   - ColorManagement: RGB2Grayscale - didn't return the right retval in case of an error -> fixed 
   - Configuration Files: CountIniFileExternalState_sec - did count keys instead of sections -> fixed(thanks to rstockm)
   - Configuration Files: CountUSExternalState_sec - did count keys instead of sections -> fixed(thanks to rstockm)
   - Configuration Files: CountUSExternalState_key - didn't return the right retval in case of an error -> fixed
   - Configuration Files: DeleteKBIniActions - didn't return the right retval in case of an error -> fixed
   - Configuration Files: DeleteKBIniScripts - didn't return the right retval in case of an error -> fixed
   - Configuration Files: DeleteKBIniKeys - didn't return the right retval in case of an error -> fixed 
   - Configuration Files: EnumerateIniFileExternalState_sec - did enumerate keys instead of sections -> fixed(thanks to rstockm)
   - Configuration Files: EnumerateKeysByPattern - didn't return the right retval in case of an error -> fixed
   - Configuration Files: EnumerateSectionsByPattern - didn't return the right retval in case of an error -> fixed
   - Configuration Files: EnumerateUSExternalState_sec - didn't return the right retval in case of an error -> fixed
   - Configuration Files: EnumerateUSExternalState_key - didn't return the right retval in case of an error -> fixed
   - Configuration Files: EnumerateValuesByPattern - didn't return the right retval in case of an error -> fixed
   - Configuration Files: SetIniFileExternalState - didn't return the right retval in case of an error -> fixed 
   - Docs: Api-docs - went through all of them and removed MarkDown-issues, though I should do something on this MarkDown-issue. It's a drag...
   - Docs: Doc-Engine - had wrong parameters and retvals in numerous functions...fixed(ooops)
   - Docs: Doc-Engine: Docs_ConvertPlainTextToHTML - was missing html-codes in the description due me encoding it wrong
   - Docs: GetRenderingToFileHWND - had parameters described, that don't exist -> fixed
   - Docs: Reaper Internals - updated to Reaper 5.982, JSextension 0.990 added configvars from developer-releases
   - Docs: Reaper: GetTrackSendInfo_Value - fixed Markdown-formatting-problems
   - Docs: Reaper: print-functions - all print-functions, like sprint, fprint, gfx.printf, etc include now formatting information in the description.
   - Docs: Reaper: SetTrackSendInfo_Value - fixed Markdown-formatting-problems
   - EnvelopeManagement: SetArmState_Envelope - didn't return the right retval in case of an error -> fixed 
   - FileManagement: CountLinesInFile - didn't return the right retval in case of an error -> fixed
   - FileManagement: GetLengthOfFile - didn't return the right retval in case of an error -> fixed
   - FileManagement: MakeCopyOfFile_Binary - didn't return the right retval in case of an error -> fixed
   - FileManagement: ReadValueFromFile - didn't return the right retval in case of an error -> fixed
   - FileManagement: ReadBinaryFileUntilPattern - didn't return the right retval in case of an error -> fixed
   - FileManagement: ReadBinaryFileFromPattern - didn't return the right retval in case of an error -> fixed
   - FXManagement: AddParmLFOLearn_FXStateChunk - enhanced doc-description; fixed bug that could cause a LFOLEARN entry to become PARMLEARN(thanks to Justin and Schwa for helping me with that)
   - FXManagement: AddParmLearn_FXStateChunk - enhanced doc-description; fixed bug that could cause a PARMLEARN entry to become LFOLEARN(thanks to Justin and Schwa for helping me with that)
   - FXManagement: AddParmAlias_FXStateChunk - enhanced doc-description
   - FXManagement: CountParmAlias_FXStateChunk - returns now -1 in case of an errorenhanced doc-description
   - FXManagement: CountParmLearn_FXStateChunk - returns now -1 in case of an error; enhanced doc-description
   - FXManagement: CountParmLFOLearn_FXStateChunk - returns now -1 in case of an error; enhanced doc-description
   - FXManagement: DeleteParmAlias_FXStateChunk - enhanced doc-description
   - FXManagement: DeleteParmLFOLearn_FXStateChunk - enhanced doc-description
   - FXManagement: GetParmModulationChunk_FXStateChunk - enhanced doc-description
   - FXManagement: GetParmLFOLearn_MediaTrack - enhanced doc-description
   - FXManagement: GetFXStateChunk - had layoutproblem, when the passed StateChunk was taken from a ProjectStateChunk -> fixed(thanks to lossius)
   - FXManagement: SetFXStateChunk - didn't return the right retval in case of an error -> fixed
   - FXManagement: SetParmLFOLearn_FXStateChunk - enhanced doc-description; fixed bug that could cause a LFOLEARN entry to become PARMLEARN(thanks to Justin and Schwa for helping me with that)
   - FXManagement: SetParmLearn_FXStateChunk - enhanced doc-description; fixed bug that could cause a PARMLEARN entry to become LFOLEARN(thanks to Justin and Schwa for helping me with that)
   - FXManagement: SetParmAlias_FXStateChunk - enhanced doc-description
   - Helper Functions: CompareStringWithAsciiValues - returned -1 in case of an error, although boolean should be returned -> fixed
   - Helper Functions: ConvertIntegerIntoString2 - didn't return the right retval in case of an error -> fixed
   - Helper Functions: GetScriptFilenameFromActionCommandID - didn't return the right retval in case of an error -> fixed
   - Helper Functions: GetUserInputs - did change the tables passed as default-retvals -> fixed now
   - Helper Functions: IsItemInTrack - changed error-retval to nil; didn't return the right retval in case of an error -> fixed
   - Helper Functions: LoadFunctionFromExtState - didn't return the right retval in case of an error -> fixed
   - Helper Functions: SetIntConfigVar_Bitfield - didn't return the right retval in case of an error -> fixed
   - Helper Functions: ToggleStateAction - wrongly stated to return boolean instead of integer in the docs -> fixed
   - Helper Functions: ToggleStateButton - wrong retval-description in the docs -> fixed
   - Marker Management: DeleteNormalMarker - returned wrong retval in case of an error -> fixed
   - Marker Management: DeleteEditMarker - returned wrong retval in case of an error -> fixed
   - Marker Management: EnumerateEditRegion - returned wrong retval in case of an error -> fixed
   - Marker Management: SetMarkerByIndex - returned wrong retval in case of an error -> fixed
   - MediaItem Management: GetItemSpectralConfig - didn't return the right retval in case of an error -> fixed
   - MediaItem Management: GetItemSpectralVisibilityState - didn't return the right retval in case of an error -> fixed
   - MediaItem Management: GetMediaItemTake - didn't return the right retval in case of an error -> fixed
   - MediaItem Management: RippleInsert_MediaItemStateChunks - had inner variable exposed
   - MediaItem Management: SetItemLength - didn't return the right retval in case of an error -> fixed
   - MediaItem Management: SetItemPosition - didn't return the right retval in case of an error -> fixed
   - MediaItem Management: SetItemUSTrackNumber_StateChunk - didn't return in some errorcases, potentially resulting in a Lua-error -> fixed
   - MediaItem Management: SplitMediaItems_Position - didn't return the right retval in case of an error -> fixed 
   - Project Management: GetProject_GetRegion - returned wrong retval in case of an error -> fixed
   - Project Management: GetProject_CountMasterHWOuts - returned wrong retval in case of an error -> fixed
   - Project Management: GetProject_MasterGroupFlagsState - returned wrong retval in case of an error -> fixed
   - Project Management: GetProject_MasterGroupFlagsHighState - returned wrong retval in case of an error -> fixed
   - Rendering: ApplyRenderTable_Project - stated nil as retval in case of an error, though it is false -> fixed
   - Rendering: ApplyRenderTable_ProjectFile - stated nil as retval in case of an error, though it is false -> fixed
   - Rendering: GetRenderPreset_RenderTable - stated false as retval in case of an error, though it is nil -> fixed
   - Track Management: RemoveMediaItem_TrackStateChunk - docs incorrectly stated nil as retval in case of an error -> fixed
   - Track Management: RemoveMediaItemByIGUID_TrackStateChunk - docs incorrectly stated nil as retval in case of an error -> fixed
   - Track Management: RemoveMediaItemByGUID_TrackStateChunk - docs incorrectly stated nil as retval in case of an error -> fixed
   - Track Management: SetMediaItemStateChunk_in_TrackStateChunk - docs incorrectly stated nil as retval in case of an error -> fixed
   - User Interface: GetVideoHWND - returned wrong retval in case of an error -> fixed
   - Video: VID_Pixels2VideoUIStateCoords - returned wrong retval in case of an error -> fixed
   - Video: VID_VideoUIStateCoords2Pixels - returned wrong retval in case of an error -> fixed

---

### 4.00 Beta 2.76: - "The Police - Walking on the Moon" - 20th of July 2019

Has now 977 functions with 42 new ones!

  **New in this release:**
    
  - **Parameter Learn**  
  You can set/get/delete parameter-learning in Statechunks.  
    1) get a StateChunk  
    2) get its FXStateChunk using GetFXStateChunk  
    3) alter this FXStateChunk using the ParmLearn-functions  
    4) set this FXStateChunk using SetFXStateChunk  
    5) (re-)apply the final StateChunk to the Track/Item  
    
  - **Localize**  
  You can localize your scripts using an external localize-file.   
  If that exists, ultraschall.Localize will convert your string into it's localized one, otherwise it uses it's original text.  
   
  - **DocEngine**   
  long time on my list, functions for the DocEngine. With them, you can use my Reaper-internal-sourcefiles (.USDocML) and create your own conversions of them.  
  
  - **get\_action\_context\_MediaItemDiff**  
  a function, which helps you to get the diff of an MediaItem since last time calling this function. Good for RippleDrag-features.  
          
  - **AddSelectedItemsToRenderQueue**  
  this adds MediaItems into the Render-Queued, either as single-queued or multiqueued-project-files(requested by Travesty)  

  - **GetUserInputs**  
  allows now setting the length of the captions-fields.  
  No more cutting off of longer captions!(requested by Julian Sader)  
  
  - **More functions, more bugfixes, updated Reaper-docs, speedups**  
        
#### New features in 4.00beta2.76
   - Actions: GetAllActions - gets all actions, actioncommandids and scriptnames of all actions in a specific section
   - DocEngine: Docs\_ConvertPlainTextToHTML - converts a plaintext into html
   - DocEngine: Docs\_GetAllUSDocBlocsFromString - gets all US_DocBlocs from a string
   - DocEngine: Docs\_GetUSDocBloc\_ChapterContext - gets the chapters of an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Description - gets the description of an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Functioncall - gets a functioncall of an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_NextChapter - gets the slug of the next chapter of the US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Params - gets the parameters of an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_PreviousChapter - gets the slug of the previous chapter of the US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Requires - gets the requires-tag from an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Retvals - gets the retvals of an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Slug - gets the slug from an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_SourceDocument - gets the source-document-entry from an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_TargetDocument - gets the target-document-entry from an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Tags - gets the tags-entry from an US_DocBloc
   - DocEngine: Docs\_GetUSDocBloc\_Title - gets the title from an US_DocBloc
   - DocEngine: Docs\_RemoveIndent - removes indentation from a text(usually taken from an US_DocBloc)
   - Docs: Concepts: Localize\_001\_Introduction - Introduction to Localization
   - Docs: Concepts: Localize\_002\_LangPack\_Fileformat - How to write the translation-file
   - Docs: Concepts: Localize\_003\_Localize\_Functions - usage of Localization functions
   - FXManagement: AutoDetectVSTPlugins - auto-searches for the vst-plugin-folder
   - FXManagement: AddParmAlias\_FXStateChunk - adds a parameter-alias-entry to an FXStateChunk
   - FXManagement: AddParmLearn\_FXStateChunk - adds a parameter-learn-entry to an FXStateChunk
   - FXManagement: AddParmLFOLearn\_FXStateChunk - adds a parameter-lfo-learn-entry to an FXStateChunk
   - FXManagement: CountParmAlias\_FXStateChunk - counts parameter-alias-entries in an FXStateChunk
   - FXManagement: CountParmLearn\_FXStateChunk - counts parameter-learn-entries in an FXStateChunk
   - FXManagement: CountParmLFOLearn\_FXStateChunk - counts parameter-lfo-learn-entries in an FXStateChunk
   - FXManagement: DeleteParmAlias\_FXStateChunk - deletes a parameter-alias-entry from a specific fx in an FXStateChunk
   - FXManagement: DeleteParmLFOLearn\_FXStateChunk - deletes a parameter-lfo-learn-entry from a specific fx in an FXStateChunk
   - FXManagement: DeleteParmLearn\_FXStateChunk - deletes a ParmLearn-entry from a specific fx in an FXStateChunk
   - FXManagement: ScanDXPlugins - rescans all DX(DirectX)-plugins, optionally scans all or just the new ones
   - FXManagement: ScanVSTPlugins - rescans all vst-plugins, optionally clears vst-plugin-cache first
   - FXManagement: SetFXStateChunk - sets an FXStateChunk into a TrackStateChunk or MediaItemStateChunk
   - FXManagement: SetParmAlias\_FXStateChunk - sets a parameter-alias-entry from a specific fx in an FXStateChunk
   - FXManagement: SetParmLearn\_FXStateChunk - sets a parameter-learn-entry from a specific fx in an FXStateChunk
   - FXManagement: SetParmLFOLearn\_FXStateChunk - sets a parameter-lfo-learn-entry from a specific fx in an FXStateChunk
   - GFX-Management: GFX\_SetFont - sets a font to be used in a gfx-window; adjust Mac-fonts to match the size of Windows-fonts(unlike Reaper's own gfx.setfont)(code by lokasenna with contributions by Justin and Schwa)
   - HelperFunctions: get\_action\_context\_MediaItemDiff - gets the MediaItemDifference(position, start, end, length, offset) since last time calling this function. Good for ripple-drag-scripts.
   - Localize: Localize - localizes a string, using the texts from a translationfile; can be used with or without ultraschall. at the beginning
   - Localize: Localize\_RefreshFile - reloads an already set translation-file, so translations can be updated at runtime
   - Localize: Localize\_UseFile - sets a translationfile, that shall be used by function ultraschall.Localize
   - Localize: ultraschall\_translation\_file\_format.USLangPack - has a description of the USLangPack-fileformat for usage with the Localize-functions(see in misc-folder)
   - Misc: Developer_Reaper5965.ReaperLangPack - a language-pack, which displays the sections, in which the caption is located in a langpack
   - ReaMote: AutoSearchReaMoteSlaves - autosearches for new ReaMote-slaves
   - Render: AddSelectedItemsToRenderQueue - adds selected MediaItems to render-queue as either one render-queued-project or individual projects(requested by Travesty)
   - Render: GetRenderingToFileHWND - gets the hwnd of the rendering-to-file-dialog, during rendering
   - Tools: LangPack2Developer\_langpack\_converter.lua - converts a language-pack into a developer-langpack, which displays the sections, in which every caption is located in the langpack
   - Tools: ultraschall\_Add\_Developertools\_To\_Reaper.lua - allows installing developertools into Reaper (requested by X-Raym)
   - Tools: ultraschall\_developertool\_CheckForNewConfigVars.lua - checks the individual lines of a string in clipboard for valid config-vars; thought I already had added that...
   - Tools: ultraschall\_Remove\_Developertools\_From\_Reaper.lua - allows removing already installed developertools from Reaper
   - Track Management: AnyTrackMute - returns, if any track is muted; optionally includes the master-track as well

    
#### Changes from Beta 2.75 to Beta 2.76
   - API: versionscheck - had problems with pre/rc and dev-versions of Reaper -> fixed(reported by X-Raym)
   - Docs: Concepts-RenderTable - layout was totally messed up due Markdown -> fixed
   - Docs: FileType-Description - added missing info to ReaperConfigZip-Filetype-description
   - Docs: Index - index in all docs was missing chapters -> fixed
   - Docs: updated Reaper-docs to 5.980 and JS-extension 0.989
   - Helpers: GetPath - when filename has no path, it returns now "", filename
   - Helpers: GetUserInputs - allows now setting width of the captions-fields(requested by Julian Sader), allows now commas in captions and default-values as well; title is now the one defined by the title-parameter(used to have temporary title previously) (reported by X-Raym)
   - Helpers: SplitStringAtLineFeedToArray - sped up by magnitudes, should now work much faster with megabyte-strings
   - Markers: GetAllRegions - returned index in allregionsarray[index][3] wasn't 1-based, causing problems with other functions -> fixed
   - Render: RenderProject\_Regions - produced Lua-error, when passing a filename without extension and if region was <1, returns error-messages now in that case
                                     allows now giving an optional separator between renderfilename\_with\_path and regionname when addregionname=true, including /
                                     check docs for that new feature(reported by reapero)
   - Scripts: HWND-Displayer.lua - reimplemented, much more comfortable now with a lot of more features.
   - Tools - the following scripts renamed to:  
      ultraschall\_developertool\_ActionlistToIni-Converter.lua  
      ultraschall\_developertool\_Display-Altered-ConfigFile-Entries.lua  
      ultraschall\_developertool\_Display-Altered-Config-Vars.lua  
      ultraschall\_developertool\_Env\_State\_Diffs\_Monitor.lua  
      ultraschall\_developertool\_findConfigVarsToggledByActions.lua  
      ultraschall\_developertool\_GetPitchShiftModes.lua  
      ultraschall\_developertool\_gfx\_deltablit\_displayer.lua  
      ultraschall\_developertool\_HWND-Displayer.lua  
      ultraschall\_developertool\_Item\_State\_Diffs\_Monitor.lua  
      ultraschall\_developertool\_Project\_State\_Diffs\_Monitor.lua  
      ultraschall\_developertool\_StateInspector.lua  
      ultraschall\_developertool\_Track\_State\_Diffs\_Monitor.lua  
   - Tools: ultraschall\_Remove\_ExampleScripts\_To\_Reaper.lua - renamed to ultraschall\_Remove\_ExampleScripts\_From\_Reaper.lua, better name that way
 
   ---

## Ultraschall Framework - Changelog

### 4.00 Beta 2.75: - "Nick Cave & the Bad Seeds - Babe, I'm on fire" - 29th of May 2019
tagline inspired by a comment from \_stevie\_ ;)
  
  **!RenderMania Update!**
  Has now 935 functions with 95 new ones!
  
   - **Rendering** - reworked Rendering completely; you can render the current project now directly, access render-presets and render-queues (thanks to Justin and Schwa for adding the features needed into Reaper)
   
   - **Render-Format-strings** - you can create all(!) renderformats available in Reaper as BASE64-encoded strings, as well as analyzing already BASE64-encoded renderstrings(this alone is 44 functions)
   
   - **Parameter Learn** - you can get all parameter learn, modulation and lfo-settings, as well as FXStateChunks who store that information, add/set/delete will come later (requested by TonE and Anton9)
    
   - **ultraschall.MB** - shows a messagebox and allows exchanging the texts of the buttons with your own texts
   
   - **LoadFunctionFromExtState and StoreFunctionInExtState** - lets you pass a Lua-function from one script to another using an extstate, no external files and loads and requires necessary

   - **Docs** - updated docs for Reaper 5.978, SWS 2.10.0.1, JS-extension 0.986
   
   - **More Docs** - when you've installed the API using ReaPack, actions will be added for opening the individual parts of the docs, like Reaper API(ReaScript, Video, WebRC), ConfigVars, Ultraschall-Concepts and FunctionsAPI. Type into the Actions-dialog-filter the words "ultraschall" and "help".
   
   - **Example Scripts** - when you've installed the API using ReaPack, new actions for registering and unregistering the example-scripts as well as opening the example-script-folder. Type into the Actions-dialog-filter the words "ultraschall" and "examples".
   
   - **Even more about docs** - docs for parameter-learn added(thanks to Anton9 for helping me with that) as well as many docs I had lying around(find them in the ResourceFolder/UserPlugins/ultraschall\_api/Misc/misc\_docs-folder)

   - **CleanUp** - removed junk and converted files into smaller fileformats(where applicable), so the API is now 20MB smaller
   
   - **Many other helpful functions** - HexString2Ascii2HexString, Get/Set Armstate of Envelopes, DeleteTracks\_TrackString, Get/SetCheckboxState and more
   
   - **Bugfixes** - as usual ;)


If you find this helpful and use this, please consider donating to me at ultraschall.fm/danke (look for mespotine), paypal(lspmp3@yahoo.de) or patreon.com/mespotine.  
Might be a small donation for you, but a giant motivation leap for mankind(means: me) ;)


#### New features in 4.00beta2.75
  - Docs: Misc/misc_docs - added this folder to put into that various (often unfinished) docs
  - Docs: ParmLearnDocs.txt - documented parameter-learn/modulation/alias-settings
  - Docs: US-Concepts - added description of datatype RenderTable
  - Docs: US-Concepts - Rendering: About RenderTables; description of how to use and work with RenderTables
  - Docs: US-Concepts - Rendering: Render Presets; description for how to deal with render-presets
  - Docs: US-Concepts - Rendering: Render Queue; description for how to render using the render-queue
  - Envelopes: GetArmState_Envelope - gets the armstate of a TrackEnvelope or EnvelopeStateChunk
  - Envelopes: GetLastEnvelopePoint_TrackEnvelope - gets the last point from a TrackEnvelope-object
  - Envelopes: SetArmState_Envelope - sets the armstate of a TrackEnvelope or EnvelopeStateChunk
  - FXManagement: GetFXStateChunk - Gets an FXStateChunk from a StateChunk(usually Track/MediaItemStateChunk)
  - FXManagement: GetFXFromFXStateChunk - gets all lines of a specific FX stored in an FXStateChunk
  - FXManagement: GetParmAlias\_FXStateChunk - gets an aliasname for a specific parameter of an FX
  - FXManagement: GetParmAlias\_MediaTrack - gets an aliasname for a specific parameter of an FX in a specific track
  - FXManagement: GetParmAudioControl\_FXStateChunk - gets all settings from the Audio Control Signal-settings from parameter-modulation
  - FXManagement: GetParmLearn\_FXStateChunk - gets the parameter-learn-settings from an FXStateChunk, as requested by TonE
  - FXManagement: GetParmLearn\_MediaItem - gets the parameter-learn-settings from a MediaItem, as requested by TonE
  - FXManagement: GetParmLearn\_MediaTrack - gets the parameter-learn-settings from a MediaTrack, as requested by TonE
  - FXManagement: GetParmLFO\_FXStateChunk - gets the LFO-settings from the parameter-modulation from an FXStateChunk
  - FXManagement: GetParmLFOLearn\_FXStateChunk - gets the parameter-lfo-learn-settings from an FXStateChunk
  - FXManagement: GetParmLFOLearn\_MediaItem - gets the parameter-lfo-learn-settings from an FXStateChunk
  - FXManagement: GetParmLFOLearn\_MediaTrack - gets the parameter-lfo-learn-settings from an FXStateChunk
  - FXManagement: GetParmMIDIPLink\_FXStateChunk - gets the parameter-link-settings from an FXStateChunk
  - FXManagement: GetParmModulationChunk\_FXStateChunk - gets the chunk for parameter-modulation for a specific parameter of an FX in a specific track
  - FXManagement: IsValidFXStateChunk - checks, whether a StateChunk is a valid FXStateChunk
  - Helpers: ConvertAscii2Hex - converts a string into it's two-digit-hexadecimal-number-representation
  - Helpers: ConvertBitsToInteger - converts a table with bitvalues (0 or 1) into it's integer-representation
  - Helpers: ConvertHex2Ascii - converts a string with two-digit-hexadecimal-numbers into it's ascii-representation
  - Lua: StoreFunctionInExtState - stores a function into an extstate 
  - Lua: LoadFunctionFromExtState - loads a function from an extstate, if stored using StoreFunctionInExtState
  - MediaItems: GetLengthOfAllMediaItems\_Track - returns the length of all MediaItems in a track combined, in seconds
  - MediaItems: GetItemPlayRate - updated pitchshiftmodes in docs
  - Project Management: GetProject\_DefPitchMode - returns now the stretchmarker-mode as well(as set in Project Settings); updated docs to recent pitch-shift-modes
  - Project Management: GetProject\_GroupName - gets the name of an item-group, as stored in a ProjectStateChunk of projectfile
  - Project Management: GetProject\_QRenderOriginalProject - returns the original projectfile of a render-queued-project from a projectfile or ProjectStateChunk
  - Project Management: GetProject\_QRenderOutFiles - returns the render-outfiles-with-path of a render-queued-project from a projectfile or ProjectStateChunk
  - Project Management: GetProject\_RenderQueueDelay - returns the render-queue-delay of a projectfile or ProjectStateChunk
  - Project Management: GetProject\_Selection - had some inner variables exposed -> fixed now
  - Project Management: SetProject\_DefPitchMode - allows now setting the stretchmarker-mode as well(as set in Project Settings); updated docs to recent pitch-shift-modes
  - Render: AddProjectFileToRenderQueue - adds a projectfile or the current active project to the render-queue
  - Render: AddRenderPreset - adds a new render-preset
  - Render: ApplyRenderTable\_Project - applies a RenderTable to the active project
  - Render: ApplyRenderTable\_ProjectFile - applies a RenderTable to a projectfile
  - Render: CreateRenderCFG\_AVI\_Video - creates a render-string for the format video-AVI
  - Render: CreateRenderCFG\_GIF - creates a render-string of the format video-gif
  - Render: CreateRenderCFG\_LCF - creates a render-string of the format video-lcf
  - Render: CreateRenderCFG\_M4AMAC - creates a render-string for the format audio-M4A for Mac
  - Render: CreateRenderCFG\_MKV\_Video - creates a render-string for the format video-MKV
  - Render: CreateRenderCFG\_MOVMAC\_Video - creates a render-string for the format video-MOV for Mac
  - Render: CreateRenderCFG\_MP4MAC\_Video - creates a render-string for the format video-MP4 for Mac
  - Render: CreateRenderCFG\_QTMOVMP4\_Video - creates a render-string for the format video-QT/MOV/MP4
  - Render: CreateNewRenderTable - creates a new RenderTable, which holds all render-settings; can be applied later to projects or projectfiles
  - Render: DeleteRenderPreset\_Bounds - deletes a bounds-render-preset from reaper-render.ini and the used render-presets in the Render to File-dialog
  - Render: DeleteRenderPreset\_FormatOptions - deletes a format/options-render-preset from reaper-render.ini and the used render-presets in the Render to File-dialog
  - Render: GetLastRenderPaths - returns the last 20 used render-output-paths, that have been used for rendering by any project in Reaper.
  - Render: GetLastUsedRenderPatterns - returns the last 12 used render-patterns, that have been used for rendering by any project in Reaper.
  - Render: GetRenderQueuedProjects - gets the projectfilenames of the projects currently in the render-queue
  - Render: GetRender\_AutoIncrementFilename - gets the current state of the "Silently increment filenames to avoid overwriting"-checkbox from the Render to File-dialog
  - Render: GetRender\_OfflineOnlineMode - gets the current mode of the offline/online-render-dropdownlist from the Render to File-dialog
  - Render: GetRender\_ProjectSampleRateForMix - gets the current state of the "Use project sample rate for mixing and FX/synth processing"-checkbox from the Render to File-dialog
  - Render: GetRender\_ResampleMode - gets the current state of the "Resample mode (if needed)"-dropdownlist from the Render to File-dialog
  - Render: GetRender\_SaveCopyOfProject - gets the current state of the "Save copy of project to outfile.wav.RPP"-checkbox from the Render to File-dialog
  - Render: GetRender\_QueueDelay - Gets the checkstate of the "Delay queued render to allow samples to load"-checkbox of the Render to File-dialog.
  - Render: GetRenderCFG\_Settings\_AIFF - gets the settings of an audio-AIFF-rendercfg-string
  - Render: GetRenderCFG\_Settings\_AudioCD - gets the settings of an audio-AudioCD-rendercfg-string
  - Render: GetRenderCFG\_Settings\_AVI\_Video  - gets the settings of an video-avi-rendercfg-string
  - Render: GetRenderCFG\_Settings\_DDP  - returns, if a renderstring is a valid DDP-renderstring
  - Render: GetRenderCFG\_Settings\_FLAC - gets the settings of an audio-flac-rendercfg-string
  - Render: GetRenderCFG\_Settings\_GIF  - gets the settings of a video-gif-rendercfg-string
  - Render: GetRenderCFG\_Settings\_LCF  - gets the settings of a video-lcf-rendercfg-string
  - Render: GetRenderCFG\_Settings\_M4AMac - gets the settings of an audio M4A for Mac
  - Render: GetRenderCFG\_Settings\_MKV\_Video  - gets the settings of a video-mkv-rendercfg-string
  - Render: GetRenderCFG\_Settings\_MOVMac\_Video - gets the settings of a video-MOV for Mac
  - Render: GetRenderCFG\_Settings\_MP4Mac\_Video - gets the settings of a video-MP4 for Mac
  - Render: GetRenderCFG\_Settings\_MP3  - gets the settings of an audio-mp3-rendercfg-string
  - Render: GetRenderCFG\_Settings\_MP3MaxQuality - gets the settings of an audio-mp3-maxquality-rendercfg-string
  - Render: GetRenderCFG\_Settings\_MP3CBR - gets the settings of an audio-mp3-cbr-rendercfg-string
  - Render: GetRenderCFG\_Settings\_MP3VBR - gets the settings of an audio-mp3-vbr-rendercfg-string
  - Render: GetRenderCFG\_Settings\_MP3ABR - gets the settings of an audio-mp3-abr-rendercfg-string
  - Render: GetRenderCFG\_Settings\_OGG  - gets the settings of an audio-ogg-rendercfg-string
  - Render: GetRenderCFG\_Settings\_OPUS - gets the settings of an audio-opus-rendercfg-string
  - Render: GetRenderCFG\_Settings\_QTMOVMP4\_Video - gets the settings of an audio-opus-rendercfg-string
  - Render: GetRenderCFG\_Settings\_WAV  - gets the settings of an audio-wav-rendercfg-string
  - Render: GetRenderCFG\_Settings\_WAVPACK - gets the settings of an audio-wavpack-rendercfg-string
  - Render: GetRenderCFG\_Settings\_WebMVideo - gets the settings of a video-webm-rendercfg-string
  - Render: GetRenderPreset\_Names - returns the render-presetnames currently stored
  - Render: GetRenderPreset\_RenderTable - returns a RenderTable of all settings of a specific render-preset
  - Render: GetRenderTable\_Project - returns a table with all render-settings of the currently active project
  - Render: GetRenderTable\_ProjectFile - returns a table with all render-dialog-settings from an rpp-projectfile or ProjectStateChunk
  - Render: IsValidRenderTable - returns, if a table is a valid RenderTable  
  - Render: RenderProject\_RenderTable - renders a projectfile or the current active project using a RenderTable
  - Render: RenderProject\_RenderQueue - renders a specific project from the render-queue
  - Render: SetRender\_AutoIncrementFilename - sets the current state of the "Silently increment filenames to avoid overwriting"-checkbox from the Render to File-dialog
  - Render: SetRender\_OfflineOnlineMode - gets the current mode of the offline/online-render-dropdownlist from the Render to File-dialog
  - Render: SetRender\_ProjectSampleRateForMix - sets the current state of the "Use project sample rate for mixing and FX/synth processing"-checkbox from the Render to File-dialog
  - Render: SetRender\_ResampleMode - sets the current state of the "Resample mode (if needed)"-dropdownlist from the Render to File-dialog
  - Render: SetRender\_SaveCopyOfProject - sets the checked-state of the "Save copy of project to outfile.wav.RPP"-checkbox from the Render to File-dialog.
  - Render: SetRender\_QueueDelay - Sets the "Delay queued render to allow samples to load"-checkbox of the Render to File-dialog.
  - Render: SetRenderPreset - sets the values of an existing render-preset
  - Scripts: GetPitchShiftModes.lua - gets a full list of all pitch-shiftmodes of the currently running Reaper-instance, formats it and puts it into clipboard
  - Scripts: ultraschall\_Add\_ExampleScripts\_To\_Reaper.lua - adds the example-scripts into Reaper, can be searched for using examples
  - Scripts: ultraschall\_Help\_Reaper\_Api\_Video\_Documentation.lua - opens the video-api-documenation in the browser
  - Scripts: ultraschall\_Help\_Reaper\_Api\_Web\_Documentation.lua - opens the web-rc-api-documenation in the browser
  - Scripts: ultraschall\_Help\_Reaper\_ConfigVars\_Documentation.lua - opens the config-vars-documenation in the browser
  - Scripts: ultraschall\_OpenFolder\_Api\_Documentation.lua - opens the documentation-folders
  - Scripts: ultraschall\_OpenFolder\_Api\_ExampleScripts.lua - opens the example-scripts-folder
  - Scripts: ultraschall\_Remove\_ExampleScripts\_To\_Reaper.lua - removes the example-scripts from Reaper again
  - Trackmanagement: DeleteTracks\_TrackString - deletes all tracks given in a trackstring
  - UserInterface: GetCheckboxState - gets the current checkstate of a checkbox-hwnd
  - UserInterface: SetCheckboxState - sets a new checkstate of a checkbox-hwnd

  
#### Changes from Beta 2.74 to Beta 2.75
  - ChildScripts: GetScriptParameters - omitted parameters, who were nil or "" -> fixed
  - ChildScripts: GetScriptReturnvalues - omitted returnvalues, who were nil or "" -> fixed
  - ChildScripts: SetScriptParameters - omitted parameters, who were nil or "" -> fixed
  - ChildScripts: SetScriptReturnvalues - omitted returnvalues, who were nil or "" -> fixed
  - Docs: corrected wrong functioncount in docs
  - Docs: CreateTemporaryFileOfProjectfile - moved in docs to Project-Files -> Helper functions
  - Docs: ConfigVars: defpitchcfg - updated PitchShiftmodes
  - Docs: Reaper - updated docs to Reaper 5.978, JS-extension 0.986
  - Docs: Reaper-API - GetSetProjectInfo - added missing information about RENDER\_DITHER (dither/noiseshape stems) and RENDER\_SRATE(when returned RENDER\_SRATE=0)
  - Docs: Reaper ConfigVars - added better description for g\_config\_project
  - Docs: render-codes-decoded-base64-strings.txt - fixed errors, mostly regarding mp3
  - Docs: US-Concepts - added functions to checking datatypes and removed beta-functions information from How to install hotfixes
  - Docs: US-Concepts "Rendering: About Rendering-functions" - added information about RenderProject\_RenderTable as well as removing the info about needing to save current active project before rendering
  - Docs: US-Concepts "Rendering: Change more render-settings in projectfiles" - rewritten, as the difficult alteration of projectfiles isn't needed anymore for rendering the current project
  - Docs: when Beta-functions is enabled, the docgenerator adds beta-functions into docs as well
  - FileIO: CountLinesInFile - errormessages return now the filename as well
  - FileIO: GetAllFilenamesInPath - didn't add a directory-separator between file and path, if path was missing / or \ at the end -> fixed now
  - FileIO: GetLengthOfFile - errormessages return now the filename as well
  - FileIO: ReadBinaryFileFromPattern - errormessages return now the filename as well
  - FileIO: ReadBinaryFileUntilPattern - errormessages return now the filename as well
  - FileIO: ReadBinaryFile_Offset - errormessages return now the filename as well
  - FileIO: ReadFileAsLines_Array - errormessages return now the filename as well
  - FileIO: ReadFullFile - errormessages return now the filename as well
  - FileIO: ReadLinerangeFromFile - errormessages return now the filename as well
  - FileIO: ReadValueFromFile - errormessages return now the filename as well
  - FileIO: WriteValueToFile - errormessages return now the filename as well
  - FileIO: WriteValueToFile_Insert - errormessages return now the filename as well
  - FileIO: WriteValueToFile_InsertBinary - errormessages return now the filename as well
  - FileIO: WriteValueToFile_Replace - errormessages return now the filename as well
  - FileIO: WriteValueToFile_ReplaceBinary - errormessages return now the filename as well
  - Fun: WinterlySnowflakes - only initialized now, when called (used to be initialized at every startup of an US-API-instance)
  - General: cleanup of functions-engine - removed 3569 useless lines, who contained old debugcode sleeping in comments.
  - GFX: GFX\_GetMouseCap - interpreted modifier-keys as mouseclicks, when gfx.getkey had been used in script; mousewheel sometimes kept stuck at one value-> fixed
  - Helpers: Base64\_Encoder - fixed bug that caused encoded strings to end with wrong letter
  - Helpers: CreateUSApiDocs\_HTML - removed, as I'm not using it for ages now
  - Helpers: GetReaperAppVersion - didn't return subversionnumber for pre-releases -> fixed now; returns pre-release-versions as well now
  - Helpers: MB - allows now to choose your own texts for the buttons
  - Helpers: LimitFractionOfFloat - improved code a little for rounding-operations, hope it works now properly
  - Helpers: print2 - didn't show anything, if the first parameter was nil -> fixed now
  - HWND: GetHWND_ArrangeViewAndTimeLine - returns now the HWND of the TCP as well
  - IniFiles: Reaper-Render-Codes.ini - removed, not necessary anymore
  - IniFiles: Reaper-Render-Codes-for-AudioCD.ini - removed, not necessary anymore
  - MediaItems: EnumerateMediaItemsInTrack - had wrong functionname in index -> fixed
  - MediaItems: PreviewMediaFile- uses now Xenakios' function Xen\_StartSourcePreview(more stable that way), has now gain and loop as additional parameters
  - MediaItems: StopAnyPreview - uses now Xenakios' function Xen\_StopSourcePreview(more stable that way)
  - Projectmanagement: all SetProject-functions - added missing ProjectStateChunk-returnvalue to docs
  - Projectmanagement: GetProject\_NumberOfTracks - sped code up by magnitudes for huge projects; parameter ProjectStateChunk wasn't working due stupid typo -> fixed now
  - Projectmanagement: GetProject\_RenderFilename - could produce Lua-error, when no Renderfilename was existing in the projectfile
  - Projectmanagement: GetProject\_RenderPattern - added new render-pattern options to the docs
  - Projectmanagement: GetProject\_RenderRange - added bounds-option for selected regions
  - Projectmanagement: SetProject\_RenderPattern - added new render-pattern options to the docs; stabilized, when no render-pattern was set in project/ProjectStateChunk
  - Projectmanagement: SetProject\_RenderFilename - stabilized, when no render-filename was set in project/ProjectStateChunk
  - Projectmanagement: SetProject\_RenderRange - added bounds-option for selected regions
  - ReaPack: Reapack-API-xml-generator.lua - added installation of Docs-opening-scripts as well.
  - Render: CreateRenderCFG\_AudioCD - improved and lifted limitations for leadin-silence-values
  - Render: CreateRenderCFG\_MP3ABR - reimplemented, supports now "Do not allow joint stereo" and "Write ReplayGain tag"-checkboxes; 
                                      forgot to add FasterEncode-setting -> fixed now                                  
  - Render: CreateRenderCFG\_MP3CBR - reimplemented, supports now "Do not allow joint stereo" and "Write ReplayGain tag"-checkboxes; 
                                      forgot to add FasterEncode-setting -> fixed now
  - Render: CreateRenderCFG\_MP3MaxQuality - reimplemented, supports now "Write ReplayGain tag"-checkbox
  - Render: CreateRenderCFG\_MP3VBR - reimplemented, supports now "Do not allow joint stereo" and "Write ReplayGain tag"-checkboxes; 
                                      forgot to add FasterEncode-setting -> fixed now
  - Render: CreateRenderCFG\_OGG - reimplemented, should be more stable now; lifted limitations with bitrates
  - Render: CreateRenderCFG\_Opus - reimplemented, should be more stable now and supports now all options
  - Render: CreateRenderCFG\_Opus2 - deprecated, use CreateRenderCFG_Opus instead  
  - Render: CreateRenderCFG\_WebMVideo - rewritten, lifted many limitations
  - Render: GetOutputFormat\_RenderCfg - moved to docs-index Rendering of Project -> Analyzing Renderstrings; 
                                         allows now passing a project/projecttab as well
                                         recoded, is now more future-proof 
  - Render: RenderProject - renamed from RenderProject\_RenderCFG, which is still available, but undocumented; reimplemented: sped up rendering the current project by magnitudes; no "save before rendering" necessary anymore; stabilized deleting the targetfile(if selected)
  - Render: RenderProject\_Regions - renamed from RenderProjectRegions\_RenderCFG, which is still available, but undocumented; sped up rendering the current project by magnitudes; no "save before rendering" necessary anymore; stabilized deleting the targetfile(if selected)
                                     parameters renderfilename_with_path and rendercfg are now mandatory
  - Routing: GetTrackAUXSendReceives - recv_tracknumber is now 1-based, as it should be(thanks to woodslanding)
  - Routing: SetTrackAUXSendReceives - recv_tracknumber is now 1-based, as it should be(thanks to woodslanding)
  - Routing: AddTrackAUXSendReceives - had parameters tracknumber and recv_tracknumber accidentally reversed, when not working with StateChunks .. oops -> fixed (thanks to woodslanding)
  - TrackManagement: GetTrackHeightState - stabilised parameter TrackStateChunk, returns now locked-trackstate
  - TrackManagement: SetTrackHeightState - stabilised parameter TrackStateChunk, allows now setting locked-trackstate
  - TrackManagement: SetTracksSelected - when trackstring=nil or "", it deselects all tracks now
  
  ---
  
### 4.00 Beta 2.74: - "Talking Heads - Once in a Lifetime" - 10th of April 2019

   Has now 822 functions, with 22 new ones

   - **Routing** - sped up the routing-functions by magnitudes, who also allow now using TrackStateChunks which can be faster than Reaper's own API-functions

   - **GFX\_GetMouseCap** - this allows you to get mouse-states in gfx-windows, including doubleclick and drag. Much easier than to code it yourself using gfx.mouse_cap.
   
   - **ultraschall.GetUserInputs** - like reaper.GetUserInputs BUT you can safely type commas into its inputfields!

   - **Progressbar** - you can code now your own progressbar, including optionally showing it in the ReaScript-console
   
   - **Move Child-HWND relative within their Parent-HWND** - if you don't want to deal with screen-positions when moving around gui-elements, use GetChildSizeWithinParentHWND and MoveChildWithinParentHWND
   
   - **Vertical Scroll** - works now like a charm
   
   - **Improved Changelog** - will be much more readable for this and future releases
   
   - Bugfixes and many more.
   
#### New features in 4.00beta2.74
  - AudioManagement: GetHWInputs_Aliasnames - returns the input-alias-names and their associated hardware-input-channels
  - AudioManagement: GetHWOutputs_Aliasnames - returns the output-alias-names and their associated hardware-output-channels 
  - ChildScripts: GetScriptIdentifier\_Description - gets the description of your script
  - ChildScripts: SetScriptIdentifier\_Description - sets a description for your script
  - ChildScripts: GetScriptIdentifier\_Title - gets the title of your script; default is the filename
  - ChildScripts: SetScriptIdentifier\_Title - sets the title of your script
  - ExampleScript: Helpers\_ProgressBar\_Example.lua - shows a simple progressbar in the ReaScript-console, that iterates over all filenames in ResourcePath/Effects
  - ExampleScript: Helpers\_ProgressBar\_Example.gif - a demo-gif of ProgressBar\_Example.lua
  - ExampleScript: GFX\_SimpleDrawingTool.lua - a simple drawing-tool demo, that demonstrates GFX\_GetMouseCap()
  - ExampleScript: GFX_SimpleDrawingTool.gif - a demo-gif of SimpleDrawingTool.lua
  - GFX: GFX\_GetMouseCap - checks and returns mouse-clicks in Lua-gfx-windows, including doubleclick, dragging, mousewheel-states, etc. Much more handy than gfx.mouse_cap.
  - Helpers: ConvertIntegerIntoString2 - converts multiple integers into a string, 8 to 32 bit integers can be converted
  - Helpers: ConvertStringToIntegers - converts a string into multiple integers; you can set the size of the integer
  - Helpers: print - prints its values to the ReaScript-console, separating the displayed parameters with newlines now
  - Helpers: print\_update - prints its values to the ReaScript console, but clears the console before displaying. Good for progressbars and displaying a few statuses without constantly scrolling.
  - Helpers: PrintProgressBar - prints a simple progressbar into the ReaScript-console; you should call ResetProgressBar before starting a new progressbar
  - Helpers: ResetProgressBar - resets progressbar-settings, so you can start a new progressbar
  - HWND: GetChildSizeWithinParentHWND - gets dimensions of a childhwnd relative to the position of a parenthwnd
  - HWND: MoveChildWithinParentHWND - moves a childhwnd relative or absolute within its parenthwnd
  - MediaItems: CopyMediaItemToDestinationTrack - copies a MediaItem to a destinationtrack at position. Thanks to [nikolalkc](https://forum.cockos.com/showpost.php?p=2111252&postcount=5) for allowing me to adapt his function
  - Routing: AreAUXSendReceivesTablesEqual - compares two AllAUXSendReceives-tables, as returned by GetAllAUXSendReceives and GetAllAUXSendReceives2
  - Routing: AreHWOutsTablesEqual - compares two AllHWOuts-tables, as returned by GetAllHWOuts and GetAllHWOuts2
  - Routing: AreMainSendsTablesEqual - compares two AllMainSends-tables, as returned by GetAllMainSendStates and GetAllMainSendStates2
  - TrackManagement: GetTracknumberByGuid - gets a tracknumber and MediaTrack-object by guid
  - UserInterface: SetVerticalRelativeScroll - like SetVerticalScroll but sets the arrange-vertical-scroll, relative to it's current vscroll-position
  - Ultraschall: GetTypeOfTrack - returns the type of a track, either StudioLink/StudioLinkOnAir or SoundBoard
  - Ultraschall: GetAllAUXSendReceives2 - like GetAllAUXSendReceives, but returns type of track as well
  - Ultraschall: GetAllHWOuts2 - like GetAllHWOuts, but returns type of track as well
  - Ultraschall: GetAllMainSendStates2 - like GetAllMainSendStates, but returns type of track as well
  - Ultraschall: IsTrackSoundboard - returns, if a track is a valid Ultraschall-Soundboard-track
  - Ultraschall: IsTrackStudioLink - returns, if a track is a valid StudioLink-track
  - Ultraschall: IsTrackStudioLinkOnAir - returns, if a track is a valid StudioLinkOnAir-track
  
  
#### Changes from Beta 2.73 to Beta 2.74
  - Docs: Functions reference - added pan-law info to the descriptions for many routing-functions
  - Docs: GetLastCursorPosition - added info about limitations in Reaper
  - Docs: GetScriptIdentifier - moved in the index to Api-Helper functions -> Child Scripts, where it belongs to
  - Docs: GetScriptReturnvalues - corrected docs and cleared them up a little
  - Docs: ReaperApidocs and ConfigVar-docs: updated to Reaper 5.974 and JS-extension 0.980
  - Docs: ReaperApidocs: added info about JS\_Mouse\_GetState and fixed Markdown-issues with JS\_Window\_GetScrollInfo and JS\_Window\_SetScrollPos
  - Docs: Reaper-ConfigVars: added new settings in video\_colorspace from Reaper 5.972 and pre-release onlys to labelitems2, pooledenvtranstime and video\_defimglen
  - Docs: relayouted changelog for beta 2.72 upwards, the featurelist should be better readable, now
  - Docs: SetVerticalZoom - added info into description about how to do relative-vertical-zoom
  - ExampleScript: renamed the scripts and demogifs, so the names reflect more, of what category the scripts are; removed Track/Item-extstate scripts, as this feature is deprecated
  - ExtStates: GetTrackExtState - deprecated, as Reaper will have that feature in a future version in better
  - ExtStates: SetTrackExtState - deprecated, as Reaper will have that feature in a future version in better
  - ExtStates: GetItemExtState - deprecated, as Reaper will have that feature in a future version in better
  - ExtStates: SetItemExtState - deprecated, as Reaper will have that feature in a future version in better
  - Helpers: print - renamed to print_alt, print itself now separates the parameters with newlines(not two spaces)
  - Helpers: SetTrackStateChunk_Tracknumber - undo parameter wasn't used properly -> fixed now
  - HWND: GetRenderToFileHWND - fixed bug, that sometimes caused the function not to find the RenderToFile-window
  - HWND: IsValidHWND - shouldn't crash anymore on Mac, when passing a non-existing HWND.
  - Routing: ApplyAllHWOuts - sped up code by magnitudes; allows now setting the HWOut-table by guid; that way, you can apply stored hwouts correctly, even if trackorder changes
  - Routing: ApplyAllAUXSendReceives - sped up code by magnitudes; allows now setting the HWOut-table by guid; that way, you can apply stored routings correctly, even if trackorder changes
  - Routing: ApplyAllMainSendStates - fixed error in docs; allows now setting the HWOut-table by guid; that way, you can apply different MainSends correctly, even if trackorder changes
  - Routing: AddTrackHWOut - rewritten, is much faster now and supports now adding to trackstatechunks as well; removed useless parameter undo
  - Routing: AddTrackAUXSendReceives - rewritten, is much faster now and supports now adding to trackstatechunks as well; removed useless parameter undo
  - Routing: CountTrackHWOuts - allows now TrackStateChunks as well
  - Routing: CountTrackAUXSendReceives - allows now TrackStateChunks as well
  - Routing: DeleteTrackAUXSendReceives - sped up; supports now deleting from TrackStateChunks as well; removed useless parameter undo
  - Routing: DeleteTrackHWOut - sped up; supports now deleting from TrackstateChunks as well when tracknumber=-1; removed useless parameter undo
  - Routing: GetAllHWOuts - sped up; stores now the guids of the track and the receive tracks as well; allows you to keep right tracks and receive-tracks, even if trackorder changes
  - Routing: GetAllAUXSendReceives - sped up; stores now the guid of the tracks as well; allows you to keep right track, even if trackorder changes
  - Routing: GetAllMainSendStates - sped up; stores now the guid of the tracks as well; allows you to keep right track, even if trackorder changes
  - Routing: GetTrackAUXSendReceives - sped up; supports now getting from TrackstateChunks as well when tracknumber=-1
  - Routing: GetTrackHWOut - sped up; supports now getting from TrackstateChunks as well when tracknumber=-1
  - Routing: GetTrackMainSendState - sped up execution when not working with TrackStateChunks
  - Routing: SetTrackMainSendState - sped up execution when not working with TrackStateChunks; returns changed TrackStateChunk now only, when working with TrackStateChunks
  - Routing: SetTrackAUXSendReceives - sped up execution; supports now TrackStateChunks as well, when tracknumber=-1; removed useless parameter undo
  - Routing: SetTrackHWOut - sped up execution; supports now TrackStateChunks as well, when tracknumber=-1; removed parameter undo, as it useless, now
  - StateChunks: GetTrackStateChunk_Tracknumber - forgot to remove retval "overflow" from docs -> fixed
  - UserInterface: GetUserInputs - you can now enter commas into inputfields; parameter length renamed to values_length and is now optional; nil for default length 10; -1 for autolength; requested by [woodslanding](https://forum.cockos.com/showpost.php?p=2116685&postcount=141)
  - UserInterface: GetVZoom - renamed to GetVerticalZoom for better readability, sorry for any inconvenience
  - UserInterface: SetVZoom - renamed to SetVerticalZoom for better readability, sorry for any inconvenience
  - UserInterface: SetVerticalScroll - last minute changes prevented the parameter from being passed to the function -> fixed
  - Ultraschall: CountUltraschallEffectPlugins - removed, as it was useless
  - Ultraschall: pause\_follow\_one_cycle - moved to Ultraschall Specific in the index of the docs
  
  ---
  
### 4.00 Beta 2.73: - "Radiohead - Bangers'n'Mash" - 9th of March 2019

   Has now 800 functions, with 20 new ones

   - **New HWNDs** to get, like Render Queue, Preferences, Project Settings and more
   
   - **Routing-Convenience Features** to work better with Routing-stuff. Includes now MKVOL from/to DB-converter for that!
   
   - **print3** outputs it's parameters to the Clipboard.

#### New features in 4.00beta2.73

  - Config: GetSetConfigAutoMute - gets/sets the automute-config-variable
  - Config: GetSetConfigAutoMuteFlags - gets/sets the automuteflags-config-variable
  - Config: GetSetConfigAutoSaveInt - gets/sets the autosaveint-config-variable
  - Config: GetSetConfigAutoSaveMode - gets/sets the autosavemode-config-variable
  - Helper: DB2MKVOL - converts a dB-value into its MKVOL-representation, which can be used by routing-functions for the volume
  - Helper: MKVOL2DB - converts a MKVOL-value(as used by volume in routing-settings) into its dB-representation
  - Helper: print3 - like print and print2, but puts the parameters into the clipboard instead
  - HWND: GetRenderQueueHWND - gets the HWND of the Render-Queue-window, if opened
  - HWND: GetProjectSettingsHWND - gets the HWND of the Project Settings-window, if opened
  - HWND: GetSaveLiveOutputToDiskHWND - gets the HWND of the Save Live Output To Disk-window, if opened
  - HWND: GetConsolidateTracksHWND - gets the HWND of the Consolidate Tracks-window, if opened
  - HWND: GetExportProjectMIDIHWND - gets the HWND of the Export Project MIDI-window, if opened
  - HWND: GetProjectDirectoryCleanupHWND - gets the HWND of the Project Directory Cleanup-window, if opened
  - HWND: GetBatchFileItemConverterHWND - gets the HWND of the Batch File/Item Converter-window, if opened
  - Routing: ClearRoutingMatrix - clears the routing-matrix, either completely or just parts of it(Send/Receive, HWOuts, MasterSends) including or excluding the Master-Track
  - Routing: GetAllHWOuts - returns a table with all HWOut-settings of all tracks of the current project
  - Routing: GetAllAUXSendReceive - returns a table with all Send/Receive-settings of all tracks of the current project
  - Routing: GetAllMainSendStates - returns a table with all MainSend(Master Send)-settings of all tracks of the current project
  - Routing: ApplyAllHWOuts - applies a table, as returned by GetAllHWOuts to all tracks. That way, you can easily alter HWOuts of multiple tracks in that table, before passing it to ApplyAllHWOuts
  - Routing: ApplyAllAUXSendReceives - applies a table, as returned by GetAllAUXSendReceive to all tracks. That way, you can easily alter AUXSendReceives of multiple tracks in that table, before passing it to ApplyAllAUXSendReceives
  - Routing: ApplyAllMainSendStates - applies a table, as returned by GetAllMainSendStates to all tracks. That way, you can easily alter MainSend(Master-Send)-states of multiple tracks in that table, before passing it to ApplyAllMainSendStates


#### Changes from 4.00beta2.72 to 4.00beta2.73

  - ChildScripts: Main\_OnCommandByFilename - fixed bug with Scriptidentifier-creation
  - ChildScripts:MIDI\_OnCommandByFilename - fixed bug with Scriptidentifier-creation
  - Config: GetIniFileValue - improved code
  - Config: SetIniFileValue - fixed bug that caused inifiles to explode in size
  - Docs: Reaper Api docs: Video Processor: corrected YET ANOTHER Markdown-f....p in the example code of chapter Coding Introduction
  - Docs: Reaper-Docs: updated to Reaper 5.972
  - Docs: Reaper-Api-docs: fixed further layout-problems with Markdown in some descriptions
                     I really, really, really, really, really, really, really need to write my own MarkDown-dialect.
                     It makes me nuts, having to deal with Markdown's ambiguities...

  - Routing: CountTrackAUXSendReceives - when track isn't found, it returns now an error-message
  - Routing: DeleteTrackAUXSendReceives - allows now to delete all AuxSendReceives of a track at once, when idx=-1
  - Routing: DeleteTrackHWOut - allows now to delete all HWOuts of a track at once, when idx=-1
  - Routing: GetTrackAUXSendReceives - had internal variable exposed -> fixed now
  - Routing: SetTrackHWOut - fixed bug with an incorrect idx-numbering
  - Routing: SetTrackAUXSendReceives - fixed bug with an incorrect idx-numbering
  - Script-Identifier: Ultraschall.ScriptIdentifier - fixed bugs with Scriptidentifier-creation
  
  ---
  
### 4.00 Beta 2.72: - "Blue Oyster Cult - Don't fear the Reaper" - 1st of March 2019

   Has now 780 functions, with 80 new ones
    
   Among them new features, like:
   
   - **ReaPack installable**, it can be installed using ReaPack now, using [https://github.com/Ultraschall/ultraschall-lua-api-for-reaper/raw/master/ultraschall\_api\_index.xml](https://github.com/Ultraschall/ultraschall-lua-api-for-reaper/raw/master/ultraschall_api_index.xml) - [Request by X-Raym](https://forum.cockos.com/showpost.php?p=2070423&postcount=62)
   
   - **Defer-functions**, that allow setting, how often a specific defer-loop shall be executed, every n'th cycle/second. They also
   allow being terminated from inside and outside the current script.
    
   - **ChildScripts**, that allow you to run scripts as multiple script-instances, pass parameters and returnvalues to and from them - [Request by lokasenna](https://forum.cockos.com/showpost.php?p=2000862&postcount=1)
   
   - **Get HWNDS**, get numerous HWNDs, including the one of your gfx.init-window, ArrangeView, Timeline, Render to File-dialog, Actions-dialog, etc - [Request by Sexan](https://forum.cockos.com/showpost.php?p=2099145&postcount=255)
    
   - **print and print2**, replaces the unuseable print-function from Lua
    
   - **new backgroundscripts**, who monitor statechanges of playstate, editcursorposition and loop-button
   
   - **Custom Markers and Regions**, that follow the scheme "_custommarkername: text", that can be easily managed.  
                                     Have multiple markertypes with custom-markers and custom-regions with this feature. - request by VanillaChief
    
   - **Reaper-Internals Docs**, updated to Reaper 5.971(including the new Video Processor-docs), SWS 2.10.0.1, JS-Extension 0.971 and ReaPack.
   
   - many, many, many, many bugfixes
    

#### New features in 4.00beta2.72
  - API: ultraschall.hotfixdate - holds the release-date of the currently installed hotfix, returned by GetApiVersion now
  - ArrangeView: GetVerticalScroll - gets the current vertical-scroll-factor of the arrangeview
  - ArrangeView: SetVerticalScroll - sets a new vertical-scroll-factor of the arrangeview
  - BackgroundScripts: new background-script - ultraschall\_track\_old\_playstate.lua - stores old playstate into extstate ultraschall->last\_playstate
  - BackgroundScripts: GetLastPlayState - returns the last playstate before the current one
  - ChildScripts: Main\_OnCommandByFilename - runs a command by its filename instead of the ActionCommandID/command-id; 
                                returns a unique script-identifier for the started script-instance, that you can use as
                                extstate to communicate with that script;
                                allows passing of parameters to the started script!
  - ChildScripts: MIDI\_OnCommandByFilename - runs a command in the MIDI-Editor context by its filename instead of the ActionCommandID/command-id;
                                returns a unique script-identifier for the started script-instance, that you can use as
                                extstate to communicate with that script
                                allows passing of parameters to the started script!
  - Child-Scripts: SetScriptParameters - sets parameters for a child-script, as started by Main\_OnCommandByFilename and MIDI\_OnCommandByFilename
  - Child-Scripts: GetScriptParameters - gets parameters for a child-script, as started by Main\_OnCommandByFilename and MIDI\_OnCommandByFilename
  - Child-Scripts: GetScriptReturnvalues - gets returnvalues, that a script-instance with a specific scriptidentifier sent to the current script
  - Child-Scripts: SetScriptReturnvalues - sends returnvalues to a script-instance with a specific scriptidentifier
  - Child-Scripts: GetScriptReturnvalues\_Sender - gets, which child-scripts(and their corresponding ScriptIdentifier) have sent return-values to the current script
  - Config: GetSetIntConfigVar - gets/sets a configuration-variable of the type integer-bitfield
  - Config: GetIniFileValue - gets an ini-value from an ini-file; unlike SWS's own functions for that(2.9.7 and earlier), this has no problems with Umlauts in the path
  - Config: SetIniFileValue - sets an ini-value into an ini-file; unlike SWS's own functions for that(2.9.7 and earlier), this has no problems with Umlauts in the path
  - Docs: US\_Api\_AUD.html - added
  - Docs: US\_Api\_Concepts\_AUD.html - added
  - Docs: US\_Api\_Concepts\_DOC.html - added
  - Docs: US\_Api\_Concepts\_GFX.html - added
  - Docs: US\_Api\_Concepts\_GUI.html - added
  - Docs: US\_Api\_Concepts\_VID.html - added
  - Docs: US\_Api\_DOC.html - added
  - Docs: US\_Api\_GFX.html - added
  - Docs: US\_Api\_GUI.html - added
  - Docs: US\_Api\_VID.html - added
  - Docs: US\_Api-AUD.USDocML - added
  - Docs: US\_Api-DOC.USDocML - added
  - Docs: US\_Api-GFX.USDocML - added
  - Docs: US\_Api-GUI.USDocML - added
  - Docs: US\_Api-VID.USDocML - added
  - Docs: NewUltraschallDoc\_VID\_Converter.lua - added
  - Docs: NewUltraschallDoc\_GUI\_Converter.lua - added
  - Docs: NewUltraschallDoc\_DOC\_Converter.lua - added
  - Docs: NewUltraschallDoc\_AUD\_Converter.lua - added
  - Docs: NewUltraschallConceptsDocConverter\_AUD.lua - added
  - Docs: NewUltraschallConceptsDocConverter\_DOC.lua - added
  - Docs: NewUltraschallConceptsDocConverter\_GFX.lua - added
  - Docs: NewUltraschallConceptsDocConverter\_GUI.lua - added
  - Docs: NewUltraschallConceptsDocConverter\_VID.lua - added
  - Docs: Child Scripts: Introduction - added chapter
  - Docs: Child Scripts: The unique ScriptIdentifier - added chapter
  - Docs: Child Scripts: Running Childscripts - added chapter
  - Docs: Child Scripts: Passing Parameters and Returnvalues - added chapter
  - Docs: DeferScripts: Introduction to Ultraschall's Defer-functions - added chapter
  - Docs: DeferScripts: Special Defer-loops in the Ultraschall-API - added chapter
  - Docs: DeferScripts: Stopping Defer-loops from in- and outside of scripts - added chapter
  - Docs: Concepts: Error Messaging System: Other helpers for Error-Messaging-system - added chapter
  - Docs: Concepts: Installation - added instructions on how to install the Ultraschall-API using ReaPack-package-manager[https://reapack.com/](https://reapack.com/)
  - Docs: Concepts: Markers and Regions: Custom-Markers and Custom-Regions
  - ReaperDocs: added new SWS2.10.0.1-functions
  - ReaperDocs: updated new JS-extension-plugin-functions, up to 0.971
  - ReaperDocs: added new Video-Processor-Api-functions, as of Reaper 5.971
  - ReaPack: ReaPack-functions - added ReaPack-functions to Reaper-Internals docs
  - Defer: GetDeferIdentifier - gets the identifier of a Defer1 to Defer20-cycle of the current script
  - Defer: Defer1 to Defer20 - run a customized defer-cycle, in which you can decide, how often it should be run. You can also stop such a defer-cycle from in/outside the script using StopDeferCycle.
                        For that, Defer1 to Defer20 will return an identifier, which can be used to stop this specific defer-cycle.
                        You should only use each DeferXX-cycle once in a script-instance, or the timing will become corrupt!
  - Defer: StopDeferCycle - stops a Defer1 to Defer20-defer-instance from a script-instance
  - Dialogs: GetUserInputs - gets the user-input. Like Reaper's own GetUserInputs but a different parameter-scheme, that should be easier to handle.
  - Dialogs: BrowseForOpenFiles - utilizes JS\_Dialog\_BrowseForOpenFiles-function, but returns the files and paths in a more comfortable way
  - Editing: RippleCut\_Regions - ripple-cuts all regions between startposition and endposition and moves all regions after endposition toward projectstart by difference between startposition and endposition
  - ErrorMessages: ShowErrorMessagesInReascriptConsole - toggles, if errormessages shall be shown in the ReaConsole immediately, when they happen
  - ExampleScript: A\_Simple\_EventManager\_with\_Backgroundhelpers\_and\_Defer01.lua - a simple demo-eventmanager, that employs the background-helper-scripts and the Defer01-function
  - FileIO: GetAllRecursiveFilesAndSubdirectories - returns all subdirectories with all their files with full path of a directory
  - GFX: GFX\_DrawThickRoundRect - draws a round-rectangle with variable thickness
  - GFX: GFX\_BlitFramebuffer - blits the content of a framebuffer into the drawing-buffer; will resize, if necessary and retains aspect-ratio
  - Helpers: SplitStringAtNULLBytes - splits a string at NULL-bytes ( \0 )
  - Helpers: Base64\_Encoder - encodes a string into a Base64-encoded string
  - Helpers: CreateTemporaryFileOfProjectfile - creates a valid temporary-copy of an rpp-projectfile; use nil for the currently opened one(must be saved first)
  - Helpers: Base64\_Decoder - decodes a Base64-encoded string
  - Helpers: StateChunkLayouter - layouts statechunks according the layouting rules of rpp-projectfiles; makes parsing them much easier
  - Helpers: print - replacement for Lua's own print-function(which is quite useless in Reaper); displays the printed parameters in the ReaScript-console
  - Helpers: print2 - like print, but displays the parameters as a messagebox instead
  - Helpers: ConvertIntegerToBits - converts an integer-value into its individual bitvalues
  - Helpers: ReverseEndianess\_Byte - changes endianess of a byte-value
  - Helpers: ConvertIntegerIntoString - converts the individual bytes of an integer into a string  
  - Helpers: ReplacePartOfString - replaces a part of a string, beginning from an offset and up to a length; can be used for easy string insertion as well
  - HWND: IsValidHWND - checks, if a HWND is a valid one
  - HWND: GFX\_Init - opens a new gfx-window. Like gfx.init, but this returns its HWND-windowhandler-object as well
  - HWND: GFX\_GetWindowHWND - gets the HWND of a opened gfx-window, opened with ultraschall.GFX\_Init
  - HWND: GetReaperWindowAttributes - returns several attributes of the Reaper-window, like size/position, active-state, childwindows, etc
  - HWND: GetTopmostHWND - returns the topmost hwnd(window-handler) of a child-hwnd; returns also all the parent-hwnds
  - HWND: Windows\_Find - finds Reaper-windows by title and returns their HWNDs
  - HWND: GetAllReaScriptIDEWindows - returns the HWNDs of all opened ReaperIDE-windows
  - HWND: GetReaScriptConsoleWindow - returns the HWND of the ReaScript-console, if open at all.
  - HWND: HasHWNDChildWindowNames - allows to check, if a certain HWND has child-hwnds of certain name(s). Good to make probability-checks for the right Reaper-windows-check.
  - HWND: GetRenderToFileHWND - returns the HWND of the Render to File-dialog
  - HWND: GetActionsHWND - returns the HWND of the Actions-dialog
  - HWND: GetVideoHWND - returns the HWND of the Video Window
  - HWND: GetHWND_ArrangeViewAndTimeLine - returns the HWND-window-handler for the tracklist- and timeline-area of the arrangeview  
  - Markers: GetAllCustomMarkers - gets all custom-markers of a certain name, as table
  - Markers: GetAllCustomRegions - gets all custom-regions of a certain name, as table
  - Markers: CountAllCustomMarkers - counts all custom-markers of a certain name
  - Markers: CountAllCustomRegions - counts all custom-regions of a certain name
  - Markers: EnumerateCustomMarkers - enumerates a custom-marker of a certain name
  - Markers: EnumerateCustomRegions - enumerates a custom-region of a certain name
  - Markers: DeleteCustomMarkers - deletes a custom-marker of a certain name
  - Markers: DeleteCustomRegions - deletes a custom-region of a certain name
  - Markers: AddCustomMarker - adds a custom-marker of a certain name
  - Markers: AddCustomRegion - adds a custom-region of a certain name
  - Markers: SetCustomMarker - sets a custom-marker of a certain name
  - Markers: SetCustomRegion - sets a custom-region of a certain name
  - Markers: GetNextFreeRegionIndex - gets the next free region-shown-indexnumber
  - Markers: IsMarkerValidCustomMarker - checks a marker, if it's a valid custom-marker
  - Markers: IsRegionValidCustomRegion - checks a marker, if it's a valid custom-region
  - MediaItems: EnumerateMediaItemsInTrack - readded, got lost in earlier versions somehow, leading to GetTrackLength being useless
  - Render: IsReaperRendering - returns, if Reaper is currently rendering a file
  - Render: GetProject\_RenderOutputPath - returns the output-directories for rendered files from a projectfile
  - Script-Identifier: GetScriptIdentifier - returns a unique identifier-string for the current script-instance, that can be used to send command/string to this scriptinstance
  - Trackstates: GetTrackSelection\_TrackStateChunk - gets, if a track in a StateChunk is selected; works only with TrackStateChunks from ProjectStateChunks
  - Trackstates: SetTrackSelection\_TrackStateChunk - sets a track in a StateChunk selected; works only with TrackStateChunks from ProjectStateChunks
  - Transport: SetLoopState - sets the current loop-state(button)
  - Transport: GetLoopState - gets the current state of loop
  - Transport: GetLastLoopState - gets the last loop-state, needs RunBackgroundHelperFeatures to be run first
  - Ultraschall: CountUltraschallEffectPlugins - counts number of instances of StudioLink, StudioLinkOnAir, Ultraschall-Soundboard and Ultraschall\_Dynamics-plugins in a track. Also returns a table with all bypass/offline-states
  - Video: VID\_VideoUIStateCoords2Pixels - converts the coordinates, returned by the video-processor-function ui\_get\_state into pixels
  - Video: VID\_Pixels2VideoUIStateCoords - converts back the coordinates from pixels into the coordinates returned by the video-processor-function ui\_get\_state 

  
#### Changes from 4.00beta2.7 to 4.00beta2.72
  - Api: GetApiVersion - updated versionsnumbering; returns now the release-date of the currently installed hotfixes
  - Api: hotfixes are now loaded before beta-functions
  - Api: requires now version 0.963 of Julian Sader's plugin
  - Api: ultraschall\_api.lua - checks now, if it is run within the beta-engine-parts of this API and prevents including it if necessary. This prevents duplicate execution of functions, when coding within the beta-functions-engine-scripts.
  - ArrangeView: IsValidArrangeviewSnapshot - checks now vertical-scrollfactor as well
  - ArrangeView: IsValidArrangeviewSnapshot - improved checking for validity of parameters
  - ArrangeView: RestoreArrangeviewSnapshot - improved checking for validity of parameters
  - ArrangeView: RestoreArrangeviewSnapshot - restores now vertical-scrollfactor as well
  - ArrangeView: RetrieveArrangeviewSnapshot - improved checking for validity of parameters
  - ArrangeView: RetrieveArrangeviewSnapshot - retrieves now vertical-scrollfactor as well
  - ArrangeView: StoreArrangeviewSnapshot - improved checking for validity of parameters
  - ArrangeView: StoreArrangeviewSnapshot - stores now vertical-scrollfactor as well
  - Colors: RGB2Grayscale - improved checking for validity of parameters
  - Config: GetIniFileExternalState - using now the SetIniFileValue-function for getting the ini-file-value
  - Config: GetReaperWorkDir - using now the SetIniFileValue-function for getting the ini-file-value
  - Config: GetUSExternalState - using now the SetIniFileValue-function for getting the ini-file-value
  - Config: SetIniFileExternalState - using now the SetIniFileValue-function for setting the ini-file-value
  - Config: SetPlayCursorWidth - using now the SetIniFileValue-function for setting the ini-file-value
  - Config: SetReaperWorkDir - using now the SetIniFileValue-function for setting the ini-file-value
  - Config: SetStartNewFileRecSizeState - using now the SetIniFileValue-function for setting the ini-file-value
  - Config: SetUSExternalState - converts now all passed parameters to string, regardless of their type
  - Config: SetUSExternalState - using now the SetIniFileValue-function for setting the ini-file-value
  - Dialogs: CloseReaConsole - renamed to CloseReaScriptConsole, as the ReaConsole is something different; added plausability-checks and localization to get the right ReaScript-Console-window
  - Dialogs: ultraschall.MB - converts now all passed data into string, no matter what type it is
  - Docs: Changelog - fixed Markdown-formatting-issues
  - Docs: Docgenerator - reworked the docengine-creator for more fluffy working of it
  - Docs: docs generate and include now beta-functions as well
  - Docs: docs use now GetApiVersion for displaying version-numbering
  - Docs: Introduction/Concepts: Datatypes: Checking Datatypes - fixed Markdown-issues  
  - Docs: MB - moved to User Interface -> Dialogs in the docs
  - Envelopes: CountEnvelopePoints - improved checking for validity of parameters
  - Envelopes: CountMuteEnvelopePoints - improved checking for validity of parameters
  - Envelopes: GetClosestEnvelopePointIDX_ByTime - improved checking for validity of parameters
  - Envelopes: GetEnvelopePoint - improved checking for validity of parameters
  - Envelopes: GetEnvelopePointIDX_Between - improved checking for validity of parameters
  - Envelopes: SetEnvelopeHeight - improved checking for validity of parameters
  - ErrorMessages: AddErrorMessage - when set with ShowErrorMessagesInReascriptConsole, it shows now errormessages immediately in the ReaScriptConsole
  - ErrorMessages: ReadErrorMessage - accepted a string for the integer-parameter errornumber which rendered the function useless -> fixed
  - ErrorMessages: ReadErrorMessage - improved error-message, errornumber now checks, if being an integer
  - FileIO: CreateValidTempFile - added info about the path of the created tempfile/tempfilename
  - FileIO: GetAllFilesnamesInPath renamed to GetAllFilenamesInPath - stupid typo in functionname...sorry for any inconveniences  
  - FileIO: GetLengthOfFile - improved checking for validity of parameters
  - FileIO: MakeCopyOfFile\_Binary - added check, if a file is already in use and can't be read
  - FileIO: ReadBinaryFileFromPattern - added check, if a file is already in use and can't be read
  - FileIO: ReadBinaryFileUntilPattern - added check, if a file is already in use and can't be read
  - FileIO: ReadFullFile - added check, if a file is already in use and can't be read
  - FileIO: ReadFullFile - produced Lua-error, when passing a boolean as filename\_with\_path -> fixed
  - FileIO: ReadValueFromFile - produced Lua-error, when passing a boolean as filename\_with\_path -> fixed
  - FileIO: WriteValueToFile - converts now the parameter value to a string, regardless of it's original datatype
  - FileIO: WriteValueToFile\_Insert - converts now the parameter value to a string, regardless of it's original datatype
  - FileIO: WriteValueToFile\_InsertBinary - converts now the parameter value to a string, regardless of it's original datatype
  - FileIO: WriteValueToFile\_Replace - converts now the parameter value to a string, regardless of it's original datatype
  - FileIO: WriteValueToFile\_ReplaceBinary - converts now the parameter value to a string, regardless of it's original datatype
  - Fun: WinterlySnowflakes - preparation of the snowflakes produced wrong default-values of gfx.x, gfx.y, gfx.r, gfx.g, gfx.g -> fixed
  - Helpers: CloseReaConsole - updated to behavior of version 0.963 of the JS-plugin
  - Helpers: GetPath - when sep is nil, it returns now the path until the last useful separator, either \\ or /
  - Helpers: RunBackgroundHelperFeatures - allows now switching off the background-scripts
  - Helpers: SearchStringInString - dropped nested searchstring-functionality as it was useless; recoded from scratch for more stability
  - Markers: GetAllRegionsBetween - didn't return regions, that began before startposition and ended after endposition -> fixed
  - Markers: GetClosestNextMarker - improved checking for validity of parameters
  - Markers: GetClosestNextRegionEdge - improved checking for validity of parameters
  - Markers: GetMarkerByScreenCoordinates - returned useless newlines -> fixed now
  - Markers: GetMarkerByTime - returned useless newlines -> fixed now
  - Markers: GetMarkerByTime - using now the SetIniFileValue-function for getting the ini-file-value
  - Markers: GetRegionByScreenCoordinates - returned useless newlines -> fixed now
  - Markers: GetRegionByTime - returned useless newlines -> fixed now
  - Markers: GetRegionByTime - using now the SetIniFileValue-function for getting the ini-file-value
  - Markers: GetTimeSignaturesByTime - using now the SetIniFileValue-function for getting the ini-file-value
  - Markers: IsMarkerEdit - improved checking for validity of parameters
  - Markers: IsMarkerNormal - improved checking for validity of parameters
  - Markers: IsRegionEditRegion - improved checking for validity of parameters
  - Markers: IsRegionPodrange - improved checking for validity of parameters
  - Markers: MoveMarkersBy - did move regions as well, though I claimed the opposite..oops -> fixed
  - MediaItem: GetMediafileAttributes - added info into the docs about rpp-projects, which will create a proxy file, when getting the mediafile-attributes
  - MediaItem: InsertMediaItemFromFile - added MediaTrack and the new editcursorposition as retvals; the latter used to be third retval without being documented as such -> moved to the end of the retvals sorry for that inconvenience
  - MediaItems: GetNextClosestItemEdge - improved checking for validity of parameters
  - MediaItems: GetPreviousClosestItemEdge - improved checking for validity of parameters
  - MuteButtons: GetNextMuteState - improved checking for validity of parameters
  - MuteButtons: GetPreviousMuteState - improved checking for validity of parameters
  - MuteButtons: ToggleMute - improved checking for validity of parameters
  - MuteButtons: ToggleMute_TrackObject - improved checking for validity of parameters
  - Navigation: JumpBackwardBy - improved checking for validity of parameters
  - Navigation: JumpBackwardBy\_Recording - improved checking for validity of parameters
  - Navigation: JumpForwardBy - improved checking for validity of parameters
  - Navigation: JumpForwardBy\_Recording - improved checking for validity of parameters
  - ProjectManagement: GetAllLockedTracks - improved checking for validity of parameters
  - ProjectManagement: GetAllSelectedTracks - improved checking for validity of parameters
  - ProjectManagement: GetProject_GetMarker - could produce a Lua-error, when filename was nil -> fixed
  - ProjectManagement: GetProject_GetRegion - could produce a Lua-error, when filename was nil -> fixed
  - ProjectManagement: GetProject\_Length - fixed issue with projectfiles smaller than 1000 bytes, which couldn't be parsed
  - ProjectManagement: GetProject\_MasterGroupFlagsHighState - improved checking for validity of parameters
  - ProjectManagement: GetProject\_MasterGroupFlagsState - improved checking for validity of parameters
  - ProjectManagement: SetProject\_RenderPattern - didn't save render-patterns with spaces in them properly
  - ReaperDocs: fixed tons of MarkDown-layout errors.
  - ReaperDocs: Functionnames-titles in the individual entries are not linked anymore, but rather the > at the left side of the title now
  - ReaperDocs: JS-extension - updated to 0.964
  - ReaperDocs: OscLocalMessageToHost - didn't show title -> fixed
  - ReaperDocs: SWS - updated to 2.10.1
  - ReaperDocs: updated to 5.97
  - Render: CreateRenderCFG\_AIFF - returned the wrong render-cfg-string due a stupid typo -> fixed
  - Render: GetProject\_RenderFilename - sometimes returned one " at the end -> fixed
  - Render: RenderProject\_RenderCFG - if you use nil as renderfilename\_with\_path, it will render as renderfilename using the filename/renderpattern already set in the project didn't return correct filecount if rendering was canceled, leading to possible error-message -> fixed
  - Render: RenderProjectRegions\_RenderCFG - if you use nil as renderfilename\_with\_path, it will render as renderfilename using the filename/renderpattern already set in the project
  - TrackStates: GetTrackAutomodeState - improved checking for validity of parameters
  - TrackStates: GetTrackAutoRecArmState - improved checking for validity of parameters
  - TrackStates: GetTrackBeatState - improved checking for validity of parameters
  - TrackStates: GetTrackBusCompState - improved checking for validity of parameters
  - TrackStates: GetTrackBypFXState - improved checking for validity of parameters
  - TrackStates: GetTrackFreeModeState - improved checking for validity of parameters
  - TrackStates: GetTrackGroupFlags\_HighState - improved checking for validity of parameters
  - TrackStates: GetTrackGroupFlagsState - improved checking for validity of parameters
  - TrackStates: GetTrackHeightState - improved checking for validity of parameters
  - TrackStates: GetTrackIcon\_Filename - improved checking for validity of parameters
  - TrackStates: GetTrackID - improved checking for validity of parameters
  - TrackStates: GetTrackINQState - improved checking for validity of parameters
  - TrackStates: GetTrackIPhaseState - improved checking for validity of parameters
  - TrackStates: GetTrackIsBusState - improved checking for validity of parameters
  - TrackStates: GetTrackLayoutNames - improved checking for validity of parameters when no layout available made a Lua-error -> fixed now
  - TrackStates: GetTrackLength - improved checking for validity of parameters
  - TrackStates: GetTrackLockState - improved checking for validity of parameters
  - TrackStates: GetTrackMainSendState - improved checking for validity of parameters
  - TrackStates: GetTrackMidiBankProgFn - improved checking for validity of parameters
  - TrackStates: GetTrackMidiColorMapFn - improved checking for validity of parameters
  - TrackStates: GetTrackMidiCTL - improved checking for validity of parameters
  - TrackStates: GetTrackMidiInputChanMap - improved checking for validity of parameters
  - TrackStates: GetTrackMIDIOutState - improved checking for validity of parameters
  - TrackStates: GetTrackMidiTextStrFn - improved checking for validity of parameters
  - TrackStates: GetTrackMuteSoloState - improved checking for validity of parameters
  - TrackStates: GetTrackName - improved checking for validity of parameters
  - TrackStates: GetTrackNChansState - improved checking for validity of parameters
  - TrackStates: GetTrackPanMode - improved checking for validity of parameters
  - TrackStates: GetTrackPeakColorState - improved checking for validity of parameters
  - TrackStates: GetTrackPerfState - improved checking for validity of parameters
  - TrackStates: GetTrackRecCFG - improved checking for validity of parameters
  - TrackStates: GetTrackRecState - improved checking for validity of parameters
  - TrackStates: GetTrackScore - improved checking for validity of parameters
  - TrackStates: GetTrackShowInMixState - improved checking for validity of parameters
  - TrackStates: GetTrackStateChunk\_Tracknumber - improved checking for validity of parameters
  - TrackStates: GetTrackVolPan - improved checking for validity of parameters
  - TrackStates: GetTrackVUState - improved checking for validity of parameters
  - TrackStates: GetTrackWidth - improved checking for validity of parameters
  - TrackStates: SetTrackAutomodeState - improved checking for validity of parameters
  - TrackStates: SetTrackAutoRecArmState - improved checking for validity of parameters
  - TrackStates: SetTrackBeatState - improved checking for validity of parameters
  - TrackStates: SetTrackBusCompState - improved checking for validity of parameters
  - TrackStates: SetTrackBypFXState - improved checking for validity of parameters
  - TrackStates: SetTrackFreeModeState - improved checking for validity of parameters
  - TrackStates: SetTrackGroupFlags_HighState - improved checking for validity of parameters
  - TrackStates: SetTrackGroupFlagsState - improved checking for validity of parameters
  - TrackStates: SetTrackHeightState - improved checking for validity of parameters
  - TrackStates: SetTrackIcon\_Filename - improved checking for validity of parameters; didn't add trackicon, when no image was set already -> fixed; when Iconfilename\_with_path=nil, removes trackicon now
  - TrackStates: SetTrackID - improved checking for validity of parameters
  - TrackStates: SetTrackINQState - improved checking for validity of parameters
  - TrackStates: SetTrackIPhaseState - improved checking for validity of parameters
  - TrackStates: SetTrackIsBusState - improved checking for validity of parameters
  - TrackStates: SetTrackLayoutNames - improved checking for validity of parameters
  - TrackStates: SetTrackLockState - improved checking for validity of parameters
  - TrackStates: SetTrackMainSendState - improved checking for validity of parameters
  - TrackStates: SetTrackMidiBankProgFn - improved checking for validity of parameters
  - TrackStates: SetTrackMidiColorMapFn - improved checking for validity of parameters, setting filename to "" removes the MidiColorMap, now
  - TrackStates: SetTrackMidiCTL - improved checking for validity of parameters
  - TrackStates: SetTrackMidiInputChanMap - improved checking for validity of parameters; didn't set MidiInputChanMap -> fixed; removes now MidiInputChanMap, when InputChanMap=nil
  - TrackStates: SetTrackMIDIOutState - improved checking for validity of parameters
  - TrackStates: SetTrackMidiTextStrFn - improved checking for validity of parameters
  - TrackStates: SetTrackMuteSoloState - improved checking for validity of parameters
  - TrackStates: SetTrackName - improved checking for validity of parameters
  - TrackStates: SetTrackNChansState - improved checking for validity of parameters
  - TrackStates: SetTrackPanMode - improved checking for validity of parameters
  - TrackStates: SetTrackPeakColorState - improved checking for validity of parameters
  - TrackStates: SetTrackPerfState - improved checking for validity of parameters
  - TrackStates: SetTrackRecCFG - improved checking for validity of parameters
  - TrackStates: SetTrackRecState - improved checking for validity of parameters
  - TrackStates: SetTrackScore - improved checking for validity of parameters
  - TrackStates: SetTrackShowInMixState - improved checking for validity of parameters
  - TrackStates: SetTrackVolPan - improved checking for validity of parameters
  - TrackStates: SetTrackVUState - improved checking for validity of parameters
  - TrackStates: SetTrackWidth - improved checking for validity of parameters
  - Ultraschall Docs: functiontitles aren't links anymore, added a clickable symbol at the beginning of the title line of each function now
  - Ultraschall Docs: print, print2 and toboolean as well as all API-variables are now written in bold, as all other functions are
  - Windows: GetReaperWindowPosition\_Left - using now the SetIniFileValue-function for getting the ini-file-value
  - Windows: GetReaperWindowPosition\_Right - using now the SetIniFileValue-function for getting the ini-file-value
  - Windows: SetReaperWindowToSize - using now the SetIniFileValue-function for setting the ini-file-value

  
   
   ---
   
### 4.00 Beta 2.7: - "Frank Zappa - The Return of the Son of Monster Magnet" - 15th of December 2018

Has now 700 functions, with about 250 new ones!

#### New features in 4.00beta2.7
  - SetEnvelopeHeight - set the height and compactible state of an envelope-lane/envelopestatechunk
  - GetTrackStateChunk_Tracknumber - get a TrackStateChunk without the hassle of creating a trackobject first  
  - SetTrackStateChunk_Tracknumber - set a TrackStateChunk without the hassle of creating a trackobject first
  - GetTrackWidth - gets the Track-Width
  - GetTrackVolPan - gets Vol and Pan-settings of the track
  - GetTrackScore - gets Score of the track
  - GetTrackPanMode - gets PanMode of the track
  - GetTrackMidiColorMapFn - gets MidiColorMapFilename of the track
  - GetTrackMidiBankProgFn - gets MidiBankProg-Filename of the track
  - GetTrackMidiTextStrFn - gets MidiTextStr-Filename of the track
  - GetTrackID - gets the track-ID
  - CountPatternInString - counts a pattern in a sourcestring and returns appearances and positions of appearances
  - ConvertColor - converts color to native, without the hassle that Reaper needs
  - CountNormalMarkers_NumGap - returns the first numbering-gap within shown-markernumbers
  - CenterViewToCursor - centers arrange view to play-, edit- or mousecursor-timeposition.
  - SetReaperWindowToSize - to set the size of Reaper's Main Window
  - toboolean - converts a string to boolean, if possible. Like Lua's tostring() or tonumber()-functions
  - CheckActionCommandIDFormat - checks, if an action-command-id is properly formatted
  - CheckActionCommandIDFormat2 - checks, if an action-command-id is properly formatted and if it exists in the Reaper-installation
  - IsRegionAtPosition - checks, if regions are at a certain position and returns their index-numbers
  - IsMarkerAtPosition - checks, if markers are at a certain position and returns their index-numbers
  - SetTrackID - sets the track-ID
  - SetTrackMidiColorMapFn - sets MidiColorMapFilename of the track
  - SetTrackMidiBankProgFn - sets MidiBankProg-Filename of the track
  - SetTrackMidiTextStrFn - sets MidiTextStr-Filename of the track
  - SetTrackPanMode - sets PanMode of the track
  - SetTrackWidth - sets the Track-Width
  - InsertMediaItemFromFile - inserts a mediafile into the project at position and in specific track
  - GetMediafileAttributes - returns mediafile-attributes
  - GetMarkerByName - gets markers/regions by name
  - GetMarkerByName_Pattern - gets markers/regions that have a certain character-sequence in their name
  - GetMarkerByIndex - gets values of a certain marker/region, count by either markers or regions
  - SetMarkerByIndex - sets values of a certain marker/region, count by either markers or regions
  - GetReaperAppVersion - returns the appversion and the bits-version of the Reaper-App, separated into version and bits(unlike reaper.GetAppVersion())
  - GetOS - returns the operating system and it's bits separated, unlike reaper.GetOS()
  - IsOS_Windows - returns true, if the operating-system is Windows, false if not. Also returns the bits of the os.
  - IsOS_Mac - returns true, if the operating-system is MacOS, false if not. Also returns the bits of the os.
  - IsOS_Other - returns true, if the operating-system is other(usually Linux), false if not. Also returns the bits of the os.
  - GetItemSpectralConfig - gets the FFT-size of the spectral-edit-view of a specific item/statechunk
  - SetItemSpectralConfig - sets the FFT-size of the spectral-edit-view of a specific item/statechunk
  - GetItemSpectralEdit - Get the settings of a given spectral-edit-boundary-box
  - CountItemSpectralEdits - Counts the number of spectral-edit-boundary-boxes
  - DeleteItemSpectralEdit - deletes a spectral-edit-boundary-box
  - SetTrackScore - sets SCORE-state of a track
  - SetTrackVolPan - set vol, pan, panlaw of a track
  - SetTrackRecCFG - set track-rec-encoding-configuration
  - LimitFractionOfFloat - takes a float-value and reduces the number of digits in the fraction-part of the float; (500th Api function!)
  - SearchStringInString - searches for occurrences of a string within another string; differs from CountPatternInString in that it allows
               disabling searching for strings within already found strings
  - GetAllEntriesFromTable - returns all entries from a table in an iterable form; good for unknown tables/tablestructures
  - GetItemSourceFile_Take - returns filename, pcm-source and the media-item-take-object of a requested take
  - GetAllDirectoriesInPath - gets all directory-names in path
  - GetAllFilesnamesInPath - gets all filenames in path
  - CountDirectoriesAndFilesInPath - counts files and directories in path
  - APIExists - returns, if a certain function/element exists in the ultraschall-api
  - AddItemSpectralEdit - adds an spectral-editing-box into an item/statechunk
  - GetItemSpectralVisibilityState - get the visibility-state of spectral-edit of a certain MediaItem
  - IsValidEnvStateChunk - checks, if a string is a valid envelope-state-chunk
  - IsValidTrackStateChunk - checks, if a sring is a valid trackstate-chunk
  - IsValidItemStateChunk - checks, if a string is a valid itemstate-chunk
  - EnumProjects - gets the projectfilename+path and the ReaProject-object of a requested project
  - DeleteProjExtState_Section - deletes all project-extstates from a specific section
  - DeleteProjExtState_Key - deletes the value from a specific project-extstates->section->key
  - GetProjExtState_AllKeyValues - get all keys and values from a proj-extstate
  - IsValidGuid - checks, if a string is a valid guid
  - SetGuidExtState - sets a proj-extstate with a guid as extname(good for additional metadata for tracks/items/etc
  - GetGuidExtState - gets a proj-extstate with a guid as extname(good for additional metadata for tracks/items/etc
  - GetVZoom - returns the current vertical-zoomfactor of the current project
  - SetVZoom - sets the vertical-zoomfactor of the current project
  - StoreArrangeviewSnapshot - stores a snapshot of current start/endposition and verticalzoom from the arrangeview into a proj-extstate-slot
  - IsValidArrangeviewSnapshot - checks, whether an arrangeview-snapshot-slot is set/valid
  - RetrieveArrangeviewSnapshot - returns the values set in a specific Arrangeview-Snapshot-slot
  - RestoreArrangeviewSnapshot - sets arrangeview to start/endposition/verticalzoom, as set in the arrangeview-snapshot-slot
  - DeleteArrangeviewSnapshot - deletes an arrangeview-snapshot-slot
  - SetBitfield - sets/unsets/toggles individual bits in a bitfield
  - PreventCreatingUndoPoint - prevents creation of an undo-point(only useful in non-defer-scripts)
  - SetIntConfigVar_Bitfield - allows setting config-vars, that are integer-bitfields, quite easy
  - IsValidProjectStateChunk - checks, if a string is a valid ProjectStateChunk
  - CountMarkersAndRegions - counts markers and regions and returns their count as two(!) retvals
  - GetLastMarkerPosition - gets the position and idx of the last marker in the project
  - GetLastRegion - gets start/endposition and idx of the last ending region in the project
  - GetLastTimeSigMarkerPosition - gets position, measure- and beatposition of the last time-sig-marker in the project
  - MakeCopyOfTable - creates a true copy of a table(not only references)
                      adapted from Tyler Neylon's function, found at [Stack Overflow](https://stackoverflow.com/questions/640642/how-do-you-copy-a-lua-table-by-value/26367080#26367080)
                      Thanks to him for allowing me to use it :)
  - CheckForValidFileFormats - checks for valid fileformats that are supported by Reaper(still missing mp4, opus, m4a, m4v)
  - CompareStringWithAsciiValues - Compares a string with a number of ASCII-Values, given as individual parameters
  - CountEntriesInTable_Main - Counts the entries in a table; counts only the "main"-entries; returns subtables for recursive counting
  - ConvertStringToAscii_Array - Converts a string into an array, where each entry contains the numerical representation of the accompanying character in string
  - CompareArrays - Compares two arrays and returns all entries from array2, that's missing in array1
  - GetAllMediaItemGUIDs - returns a table with the guids of all MediaItems
  - InsertImageFile - Inserts an image-file into the project, allows looping it and giving length of the newly created item
  - SetItemExtState - Sets a projextstate for an item
  - GetItemExtState - Gets a projextstate for an item
  - SetTrackExtState - Sets a projextstate for a track
  - GetTrackExtState - Gets a projextstate for a track
  - CountLinesInString - Counts the lines in a string
  - GetIDEFontSize - gets the current fontsize set for Reaper's IDE
  - SetIDEFontSize - sets a new fontsize for Reaper's IDE
  - MB - like reaper.MB, but allows omitting title and type parameters for faster use.
  - ReadFileAsLines_Array - like ReadLinerangeFromFile, but returns the read lines as an array
  - GetAllMarkersBetween - returns an array with all markers between start and endposition
  - GetAllRegionssBetween - returns an array with all regions between start and endposition
  - GetAllRegions - returns an array with all regions in the project
  - MoveMarkersTo - moves all markers between start/endposition to a specific position
  - MoveRegionsTo - moves all regions between start/endposition to a specific position
  - CreateValidTempFile - determines a valid temporary filename and creates it, if needed.
  - When using the first time, it installs automatically an action for showing the Api-Help(Ultraschall and Reaper)
  - SetItemSpectrogram - toggles displaying spectral-edit for an item or an itemstatechunk
  - SetItemSpectralEdit - sets an existing spectral-edit for an item or an itemstatechunk
  - CountProjectTabs - counts currently opened projecttabs
  - GetProject_Tabs - returns all project-tabs and their accompanying filenames
  - CheckForChangedProjectTabs - checks, if the order of the projecttabs changed, or projecttabs were new/closed since last calling this function
  - GetAllSelectedMediaItems - returns an array with all selected MediaItems in the project
  - SetMediaItemsSelected_TimeSelection - Sets MediaItems selected within Time-Selection
  - GetParentTrack_MediaItem - returns the tracknumber and trackobject, in which a given MediaItem lies
  - IsItemInTrack2 - checks, whether an item is within a track
  - IsItemInTrack3 - checks, whether an item is within a number of tracks
  - ReturnTypeOfReaperObject - returns, type of Reaper-object
  - IsObjectValidReaperObject - checks, whether an object is a valid Reaper-object(project, item, take, etc)
  - KeepTableEntriesOfType - removes entries from a table, that aren't of a certain type
  - RemoveTableEntriesOfType - removes entries from a table, that are of a certain type
  - IsValidTrackString - checks, whether a trackstring is a valid one
  - IsItemInTimerange - checks, whether an item is within a timerange
  - OnlyItemsInTracksAndTimerange - throws out all MediaItems from a MediaItemArray, that aren't in given tracks and timerange
  - ApplyActionToMediaItem - applies an action to a MediaItem
  - ZoomVertical_MidiEditor - vertical zoom in MIDI-Editor
  - ZoomHorizontal_MidiEditor - horizontal zoom in MIDI-Editor
  - OpenItemInMidiEditor - opens an item in the MIDI-editor
  - ApplyActionToMediaItemArray - applies an action to given items
  - ApplyActionToTrack - applies an action to given tracks
  - GetAllMediaItemsInTimeSelection - returns all media-items from within time-selection
  - NormalizeItems - normalizes given items
  - added an ini-file with all render-codes for Video, MP3, FLAC, DDP, OPUS, OGG and AIFF
  - GetOutputFormat_RenderString - returns the output-format of a render-cfg-string from rpp-files/ProjectStateChunks and the reaper-render.ini
  - GetProject_RenderCFG - returns the render-string(which contains all render-settings of a project) of a project/ProjectStateChunk
  - SetProject_RenderCFG - sets the render-string(which contains all render-settings of a project) of a project
  - GetAllMediaItems - gets all MediaItems from the current project in a MediaItemArray
  - CreateRenderCFG_Opus - creates the render-cfg-string for an opus-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_OGG - creates the render-cfg-string for an OGG-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_DDP - creates the render-cfg-string for a DDP-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_AIFF - creates the render-cfg-string for an AIFF-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_FLAC - creates the render-cfg-string for a FLAC-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_WAVPACK - creates the render-cfg-string for a WAVPACK-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_WebMVideo - creates the render-cfg-string for an WebM-Video-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - RenderProject_RenderCFG - renders a project, using a certain render-string, created from the aforementioned functions
  - CreateRenderCFG_MP3MaxQuality - creates the render-cfg-string for a MP3-maxquality-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3VBR - creates the render-cfg-string for a MP3-vbr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3ABR - creates the render-cfg-string for a MP3-abr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3CBR - creates the render-cfg-string for a MP3-cbr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - AddIntToChar - add an integer-value to the numerical representation of a character and return it as a new character
  - CreateRenderCFG_WAV - creates the render-cfg-string for a WAV-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - PreviewMediaItem - play a preview of a MediaItem
  - StopAnyPreview - stop preview of a MediaItem
  - InsertTrackAtIndex - insert one or more new tracks into your project; more control about that than with Reaper's original function
  - MoveTracks - moves given track(s) to a new position
  - PreviewMediaFile - play preview of a mediafile, that is not necessarily in the project
  - MakeFunctionUndoable - run a function with it and it will create an Undo-Point for that given function automatically
  - GetProject_Selection - get the time-selection of an rpp-project or ProjectStateChunk
  - SetProject_Selection - set the time-selection of an rpp-project or ProjectStateChunk
  - DirectoryExists - check, if a directory already exists in a path
  - All parts of the API have now their own build-counters in the ultraschall_api.ini
  - API checks now, if SWS2.9.7 is installed and displays an error-message, if it's missing.
  - ApplyFunctionToMediaItemArray - applies a function to all MediaItems in a MediaItemArray
  - ReturnTableAsIndividualValues - returns index 1 to 64 of a table as return-values
  - GetMediaItemTake - returns a MediaItem_Take of an item, either a specific or the active one
  - requires now Reaper 5.95
  - GetProject_MarkersAndRegions - returns Markers and Regions from a Projectfile/ProjectStateChunk into an array
  - RenderProjectRegions_RenderCFG - renders a project's region
  - GetGapsBetweenItems - returns a table with all gaps between items in a track
  - IsValidMatchingPattern - checks, if a string is a valid pattern-matching string
  - IsValidReaProject - checks, if a ReaProject-object is a valid one
  - type - returns the type of an object, either Lua's own datatypes or Reaper's own datatypes (SWS-specific-datatypes are not supported...yet(?))
  - SetTrackGroupFlagsState - sets the GroupFlagsState in a track or a TrackStateChunk for track-group 1-32
  - SetTrackGroupFlags_HighState - sets the GroupFlagsState in a track or a TrackStateChunk for track-group 33-64
  - GetTrackGroupFlags_HighState - gets the GroupFlagsState in a track or a TrackStateChunk for track-group 33-64
  - all(!) TrackStates are now get/settable(!)
  - all functions create now useful error-messages, who can be retrieved with the error-message-functions, 
            refer to the Developer -> Error Handling-functions in the index of the functions-reference
            
            Good riddance, what a long term hard work to code that...
  - GetCurrentTimeLengthOfFrame - gets the length of a frame in seconds of a certain project; good for video/image-related functions like InsertImageFile
  - GetLengthOfFrames - gets the length of a number of frames in seconds of a certain project; good for video/image-related functions like InsertImageFile
  - GetStartNewFileRecSizeState - gets, if Reaper shall start a new file during recording, after XXX MBs, and the maximum size of a recorded file til restart
  - SetStartNewFileRecSizeState - sets, if Reaper shall start a new file during recording, after XXX MBs, and the maximum size of a recorded file til restart
  - GetPlayCursorWidth - get the width of the playcursor in pixels
  - SetPlayCursorWidth - set the width of the playcursor in pixels
  - GetReaperAlwaysOnTopState - get, if Reaper is set to be always on top of other applications, as set by action 40239
  - GetInputOutputLatency_Seconds - returns the input/output-latency in seconds
  - CreateTrackString_ArmedTracks - creates a trackstring with the tracknumbers of all armed tracks
  - CreateTrackString_UnarmedTracks - creates a trackstring with the tracknumbers of all unarmed tracks
  - IsValidEnvelopePointArray - checks, if an EnvelopePointArray is a valid one
  - Api_InstallPath - an API-variable that contains the path to the install-folder of the Ultraschall-API
  - ConvertOldProjectToCurrentReaperVersion - converts an rpp-projectfile from an earlier version of Reaper to the current one
  - CreateRenderCFG_AudioCD - create a renderstring for audio-cd-images
  - GetMarkerUpdateCounter - returns an update-counter for all markers in all projects, that is updated, as soon as a marker is added/deleted/set/moved/altered
  - CreateTrackStringByGUID - creates a trackstring of all tracks, given as GUIDs
  - CreateTrackStringByTracknames - creates a trackstring of all tracks, given as tracknames
  - CreateTrackStringByMediaTracks - creates a trackstring with all track-objects in a MediaTrackArray
  - GetScreenHeight - returns the height of the screen
  - GetScreenWidth - returns the width of the screen
  - pause\_follow\_one_cycle - skips followmode-auto-off-checking-script for one cycle; only relevant for scripts that shall work within Ultraschall.FM-extension
  - DeleteMediaItemsBetween - deletes MediaItems between start and endposition within tracks, given by trackstring; the deleting-equivalent of GetAllMediaItemsBetween
  - GetSetConfigAcidImport - gets/sets the configuration-setting for configuration-variable acidimport; also adds the setting to reaper.ini, if needed
  - GetSetConfigActionMenu - gets/sets the configuration-setting for configuration-variable actionmenu; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecLat - gets/sets the configuration-setting for configuration-variable adjreclat; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecManLat - gets/sets the configuration-setting for configuration-variable adjrecmanlat; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecManLatIn - gets/sets the configuration-setting for configuration-variable adjrecmanlatin; also adds the setting to reaper.ini, if needed
  - GetSetConfigAfxCfg - gets/sets the configuration-setting for configuration-variable afxcfg; also adds the setting to reaper.ini, if needed
  - GetSetConfigAllStereoPairs - gets/sets the configuration-setting for configuration-variable afxcfg; also adds the setting to reaper.ini, if needed
  - GetDuplicatesFromArrays - returns the entries from an array, that are duplicate or are in only one of these two arrays
  - OnlyFilesOfCertainType - returns all files of a certain type from an array of filenames
  - ConcatIntegerIndexedTables - concatenate the entries from two tables into one
  - CreateColorTable - create a ColorTable that includes colorpatterns
  - CreateSonicRainboomColorTable - creates a ColorTable with Ultraschall's standard-trackcolor-pattern "Sonic Rainboom Color"
  - IsValidColorTable - checks, whether a ColorTable is a valid one
  - ApplyColorTableToTrackColors - Apply a ColorTable to colorize MediaTracks
  - Docs - added parts of Reaper Internals to the US-Apidocs, more to come
  - GetCurrentReaperWorkDir - gets the current working directory of Reaper; if you create file without a path in Lua, they will be stored in that path
  - SetCurrentReaperWorkDir - sets the current working directory of Reaper; if you create file without a path in Lua, they will be stored in that path; needs a Reaper restart!
  - DirectoryExists2 - returns, if a certain path exists. Unlike DirectoryExists, which checks, whether a directory in a path exists
  - GetScriptFilenameFromActionCommandID - gets the script-filename associated to a specific ActionCommandID
  - GetProject_CountAutomationItems - counts the automation-items in a project/ProjectStateChunk
  - GetProject_AutomationItemStateChunk - gets an automation-item from a project/ProjectStateChunk
  - GetProject_ProjectBay - gets the projectbay from a project/ProjectStateChunk
  - GetProject_Metronome - gets the statechunk for all metronome-settings from a project/ProjectStateChunk
  - GetProject_MasterPlayspeed - gets the statechunk for all master-playspeed-settings from a project/ProjectStateChunk
  - GetProject_Tempo - gets the statechunk for all tempo-settings from a project/ProjectStateChunk
  - GetProject_Extensions - gets the statechunk for all extension-settings from a project/ProjectStateChunk
  - GetProject_Lock - gets the individual lock-settings from a project/ProjectStateChunk
  - GetProject_GlobalAuto - returns the global automation override-settings of an rpp-file or ProjectStateChunk
  - GetProject_Tempo - returns the tempo-settings of an rpp-file or a ProjectStateChunk
  - GetProject_Playrate - returns the playrate-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterAutomode - returns the Mastertrack-automation-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterSel - returns the Mastertrack-selection-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterFXByp - returns the Mastertrack-fx-bypass-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterMuteSolo - returns the Mastertrack-mute-solo-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterNChans - returns the Mastertrack-num-channels-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterTrackHeight - returns the Mastertrack-trackheight-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterTrackColor - returns the Mastertrack-trackcolor-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_CountMasterHWOuts - counts the HWOuts for a Master-track of an rpp-file or a ProjectStateChunk
  - GetProject_MasterHWOut - returns the Mastertrack-HWOUT-settings of an rpp-file or a ProjectStateChunk; there can be multiple ones, selectable by idx
  - GetProject_MasterVolume - returns the Master-volume-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterPanMode - returns the MasterPanMode of an rpp-file or a ProjectStateChunk
  - GetProject_MasterWidth - returns the Width-Knob2-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterGroupFlagsState - returns the Master-groupflags-state of an rpp-file or a ProjectStateChunk
  - GetProject_MasterGroupFlagsHighState - returns the Master-grouphigh-flags-state of an rpp-file or a ProjectStateChunk
  - GetProject_GroupDisabled - returns the state, which groups are disabled, of an rpp-file or a ProjectStateChunk
  - GetProject_MasterHWVolEnvStateChunk - returns the statechunk of the MasterHWVolEnv
  - GetProject_MasterFXListStateChunk - returns the statechunk of the MasterFXList
  - GetProject_MasterDualPanEnvStateChunk - returns the statechunk of the MasterDualPanEnv
  - GetProject_MasterDualPanEnv2StateChunk - returns the statechunk of the MasterDualPanEnv2
  - GetProject_MasterDualPanEnvLStateChunk - returns the statechunk of the MasterDualPanEnvL
  - GetProject_MasterDualPanEnvL2StateChunk - returns the statechunk of the MasterDualPanEnvL2
  - GetProject_MasterVolEnvStateChunk - returns the statechunk of the MasterVolEnv
  - GetProject_MasterVolEnv2StateChunk - returns the statechunk of the MasterVolEnv2
  - GetProject_MasterVolEnv3StateChunk - returns the statechunk of the MasterVolEnv3
  - GetProject_MasterHWPanEnvStateChunk - returns the statechunk of the MasterHWPanEnv
  - GetProject\_MasterPanMode\_Ex - returns the state of the MasterPanMode\_Ex
  - GetProject\_TempoEnv\_ExStateChunk - returns the statechunk of the TempoEnv\_Ex
  - Docs: MediaItems: Moving and Manipulating - added 
  - Docs: MediaItems: Inserting Items and Files - added
  - ChangeColorBrightness - changes the brightness of a r, g, b-color-value
  - ChangeColorContrast - changes contrast of a r,g,b-color-value
  - ReverseTable - reverses the order of the entries of an integer-indexed table
  - ChangeColorSaturation - changes the saturation of a color-value
  - Docs: Datatypes_Colortables - docs about the structure of a ColorTable
  - ultraschall.Euro - holds an €-symbol, that is difficult to type into Reaper's IDE
  - Docs: MediaItems: Programming Spectral Edit - added
  - Docs: MediaItems: Miscellaneous - added
  - Docs: Added Config-Variable into the Reaper-Internals-docs
  - added converted Config-Variable-docs as USDocML-file
  - CombineBytesToInteger - combines multiple bytes into one integer-value
  - SplitIntegerIntoBytes - splits a  32-bit-integer-value into four bytes
  - GetReaperScriptPath - returns path to the scripts-folder of Reaper
  - GetReaperColorThemesPath - returns path to the theme-folder of Reaoer
  - GetReaperJSFXPath - returns path to the JSFX-plugin-folder of Reaper
  - GetReaperWebRCPath - returns path to Reaper's own and User's own WebRC-webpage-folder
  - Docs - added File Management: Introduction to the Introduction/Concepts-page
  - Docs - added docs for ultraschall.Euro, which holds the €-currency symbol
  - Docs - added   - File Management: Read to the Introduction/Concepts-page
  - Added example-scripts:
        ArrangeView\_Snapshots\_Example.lua
        Changed\_Project\_Tab\_Example.lua
        Color\_Example.lua
        Render\_Current\_Project.lua
        Render\_Project.lua
        RippleCut\_Selected\_Tracks.lua
        Shorten\_MediaItems\_In\_Selection_Example.lua
  - GetProject_Length - gets the length of an rpp-projectfile
  - added new analyser-scripts for statechunks: Item\_State\_Diffs\_Monitor.lua, Track\_State\_Diffs\_Monitor.lua, Project\_State\_Diffs\_Monitor.lua, Env\_State\_Diffs\_Monitor.lua
  - Docs: File Management: Write - added to Introduction/Concepts-page
  - Docs: File Management: Analyse - added to Introduction/Concepts-page
  - Docs: File Management: Misc - added to Introduction/Concepts-page
  - Docs: Project Management: Introduction - added to Introduction/Concepts-page
  - Docs: Project Management: Check for changed projecttabs - added to Introduction/Concepts-page
  - Docs: added WebRC-API-docs
  - Docs: added Video-Processor-API-docs
  - Docs: reworked slightly the header of the Reaper-Internals-page
  - Docs: Color Management: Introduction - added chapter
  - Docs: Color Management: Native Color Conversion - added chapter
  - Docs: Color Management: Brightness, Contrast and Colorsaturation - added chapter
  - Docs: Color Management: Working with Colortables - added chapter
  - Docs: Color Management: Creating Colortables - added chapter
  - Docs: Color Management: Applying Colortables - added chapter
  - ConvertColorFromMac - Converts a native-Mac to rgb-values
  - ConvertColorFromWin - Converts a native-Windows/Linux-color to rgb-values
  - ConvertColorToMac - Converts rgb-values to a native-MacOS-color
  - ConvertColorToWin - Converts rgb-values to a native-Windows/Linux-color
  - ApplyColorTableToItemColors - applies a ColorTable to MediaItems in a MediaItemArray
  - Docs: added all functions from JS-plugin by Julian Sader and Xenakios to Reaper-Api-Docs
  - ultraschall\_track\_old\_cursorposition.lua - background-script for returning the last editcursor-position before the current one
  - RunBackgroundHelperFeatures - runs background-scripts included with the Ultraschall-API
  - GetLastCursorPosition - returns the last editcursor-position before the current one; needs Backgroundscripts started first using RunBackgroundHelperFeatures
  - Docs: Concepts-page - added chapter about Extstates for MediaTracks, MediaItems and guids
  - IsMuteAtPosition - checks, whether a mute-point exists in a track at a position
  - IsMuteAtPosition\_TrackObject - checks, whether a mute-point exists in a MediaTrack-object at a position
  - DeleteMuteState - deletes a mute-point in a track at a given position
  - DeleteMuteState\_TrackObject - deletes a mute-point in a MediaTrack-object at a given position
  - Docs: Concepts-page - added chapter about backgroundscripts in Ultraschall-API and the use of it for functions like GetLastCursorPosition
  - Docs: Concepts-page - added chapter about cough/mute-buttons
  - requires now Julian Sader's plugin as well
  - CloseReaConsole - closes ReaConsole-window
  - DeleteErrorMessage - deletes a specific error-message from the error-messaging-system
  - Docs: Error-Messaging-System - added docchapters to Introductions/Concepts-page
  - GFX\_BlitBufferImage - blits the framebuffer into the window and resizes it, if needed, using the correct aspect ratio; preliminary support
  - Docs: Trackstate Management: Introduction - added chapter to Introduction/Concepts-page
  - Routing: Introduction - added chapter to Introduction/Concepts-page
  - Routing: Send and Receives - added chapter to Introduction/Concepts-page
  - Routing: Hardware Outs - added chapter to Introduction/Concepts-page
  - ApplyActionToMediaItemArray2 - applies an action to multiple items at once, unlike ApplyActionToMediaItemArray(which applies the action to each item individually)
  - PutMediaItemsToClipboard\_MediaItemArray - puts all MediaItems from MediaItemArray into the clipboard
  - Docs: ExtState Management: Introduction - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Ini-Files - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Inifile-Functions - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Ultraschall.ini - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Track and Item-Extstates - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Track Extstates - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Item Extstates - added chapter to Introduction/Concepts-page
  - MoveRegionsBy - moves regions by seconds
  - MoveTimeSigMarkersBy - moves Timesignature/Tempo-markers by seconds
  - ShowMenu - shows a new context-menu at a given position
  - Docs: Markers and Regions: Introduction - added to Introduction/Concepts-page
  - Docs: Markers and Regions: General How To - added to Introduction/Concepts-page
  - Docs: Markers and Regions: Helpers and Manipulation - added to Introduction/Concepts-page
  - CycleTable - cycles the entries of a table through
  - GetErrorMessage\_Funcname - returns error-message of a certain function
  - CountErrorMessage\_Funcname - counts all error-messages a certain function left in the error-messagin-system
  - GetLastErrorMessage\_Funcname - returns the last error-message a certain function left in the error-messaging-system
  - DisplayMarkersRegions\_underneath\_Mouse.lua - example-script that displays the markers/regions underneath the mouse
  - ShowMediaItems\_In\_Timeselection\_and\_SelectedTracks.lua - example script that shows selected items by time-selection and track-selection
  - TrackAndItem\_ColorCycler.lua - example script that cycles colors of tracks and items
  - Render\_Project.gif - added example-gif that demonstrates example-script
  - DisplayMarkersRegions\_underneath\_Mouse.gif - added example-gif that demonstrates example-script  
  - ShowMediaItems\_In\_Timeselection\_and\_SelectedTracks.gif - added example-gif that demonstrates example-script
  - Render\_Current\_Project.gif - added example-gif that demonstrates example-script
  - Changed\_Project\_Tab\_Example.gif - added example-gif that demonstrates example-script
  - ArrangeView\_Snapshots\_Example.gif - added example-gif that demonstrates example-script
  - RippleCut\_Selected\_Tracks.gif - added example-gif that demonstrates example-script
  - Color\_Example.gif - added example-gif that demonstrates example-script
  - Shorten\_MediaItems\_In\_Selection\_Example.gif - added example-gif that demonstrates example-script
  - ColorTables\_ColorCycler.gif - added example-gif that demonstrates example-script
  - Docs: Helper\_Functions: Introduction - added chapter to the Introduction/Concepts-page
  - Docs: Helper\_Functions: Clipboard Management - added chapter to the Introduction/Concepts-page
  - Docs: Helper\_Functions: Data Manipulation - added chapter to the Introduction/Concepts-page
  - Docs: Helper\_Functions: Undo Management - added chapter to the Introduction/Concepts-page
  - Docs: Final words - added chapter to the Introduction/Concepts-page  
  - GetSetConfigAlwaysAllowKB - gets/sets value for configvar alwaysallowkb
  - GetSetConfigApplyFXTail - get/sets value for configvar applyfxtail
  - GetSetConfigAdjRecManLatIn -get/sets value for configvar ajdrecmanlatin
  - GetSetConfigAudioPrShift - get/sets value for configvar audioprshift
  - GetSetConfigAudioCloseStop - get/sets value for configvar audioclosestop
  - GetSetConfigAudioThreadPr - get/sets value for configvar audiothreadpr
  - GetSetConfigAudioCloseTrackWnds - get/sets value for configvar audioclosetrackwnds  
  - WinterlySnowflakes - replaces gfx.update with a version, that displays falling snowflakes everytime gfx.update is run  

#### Changes from 4.00beta2.6 to 4.00beta2.7

  - Tons of bugfixes. I mean, tons as in metric tons ;)
  - GetTrackRecCFG - added documentation, that was still missing -> fixed now; added missing return-value
  - GetLastErrorMessage2 - had wrong functionname, corrected documentation
  - cleaned up code and improved readability
  - GetPartialString - returns nil in case of error now
  - WriteValueToFile - minor additions to documentation
  - CreateTrackNumbersString - minor additions to documentation
  - SetTrackMuteSoloState - corrected documentation's-description
  - initialization of the framework on Mac could potentially not work due wrong separator -> fixed now
  - improved installation and usage-procedure of the framework heavily
  - GetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackAutomodeState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackBeatState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackBusCompState - supports now trackstatechunks as well; sped up code
  - GetTrackBypFXState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackFreeModeState - supports now trackstatechunks as well; sped up code
  - GetTrackGroupFlagsState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackHeightState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackINQState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackIPhaseState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackIcon\_Filename - supports now mastertrack and trackstatechunks as well
  - GetTrackIsBusState - supports now trackstatechunks as well; sped up code
  - GetTrackLayoutNames - supports now mastertrack and trackstatechunks as well
  - GetTrackLockState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMainSendState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMidiCTL - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
  - GetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackNChansState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackName - supports now mastertrack and trackstatechunks as well
  - GetTrackPeakColorState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackPerfState - supports now trackstatechunks as well; sped up code
  - GetTrackRecCFG - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackRecState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackShowInMixState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackVUState - supports now mastertrack and trackstatechunks as well, fixed bug; sped up code
  - SetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well
  - SetTrackAutomodeState - supports now mastertrack and trackstatechunks as well
  - SetTrackBeatState - supports now mastertrack and trackstatechunks as well
  - SetTrackBusCompState - supports now trackstatechunks as well
  - SetTrackBypFXState - supports now mastertrack and trackstatechunks as well
  - SetTrackFreeModeState - supports now mastertrack and trackstatechunks as well
  - SetTrackHeightState - supports now mastertrack and trackstatechunks as well
  - SetTrackINQState - supports now mastertrack and trackstatechunks as well
  - SetTrackIPhaseState - supports now mastertrack and trackstatechunks as well
  - SetTrackIcon\_Filename - supports now trackstatechunks as well
  - SetTrackIsBusState - supports now trackstatechunks as well
  - SetTrackLayoutNames - supports now trackstatechunks as well; minor improvements
  - SetTrackLockState - supports now trackstatechunks as well; improved speed
  - SetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well
  - SetTrackMainSendState - supports now mastertrack and trackstatechunks as well
  - SetTrackMidiCTL - supports now mastertrack and trackstatechunks as well
  - SetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
  - SetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well  
  - SetTrackNChansState - supports now mastertrack and trackstatechunks as well
  - SetTrackName - supports now mastertrack and trackstatechunks as well
  - SetTrackPeakColorState - supports now mastertrack and trackstatechunks as well
  - SetTrackPerfState - supports now trackstatechunks as well
  - SetTrackRecState - supports now mastertrack and trackstatechunks as well
  - SetTrackShowInMixState - supports now mastertrack and trackstatechunks as well
  - SetTrackVUState - supports now mastertrack and trackstatechunks as well
  - ToggleScrollingDuringPlayback - also affects scrolling during recording now; sometimes, continuous scroll wouldn't restart -> fixed now
  - GetNextClosestItemEdge - had trouble finding the end of the last item in a track -> fixed now
  - GetPreviousClosestItemEdge - had trouble finding the beginning of the first item in track as well as 
        the item before the current item at times -> fixed now
  - GetClosestPreviousMarker - always used cursorposition as calculation base, never mouseposition; it also couldn't find the previous
        marker before the current one -> fixed now
  - GetClosestNextMarker - always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetClosestNextRegionEdge - renamed from GetClosestNextRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetClosestPreviousRegionEdge - renamed from GetClosestPreviousRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetApiVersion - returns now an additional return-value of type "number", that you can use for version-comparison like "if required\_version>version then"
  - SplitStringAtLineFeedToArray - was missing the returned count-variable in the documentation -> fixed now
  - ToggleScrollingDuringPlayback - changed parameter move\_editcursor to boolean; added goto\_playcursor which moves view to playcursor; 
                    fixed bug that messed up scrolling during recording.
  - Ultraschall-Api is now located in UserPlugins in the resources-folder(where every third-party-plugin belongs to ;) )
  - IsItemInTrack - tracknumber is now 1 based, means: 1 for track 1, 2 for track 2, etc
  - ApiTest displays only one message now (damn was it annoying before... ;) )
  - ReadFullFile - fixed small bug and returns now the number of lines of files, if binary is set to false
  - GetProject\_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
  - SetProject\_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
  - AddErrorMessage - new parameters, parametername and errorcode, so you can specify these better
  - ReadErrorMessage - includes the new parameters parametername and errorcode, sped up code; used to reset creation date instead of readstate -> fixed
  - GetLastErrorMessage - includes the new parameters parametername and errorcode, readstatus is now a string with "unread" or the 
              last readtime(no boolean anymore); sped up code; used to reset creation date instead of readstate -> fixed
  - DeleteLastErrorMessage - deletes now the last errormessage, only changed the errorcounter before
  - GetLastErrorMessage2 - includes the new parameters parametername and errorcode; used to reset creation date instead of readstate -> fixed
  - ShowLastErrorMessage - reworked the messagebox to include functionname, parametername, errormessage and errorcode
  - GetPath - returns nil now, if the separator can't be found, and throws an error-message as well in that case; did return parts of the path in filename -> fixed now
  - GetPartialString - returns nil now, if the separator can't be found, and throws an error-message as well in that case; sped up code
  - RunCommand - throws an error-message, if an invalid action-command-id is given
  - CSV2Line - rewritten and sped up
  - RGB2Num - removed
  - CSV2IndividualLinesAsArray - rewrote and sped up code; supports now other separators and separators longer than one character, swapped retvals
  - IsItemInTrack - minor improvements
  - Docs: removed SWS-logo from all functions, that don't require SWS
  - SetChapterMarker - removed
  - ImportChaptersFromFile - removed
  - ExportChapterMarkersToFile - removed
  - EnumerateChapterMarkers - removed
  - EnumerateDummyMarkers - removed
  - EnumerateEditRegion - removed
  - GetAllChapterMarkers - removed
  - DeleteChapterMarker - removed
  - DeleteDummyMarker - removed
  - CountChapterMarkers - removed
  - CountDummyMarkers - removed
  - ChapterToDummyMarker - removed
  - ChapterToEditMarker - removed
  - ChapterToMarker - removed
  - DummyToChapterMarker - removed
  - DummyToEditMarker - removed
  - DummyToMarker - removed
  - EditToChapterMarker - removed
  - EditToDummyMarker - removed
  - MarkerToChapterMarker - removed
  - MarkerToDummyMarker - removed
  - IsMarkerChapter - removed 
  - IsMarkerDummy - removed
  - AddChapterMarker - removed
  - AddDummyMarker - removed
  - CountUSExternalState\_sec - did not check for existence of ultraschall.ini -> fixed
  - CountUSExternalState\_key - did not check for existence of ultraschall.ini -> fixed
  - EnumerateUSExternalState\_sec - returned empty strings, when the ultraschall.ini contained them -> fixed
  - EnumerateUSExternalState\_key - number was expected to be string and produced problems -> fixed
  - SetPlayCursor\_WhenPlaying - added parameter-validity-check for parameter position
  - SetPlayAndEditCursor\_WhenPlaying - added parameter-validity-check for parameter position
  - JumpForwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
  - JumpBackwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
  - GetNextClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
  - GetPreviousClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
  - GetClosestNextRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
  - GetClosestPreviousRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
  - ToggleMute\_TrackObject - sped up code
  - GetItemPlayRate\_StateChunk - docs, added information about some of the parameters, like pitch-settings
  - ToggleStateButton - added section-info to the docs
  - RefreshToolbar\_Action - added section-info to the docs
  - ToggleStateAction - added section-info to the docs
  - CountNormalMarkers - added support for planned chapter-markers(color\_value 100, 255, 0); was counting wrong, when regions were available -> fixed
  - accidentally used os as return-variable in many functions, leading to overwriting of Lua's own os.functions() like os.date(), etc -> fixed
  - CountPatternInString - internal changes to prevent accidental overwriting of Lua's own string.functions()
  - SplitStringAtLineFeedToArray - the entries in the array still contained the useless line-feed -> fixed
  - integer parameters accept only integers from now on (used to be numbers)
  - CSV2IndividualLinesAsArray - the returned count-value was one too high -> fixed
  - CountNormalMarkers - added support for planned chapter marker
  - EnumerateNormalMarkers - support for planned chapter marker added; added missing info in the docs
  - EnumerateEditMarkers - expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - SetNormalMarker - added support for planned chapter marker; expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - SetEditMarker - expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - DeleteNormalMarker - added support for planned chapter marker; deleted in some situations non-normal-markers -> fixed
  - DeleteEditMarker - expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - IsMarkerEdit - expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - IsMarkerNormal - added support for planned chapter marker; expected "\_Edit:" as name of edit-marker, instead of "\_Edit" -> fixed
  - IsRegionEditRegion - expected "\_Edit:" as name of edit-region, instead of "\_Edit" -> fixed
  - SetEditRegion - expected "\_Edit:" as name of edit-region, instead of "\_Edit" -> fixed
  - DeleteEditRegion - expected "\_Edit:" as name of edit-region, instead of "\_Edit" -> fixed
  - EnumerateEditRegion - expected "\_Edit:" as name of edit-region, instead of "\_Edit" -> fixed
  - GetAllNormalMarkers - added index-number and shown-number to the array; completed docs
  - GetAllMarkers - added index-number, shown-number and color to the array; completed docs; didn't get the first marker -> fixed 
  - GetAllEditMarkers - added index-number to the array; completed docs
  - DeletePodRangeRegion - return value is now boolean
  - DeleteNormalMarker - completed docs
  - ExportNormalMarkersToFile - completed docs
  - CountNormalMarkers\_NumGap - completed docs
  - MarkerToEditMarker - completed docs
  - CountEditMarkers - used to count edit-regions as well -> fixed now
  - ExportEditMarkersToFile - crashed due bug with edit-regions -> fixed now
  - WriteValueToFile\_ReplaceBinary - naming conflict, 2 functions had the name WriteValueToFile\_Replace; renamed one to WriteValueToFile\_ReplaceBinary
  - EditToMarker - small internal changes to give the marker it's correct color: Reaper's default color for marker
  - CreateTrackNumbersString\_SelectedTracks - additions to the docs
  - ReadValueFromFile - returns now all found lines as array; retval numberoflines used to give the same number as number\_of\_foundlines, so I 
              changed it to numberoflines\_in\_file, that returns the total number of lines in the file, even if fewer lines are returned
  - Renderfunctions - improved behavior when rendering currently opened project; always uses now the correct projectfile, used to guess location 
            of projectfile one dir above the recording-dir
  - GetProject\_GroupOverride, GetProject\_RippleState, GetProject\_ReaperVersion - documentation stated "kb-ini-file" instead of "rpp-projectfile" -> fixed
  - renamed GetMarkerByIndex to GetMarkerAndRegionsByIndex to reflect the fact, that it supports markers AND regions
  - SplitStringAtLineFeedToArray - used to treat LFCR as two linebreaks, which caused empty lines in windows-strings. Treats LFCR as one linebreak now.
  - ReadLinerangeFromFile - allows now reading the whole file, when giving -1 as lastlinenumber; added missing information in the docs
  - As the Functions-Engine is essential for all parts of the Ultraschall-API, it can't be turned off anymore.
  - renamed MoveMarkers to MoveMarkersBy, reimplemented it, as sometimes, it messed up marker order after movement
  - ReadValueFromFile - sped up code, returned wrong found-lines-value -> fixed
  - CheckMediaItemArray - did not return the altered MediaItemArray and count, when returning retval=false -> fixed
  - ChangeOffsetOfMediaItems\_FromArray - typos in the docs -> fixed
  - GetSelectedMediaItemsAtPosition - error in documentation -> fixed
  - OnlyMediaItemsOfTracksInTrackstring\_StateChunk - had the docs of OnlyMediaItemsOfTracksInTrackstring -> fixed now
  - CSV2IndividualLinesAsArray - accidentally reversed retvals in the docs -> fixed
  - restructured index of the Api-docs
  - GetProject\_AddMediaToProjectAfterRender - allows usage of ProjectStateChunks now as well
  - GetProject\_ApplyFXCFG - allows usage of ProjectStateChunks now as well
  - GetProject\_AutoCrossFade - allows usage of ProjectStateChunks now as well
  - GetProject\_CountMarkersAndRegions - allows usage of ProjectStateChunks now as well
  - GetProject\_CursorPos - allows usage of ProjectStateChunks now as well
  - GetProject\_DefPitchMode - allows usage of ProjectStateChunks now as well
  - GetProject\_EnvAttach - allows usage of ProjectStateChunks now as well
  - GetProject\_Feedback - allows usage of ProjectStateChunks now as well
  - GetProject\_GetMarker - allows usage of ProjectStateChunks now as well
  - GetProject\_GetRegion - allows usage of ProjectStateChunks now as well
  - GetProject\_Grid - allows usage of ProjectStateChunks now as well
  - GetProject\_GroupOverride - allows usage of ProjectStateChunks now as well
  - GetProject\_HorizontalZoom - allows usage of ProjectStateChunks now as well
  - GetProject\_ItemMixBehavior - allows usage of ProjectStateChunks now as well
  - GetProject\_Loop - allows usage of ProjectStateChunks now as well
  - GetProject\_LoopGran - allows usage of ProjectStateChunks now as well
  - GetProject\_MaxProjectLength - allows usage of ProjectStateChunks now as well
  - GetProject\_MixerUIFlags - allows usage of ProjectStateChunks now as well
  - GetProject\_NumberOfTracks - allows usage of ProjectStateChunks now as well
  - GetProject\_PanLaw - allows usage of ProjectStateChunks now as well
  - GetProject\_PanMode - allows usage of ProjectStateChunks now as well
  - GetProject\_PeakGain - allows usage of ProjectStateChunks now as well
  - GetProject\_ProjOffsets - allows usage of ProjectStateChunks now as well
  - GetProject\_ReaperVersion - allows usage of ProjectStateChunks now as well; exposed internal variables -> fixed
  - GetProject\_RecMode - allows usage of ProjectStateChunks now as well
  - GetProject\_RecPath - allows usage of ProjectStateChunks now as well
  - GetProject\_RecordCFG - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderDitherState - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderFilename - allows usage of ProjectStateChunks now as well; exposed an internal variable temp -> fixed
  - GetProject\_RenderFreqNChans - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderPattern - allows usage of ProjectStateChunks now as well; exposed an internal variable temp -> fixed
  - GetProject\_RenderRange - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderResample - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderSpeed - allows usage of ProjectStateChunks now as well
  - GetProject\_RenderStems - allows usage of ProjectStateChunks now as well
  - GetProject\_RippleState - allows usage of ProjectStateChunks now as well
  - GetProject\_SMPTESync - allows usage of ProjectStateChunks now as well
  - GetProject\_SampleRate - allows usage of ProjectStateChunks now as well
  - GetProject\_TakeLane - allows usage of ProjectStateChunks now as well
  - GetProject\_TempoTimeSignature - allows usage of ProjectStateChunks now as well
  - GetProject\_TimeBase - allows usage of ProjectStateChunks now as well
  - GetProject\_Timemode - allows usage of ProjectStateChunks now as well
  - GetProject\_TrackMixingDepth - allows usage of ProjectStateChunks now as well
  - GetProject\_TrackStateChunk - allows usage of ProjectStateChunks now as well
  - GetProject\_UseRecConfig - allows usage of ProjectStateChunks now as well
  - GetProject\_VerticalZoom - allows usage of ProjectStateChunks now as well
  - GetProject\_VideoConfig - allows usage of ProjectStateChunks now as well
  - TimeStringToSeconds\_hh\_mm\_ss\_mss - had wrong functionname and link in the docs -> fixed  
  - GetItemAllTakes - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemBeat - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemChanMode - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeFlag - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeIn - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeOut - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemGUID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemGroup - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemIGUID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemIID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLength - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLock - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLoop - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemMixFlag - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!); returned the BEAT-state, not MIXFLAG -> fixed
  - GetItemMute - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemName - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemPlayRate - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemPosition - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemRecPass - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSampleOffset - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSelected - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSnapOffset - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemUSTrackNumber\_StateChunk - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemVolPan - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - SetTrackHWOut - had wrong link in the docs -> fixed
  - SetItemUSTrackNumber\_StateChunk - tracknumbers are 1 based now
  - SetItemLength - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - SetItemPosition - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - RenderProjectToAIFF - removed, use CreateRenderCFG\_AIFF and RenderProject\_RenderCFG instead
  - RenderProjectToFLAC - removed, use CreateRenderCFG\_FLAC and RenderProject\_RenderCFG instead
  - RenderProjectToMP3\_ABR - removed, use CreateRenderCFG\_MP3ABR and RenderProject\_RenderCFG instead
  - RenderProjectToMP3\_CBR - removed, use CreateRenderCFG\_AMP3CBR and RenderProject\_RenderCFG instead
  - RenderProjectToMP3\_MaxQuality - removed, use CreateRenderCFG\_MP3MaxQuality and RenderProject\_RenderCFG instead
  - RenderProjectToMP3\_VBR - removed, use CreateRenderCFG\_MP3VBR and RenderProject\_RenderCFG instead
  - RenderProjectToOpus - removed, use CreateRenderCFG\_Opus and RenderProject\_RenderCFG instead
  - GetProject\_VideoConfig - corrected documentation
  - SetProject\_VideoConfig - corrected documentation
  - SetProject\_RecMode - corrected documentation
  - GetProject\_SMPTESync - returned wrong retvals, fixed
  - GetPath - returns now also the filename, returns "", "" instead of nil in case of error.
  - SetProject\_AddMediaToProjectAfterRender - allows usage of ProjectStateChunks now as well
  - SetProject\_ApplyFXCFG - allows usage of ProjectStateChunks now as well
  - SetProject\_AutoCrossFade - allows usage of ProjectStateChunks now as well
  - SetProject\_CursorPos - allows usage of ProjectStateChunks now as well
  - SetProject\_DefPitchMode - allows usage of ProjectStateChunks now as well
  - SetProject\_EnvAttach - allows usage of ProjectStateChunks now as well
  - SetProject\_Feedback - allows usage of ProjectStateChunks now as well
  - SetProject\_Grid - allows usage of ProjectStateChunks now as well
  - SetProject\_GroupOverride - allows usage of ProjectStateChunks now as well
  - SetProject\_HorizontalZoom - allows usage of ProjectStateChunks now as well
  - SetProject\_ItemMixBehavior - allows usage of ProjectStateChunks now as well
  - SetProject\_Loop - allows usage of ProjectStateChunks now as well
  - SetProject\_LoopGran - allows usage of ProjectStateChunks now as well
  - SetProject\_MaxProjectLength - allows usage of ProjectStateChunks now as well
  - SetProject\_MixerUIFlags - allows usage of ProjectStateChunks now as well
  - SetProject\_PanLaw - allows usage of ProjectStateChunks now as well
  - SetProject\_PanMode - allows usage of ProjectStateChunks now as well
  - SetProject\_PeakGain - allows usage of ProjectStateChunks now as well
  - SetProject\_ProjOffsets - allows usage of ProjectStateChunks now as well
  - SetProject\_RecMode - allows usage of ProjectStateChunks now as well
  - SetProject\_RecPath - allows usage of ProjectStateChunks now as well
  - SetProject\_RecordCFG - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderCFG - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderDitherState - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderFilename - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderFreqNChans - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderPattern - allows usage of ProjectStateChunks now as well; now allows removing the RENDERPATTERN-entry from a Projectfile using nil as parameter. Good, if you only want to set a Rendername in a project.
  - SetProject\_RenderRange - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderResample - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderSpeed - allows usage of ProjectStateChunks now as well
  - SetProject\_RenderStems - allows usage of ProjectStateChunks now as well
  - SetProject\_RippleState - allows usage of ProjectStateChunks now as well
  - SetProject\_SMPTESync - allows usage of ProjectStateChunks now as well
  - SetProject\_SampleRate - allows usage of ProjectStateChunks now as well
  - SetProject\_Selection - allows usage of ProjectStateChunks now as well
  - SetProject\_TakeLane - allows usage of ProjectStateChunks now as well
  - SetProject\_TempoTimeSignature - allows usage of ProjectStateChunks now as well
  - SetProject\_TimeBase - allows usage of ProjectStateChunks now as well
  - SetProject\_Timemode - allows usage of ProjectStateChunks now as well
  - SetProject\_TrackMixingDepth - allows usage of ProjectStateChunks now as well; hadn't correct parameters in the docs -> fixed
  - SetProject\_UseRecConfig - allows usage of ProjectStateChunks now as well
  - SetProject\_VerticalZoom - allows usage of ProjectStateChunks now as well
  - OpenURL - had a problem on Windows, when the url-string contained spaces -> fixed; returns -1 in case of error, now
  - GetReaperAppVersion - returns now the operating system as well if the Reaper-installation is a portable one.
  - GetClosestGoToPoints - added options to get closest goto-points from current edit/playcursor-position; added returning marker/region name
  - ReadBinaryFileFromPattern - corrected docs, rewrote function for more speed
  - CountKeysByPattern - checks for malformed patterns, now
  - CountSectionsByPattern - checks for malformed patterns, now
  - CountValuesByPattern - checks for malformed patterns, now
  - EnumerateKeysByPattern - checks for malformed patterns, now
  - EnumerateSectionsByPattern - checks for malformed patterns, now
  - EnumerateValuesByPattern - checks for malformed patterns, now
  - ReadBinaryFileFromPattern - checks for malformed patterns, now
  - ReadBinaryFileUntilPattern - had wrong functionname in error-message -> fixed, checks for malformed patterns, now
  - ReadValueFromFile - checks for malformed patterns, now
  - RippleInsert\_MediaItemStateChunks - had a bug that could cause an error-message -> fixed
  - GetTrackGroupFlagsState - had a bug in checking for validity of TrackStateChunks -> fixed
  - SetKBIniActions - rewritten, as the previous version wasn't working right
  - SetKBIniScripts - rewritten, as the previous version wasn't working right
  - SetKBIniKeys - rewritten, as the previous version wasn't working right
  - AddTrackAUXSendReceives - didn't support Master Track, changed that
  - SetTrackAUXSendReceives - didn't support Master Track, changed that
  - DeleteTrackAUXSendReceives - didn't support Master Track, changed that
  - ToggleScrollingDuringPlayback - minor corrections in the docs
  - GetAllRegionsBetween - corrections in the docs
  - GetItemSpectralVisibilityState - had wrong functionname in docs -> fixed
  - GetTrackExtState - corrections in the docs
  - DeleteArrangeviewSnapshot - had wrong functionname in docs -> fixed
  - CenterViewToCursor - had documented a retval that the function doesn't return -> fixed
  - CreateTrackNumbersString - renamed to CreateTrackString
  - CreateTrackNumbersString\_SelectedTracks - renamed to CreateTrackString\_SelectedTracks
  - GetMediaItemsFromClipboard - using renamed function CreateTrackString() now
  - InsertMediaItemFromFile - using renamed function CreateTrackString\_SelectedTracks() now
  - GetClosestNextRegionEdge - docs: was missing additional return-value edge\_type -> fixed now
  - JumpBackwardBy - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpForwardBy - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpBackwardBy\_Recording - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpForwardBy\_Recording - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - GetClosestGoToPoints - added mouse-cursor-position as possible option
  - GetNextClosestItemEdge - was returning wrong retvals when no item was found -> fixed
  - CenterViewToCursor - added parameter for a non-cursor-position of your choice to center to
  - SetItemPosition - exchanged position and optional statechunk-parameters to be in line with SetProject/Track-statefunctions
  - SetItemLength - exchanged length and optional statechunk-parameters to be in line with SetProject/Track-statefunctions
  - GetSplitCrossFadeState\_ReaperIni - removed, will return as a new function
  - MoveMediaItemsSectionTo - renamed to MoveMediaItemsBetween\_To, as this is more in line with the corresponding of functionnames for getting, deleting, splitting items
  - InsertMediaItem\_MediaItem - allows now inserting MediaItems from other projects as well and into tracks of other projects
  - InsertMediaItem\_MediaItemStateChunk - allows now tracks in other projects to be target; h
                                          ad an issue, that it always required ULTRASCHALL\_TRACKNUMBER in the itemstatechunk to get the target-track -> fixed now to also allow passing a MediaTrack, as the docs always stated
                                          has now additional retvals startposition, endposition, length 
                                          fixed the docs
  - ReadBinaryFile\_Offset - if startoffset is negative, the offset will be seen from the end of the file now
  - ReadBinaryFile - removed, due being a duplication of ReadFullFile
  - ReadFileAsLines\_Array - corrected docs
  - CreateTrackString\_AllTracks - renamed from CreateAllTracksTrackString to be more in line with other CreateTrackString-functions
  - RippleCut - removed the move\_markers parameter; added add\_to\_clipboard parameters, which puts the cut-items to the clipboard
  - RippleCut\_Reverse - removed the move\_markers parameter; added add\_to\_clipboard parameters, which puts the cut-items to the clipboard
  - SectionCut - removed the move\_markers parameter; added add\_to\_clipboard parameters, which puts the cut-items to the clipboard
  - SectionCut\_Inverse - removed the move\_markers parameter; added add\_to\_clipboard parameters, which puts the cut-items to the clipboard
  - EnumerateIniFileExternalState\_sec - added error-messages for invalid section-indices
  - GetUSExternalState - returns now only the value-returnvalue
  - GetID3TagsFromCurrentProject - removed, due being useless in Ultraschall 4.0
  - GetID3TagsFromCurrentProject\_PodcastTags - removed, due being useless in Ultraschall 4.0
  - SetID3TagsForCurrentProject - removed, due being useless in Ultraschall 4.0
  - SetID3TagsForCurrentProject\_PodcastTags - removed, due being useless in Ultraschall 4.0
  - Msg - removed, was useless
  
  ---
  
### 4.00 Beta 2.6: - "Is that all there is? - Peggy Lee" - 19th of October 2017

#### New features in 4.00beta2.6 - has now 450 functions, with about 30 new ones:

  - CreateAllTracksTrackString - creates a trackstring with all tracks in the current project
  - new datastructure "EnvelopePointObjects" and "EnvelopePointArrays"(for EnvelopePointObjects) for easier massworking with envelopepoints
  - CreateEnvelopePointObject - creates an EnvelopePointObject
  - GetEnvelopePoint - gets envelopepoint easier than Reaper's own functions. Returns value converted to db-value as well
  - GetClosestEnvelopePointIDX\_ByTime - gets envelope-point-idx closest to a given timeposition
  - GetEnvelopePointIDX\_Between - gets envelope-points between start and endtime
  - AddEnvelopePoints\_EnvelopePointObject - adds an EnvelopePointObject
  - AddEnvelopePoints\_EnvelopePointArray - adds an array of EnvelopePointObjects
  - CheckEnvelopePointObject - checks, if an EnvelopePointObject is a valid one
  - DeleteEnvelopePoints\_EnvelopePointObject - deletes an envelope-point, according to the EnvelopePointObject 
  - DeleteEnvelopePoints\_EnvelopePointArray -  deletes envelope-points, according to EnvelopePointObjects in EnvelopePointArray
  - SetEnvelopePoints\_EnvelopePointObject - sets an envelope-point, according to the EnvelopePointObject 
  - SetEnvelopePoints\_EnvelopePointArray - sets envelope-points, according to EnvelopePointObjects in EnvelopePointArray
  - CountEnvelopePoints - counts envelope-point in a given track and envelope-name
  - ToggleIDE\_Errormessages - toggles, if API shows the errormessages in Reaper's IDE or not
  - WriteValueToFile\_Insert - inserts a string into a specific line-position of a file
  - WriteValueToFile\_Replace - replaces specific lines in a file with value
  - GetLengthOfFile - returns length of a file
  - ReadBinaryFile\_Offset - reads a binary file. Allows partial reading of a file as well.
  - WriteValueToFile\_InsertBinary - inserts a value into a binary file at specified position
  - WriteValueToFile\_Replace - replaces a specified portion of a file with a value
  - GetStringFromClipboard\_SWS - returns the content of the clipboard, using the SWS-function reaper.CF\_GetClipboardBig, but manages the stuff
      necessary, that surrounds using this function
  - SecondsToTimeString\_hh\_mm\_ss\_mss - converts seconds into a timestring of the format hh:mm:ss.mss
  - TimeStringToSeconds\_hh\_mm\_ss\_mss - converts a timestring of the format hh:mm:ss.mss into seconds
  - ParseMarkerString - converts a string with markernames or a string with timestrings and markernames into an array
  - RenumerateMarkers - renumbers the shown-marker-ids in the project, beginning with the first one to the last one. Good for
                "ordering" markers, that were included in unordered way.
  - ReadFullFile - reads a file and returns it's contents
  - StartTime - a new api-variable that contains the starting time of the current instance of the api, which probably means, your script, that
    embeds the framework
  
#### Changes from 4.00beta2.5 to 4.00beta2.6

  - corrections in the documentation
  - GetClosestNextMarker - couldn't find last marker and showed a time, even if no marker was found -> fixed now; 
      markers that are at time\_position are now seen as a previous marker
  - GetClosestPreviousMarker - couldn't find first marker and showed a time, even if no marker was found -> fixed now; 
      markers that are at time\_position are now seen as a next marker
  - GetClosestPreviousRegion - fixed possible bug preventing from finding the first region -> fixed now
  - GetClosestNextRegion - fixed possible bug preventing from finding the last region -> fixed now
  - GetClosestGoToPoints - new boolean parameters check\_itemedge, check\_marker, check\_region to set, for which type of elements to look for;
      returns now also an item-number; instead of "Item", it uses "Itembeg" for the beginning and "Itemend" for the end of an item now as
      elementtype for items; added the itemtypes to the docs
  - GetNextClosestItemEdge - new return values: closest\_item, item\_number, edgetype, found\_item  
  - GetPreviousClosestItemEdge - new return values: closest\_item, item\_number, edgetype, found\_item  
  - WriteValueToFile - new parameter for optional appending a value to a file, other minor corrections
  - SetTrackRecState - missing parameter description for tracknumber in the docs -> fixed now
  - GetMediaItemsFromClipboard - produced an error, that made this function unusable -> fixed now
  - RippleInsert - didn't move an item close to "position" sometimes, before inserting -> fixed now
  - RippleInsert\_MediaItemStateChunks - didn't move an item close to "position" sometimes, before inserting -> fixed now
  - GetPreviousMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
  - GetNextMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
  - CountMuteEnvelopePoints used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
        could also produce an error when using an invalid track. -> Fixed now.
  - ToggleMute - could produce an error, when using an invalid track. -> Fixed now.
  - GetTrackAutoRecArmState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackAutomodeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBeatState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBusCompState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBypFXState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackFreeModeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackGroupFlagsState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackHeightState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackINQState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIPhaseState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIcon\_Filename - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIsBusState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackLayoutNames - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackLockState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMIDIOutState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMainSendState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMidiCTL - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMidiInputChanMap - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMuteSoloState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackNChansState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackName - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackPeakColorState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackPerfState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackRecState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackShowInMixState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackVUState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - SetTrackAutoRecArmState     - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackAutomodeState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBeatState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBusCompState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBypFXState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackFreeModeState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackHeightState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackINQState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIPhaseState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIcon\_Filename    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIsBusState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackLayoutNames  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackLockState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMIDIOutState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMainSendState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMidiCTL  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMidiInputChanMap    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMuteSoloState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackNChansState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackName  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackPeakColorState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackPerfState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackRecState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackShowInMixState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackVUState  - tracknumbers start now with 1 for track 1, instead of 0
   
   ---

### 4.00 Beta 2.5: - "Musique non stop - Technopop - Kraftwerk" - 10th of September 2017

#### New features in 4.00beta2.5

  - Import Markers/Regions from RPP-Projectfiles
  - Selection/Deselection of items, as well as getting functions for getting selected items
  - functions for checking MediaItemArray and MediaItemStateChunkArrays for validity
  - Trackstatechunks: getting/adding/setting/deleting/counting items in/to trackstate-chunks
  - Routing-Send/Receive - functions for count, add, get, set, delete
  - HWOut-settings - functions for count, add, get, set, delete
  - Lock Track Controls - get, set functions
  - Track Selection functions - get, set
  - Functions to lock-MediaItems easily
  - added RippleInsert for mediaitemstatechunkarrays
  - get MediaItems from clipboard
  - many functions for getting MediaItem-states from MediaItemStateChunks
  - some functions for setting MediaItem-states into MediaItemStateChunks
  - more MediaItem-insertion functions for MediaItemStateChunks
  - choosing MediaItems from specific tracks from MediaItemArray
  - new trackstring-analysis and manipulation-functions
  - functions for getting Mediaitems from specific tracks
  - apply statechunk to MediaItems, for extended manipulation of MediaItems using manipulated MediaItemStateChunks
  - Reaper-Main-Window: get left and right sides in relation to the screen position
  - client2screen2client x-coordinate conversion functions
  - developer: new Errormessaging system, that will, in the future, give readable error-messages, 
      when errors occur during execution of functions. Currently only some functions return error messages; will change over time.
  - tons of other helper-functions in many areas
 
#### Changes from 4.00beta2.1 to 4.00beta2.5

  - minor corrections in documentation
  - RenderProjectToAIFF - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToFLAC - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3\_ABR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3\_CBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3\_MaxQuality - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3\_VBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToOPUS - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToWebMVideo - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - GetProject\_HorizontalZoom was incorrectly named GetProject\_Zoom in the docs -> fixed
  - GetApiVersion was incorrectly linked to GetPath in the docs -> fixed
  - GetAllMediaItemsBetween - adds "ULTRASCHALL\_TRACKNUMBER tracknumber" to returned statechunks, to know, from which track the item originated from
  - SplitMediaItems\_Position - bug introduced in beta 2.1 that split only first track -> fixed
  - RippleInsert - bug introduced in beta 2.1 -> fixed
  - InsertMediaItemArray - bug introduced in beta 2.1 -> fixed
  - GetMediaItemsAtPosition - bug introduced in beta 2.1 -> fixed
  - OnlyMediaItemsOfTracksInTrackstring - bug introduced in beta 2.1 -> fixed
  - DeleteMediaItems\_Position - bug introduced in beta 2.1 -> fixed
  - GetAllMediaItemsBetween - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsAfter\_By - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsBefore\_By - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsSectionTo - bug introduced in beta 2.1 -> fixed
  - SectionCut - bug introduced in beta 2.1 -> fixed
  - SectionCut\_Inverse - bug introduced in beta 2.1 -> fixed
  - RippleCut - bug introduced in beta 2.1 -> fixed
  - RippleCut\_Reverse - bug introduced in beta 2.1 -> fixed
  - RemoveDuplicateTracksInTrackstring - entries in trackstringarray are now numbers, not strings
  - SetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIcon\_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackGroupFlagsState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIcon\_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetMediaItemsAtPosition - returns now an array with the MediaItemStateChunks as well
  - RemoveDuplicateTracksInTrackstring - produced Lua-error, when giving nil as parameter -> fixed
   
   ---
   
### 4.00 Beta2.1: - "Ich und der Rock - Renft" - 30th of August
#### New features in 4.00beta2.1

  - mostly bugfixes
  - ultraschall.Separator - contains the proper separator for the system it runs on. If you want to do file-operation, 
                you should use this instead of \\ or /, to make your script Mac and Windows compliant.
  - ultraschall.Script\_Path - contains the path to the scripts-folder of Reaper
  
#### Changes from 4.00beta2 to 4.00beta2.1 

  - changed the lines, you need to include into your script. refer "3. How to use the API in your LUA-Script" in the doc-file.
  - some functions didn't work on Mac, due it's use of / instead of \ as directory-separator. Has been fixed now.
  - moved all ultraschall-related variables into the ultraschall-table.
  - GetPartialString - returns nil in case of error
  - CSV2Line - returns nil in case of error, bugfixing
  - RGB2Num - returns nil in case or error
  - CSV2IndividualLinesAsArray - returns nil in case or error, bugfixing
  - GetNextMuteState - corrected documentation
  - GetNextMuteState\_TrackObject - corrected documentation
  - GetPreviousMuteState - corrected documentation
  - GetPreviousMuteState\_TrackObject - corrected documentation
  - ImportChaptersFromFile - corrected documentation
  - ImportEditFromFile - corrected documentation
  - ImportMarkersFromFile - corrected documentation
  - ImportChaptersFromFile\_Filerequester - corrected documentation
  - ImportEditFromFile\_Filerequester - corrected documentation
  - ImportMarkersFromFile\_Filerequester - corrected documentation
  - RemoveDuplicateTracksInTrackstring - improved return values
  - OnlyMediaItemsOfTracksInTrackstring - improved return values
  - ChangeDeltaOffsetOfMediaItems\_FromArray - bugfixing
  - InsertMediaItem\_MediaItem - improved return values
  - InsertMediaItem\_MediaItemStateChunk - improved return values
 
 ---
   
### 4.00 Beta2: - "Shock The Monkey - Peter Gabriel" - 20th August 2017
#### New Features in 4.00beta2 - about 190 new functions with:

  - Configuration: Import/Export from/to reaper-kb.ini-files
  - Configuration: New Management-functions for Configuration-files that follow standard ini-files
  - Clipboard: Clipboard Functions, get and put (thanks to fernsehmuell for the mac-side)
  - Envelopes: Move Envelope-Points in a track
  - File-Management: extended fileread-functions, including reading lines that follow patterns, and more
  - Markers: Move Markers, as well as Edit Markers
  - Markers: Get Markers/Regions/Time-Signature-marker by their graphical representation, means: you can use e.g. the mouse to find markers
        the mouse is hovering above
  - Items: Get, Split, Insert, Delete, Shorten, Cut, RippleCut, RippleInsert, etc of single and multiple MediaItems in 1 or more tracks
  - Projectfiles: Get and set 40 settings in rpp-projectfiles. More to come.
  - Projectfiles: Import Tracks with Items and all FX and settings from project-files using GetProject\_TrackStateChunk. 
          You can insert them with the new item function InsertMediaItem\_MediaItemStateChunk
  - Rendering: Render projectfiles as mp3, mp3\_vbr, mp3\_cbr, mp3\_abr, opus, flac, aiff, and webm(video). That's right: no render dialog necessary!
  - Docs: The Documentation-System, that automatically creates the API-Docs from the API itself, using CreateUSApiDocs\_HTML. 
      Will be extended to be a fully equipped automatic-documentation-system for Ultraschall
  - Tons of other functions in all areas.
      
#### Changes from 4.00beta1 to 4.00beta2

  - Marker/Regions-functions - they used to ignore regions which led to wrong markers/regions -> fixed
  - ultraschall.WriteValueToFile - default write-mode changed to binary-file behavior(doesn't add useless newlines anymore)
                    non binary-mode can be chosen by a new parameter "binarymode" set to false, if it's   
                    set to nil or true, value will be treated as binaryvalue and saved as such.
                    ultraschall.WriteValueToFile(Filename\_with\_path, Value, binarymode)
  - CSV2IndividualLines - renamed to CSV2IndividualLinesAsArray and added number of lines as additional return-value
  - NumberRangeAsCsvOfNumbers - renamed to CreateTrackNumbersString
  - Structure - reworked API-structure
 
 
 ---
 
### 4.00 beta1: - "Tomorrow Never Knows - The Beatles" - 10th of July 2017
#### New Features in 4.00beta1 - about 140 new functions with:

  - Markers: extensive marker-management, with markers for chapter, edit, dummy, normal and podrange-regions
  - Configuration: functions for an Ultraschall.ini. Ultraschall needs it's own config-file, at last ;)
  - CoughButtons: CoughButton-management for setting, toggling, getting envelope-points in the mute-envelope-lane
  - Navigation: Jumping to position, setting playcursor, toggling scrolling during playback, finding next item/marker/region and more
  - Track-Management: Getting and Setting tons of track-states, that are usually hard to fumble out of Reaper.
  - File-Management: Write a value to a file.
  - Dozens of helper-functions here and there