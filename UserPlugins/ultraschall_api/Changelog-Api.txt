##Ultraschall Framework - Changelog

###4.00 Beta 2.8: - "Mike Oldfield - Taurus II/Five Miles Out" - 15th of May 2019

####New features in 4.00beta2.8
  - SplitStringAtNULLBytes - splits a string at NULL-bytes ( \0 )
  - new background-script - ultraschall_track_old_playstate.lua - stores old playstate into extstate ultraschall->last_playstate
  - GetLastPlayState - returns the last playstate before the current one
  - SetUSExternalState - converts now all passed parameters to string, regardless of their type
  
####Changes from 4.00beta2.7 to 4.00beta2.8
  - GetMarkerByScreenCoordinates - returned useless newlines -> fixed now
  - GetMarkerByTime - returned useless newlines -> fixed now
  - GetRegionByScreenCoordinates - returned useless newlines -> fixed now
  - GetRegionByTime - returned useless newlines -> fixed now
  - GetApiVersion - updated versionsnumbering
  - docs generate and include now beta-functions as well
  - docs use now GetApiVersion for displaying version-numbering

  <TODO>
    For 4.00beta2.8:
      TODO!! Functionshook in Render-functions.
                before the render project using last render settings-action is triggered, it should be possible to run a function that "prepares" the project for rendering
      TODO!! Rendering "pre-trail"-management, where a to be rendered project gets adds some silence in the beginning of the project, so possible "CPU needs to run up to fully calculate the rendering" will happen first.
                sometimes issue in render-queues
      TODO!! Multipass-rendering
                When you want to render out a "wet"-loop, that needs reverb or something, you would need to render this loop three times:
                        one to start up all reverbs, two for the actual loop and three for the "loop aftermath"
                After that, you need to edit this rendered file down to the middle part by hand, which is tedious.
                If there's a rendering-function could do that automatically, it would be cool.
                    Load the project(if not the current one)
                    Copy the tracks with the to be looped items/timeselection into an empty project, which must hold all rendering-settings(looped-time-selection probably)
                    duplicate it so the items are now three times after each other
                    Render it out and include the rendered file into the current project(maybe as stems?)
                    edit it down to the original loop
                    Render that out into a new file
                    Delete the temp-rendered-files
                    close the projects and return the filename
                    
                
      TODO!! Code still has countless of useless tonumber-conversions included and other weird old parameter-checks:
            - DeleteErrorMessage - deletes a specific error-message from the error-messaging-system
            - Docs: Error-Messaging-System - added docchapters to Introductions/Concepts-page
            - ReadErrorMessage - improved error-message, errornumber now checks, if being an integer
            - GetAllLockedTracks - improved checking for validity of parameters
            - GetAllSelectedTracks - improved checking for validity of parameters
            - GetProject_MasterGroupFlagsHighState - improved checking for validity of parameters
            - GetProject_MasterGroupFlagsState - improved checking for validity of parameters
            - GetTrackAutoRecArmState - improved checking for validity of parameters
            - GetTrackAutomodeState - improved checking for validity of parameters
            - GetTrackBeatState - improved checking for validity of parameters
            - GetTrackBusCompState - improved checking for validity of parameters
            - GetTrackBypFXState - improved checking for validity of parameters
            - GetTrackFreeModeState - improved checking for validity of parameters
            - GetTrackGroupFlagsState - improved checking for validity of parameters
            - GetTrackGroupFlags_HighState - improved checking for validity of parameters
            - GetTrackHeightState - improved checking for validity of parameters
            - GetTrackID - improved checking for validity of parameters
            - GetTrackINQState - improved checking for validity of parameters
            - GetTrackIPhaseState - improved checking for validity of parameters
            - GetTrackIcon_Filename - improved checking for validity of parameters
            - GetTrackIsBusState - improved checking for validity of parameters
            - GetTrackLayoutNames - improved checking for validity of parameters
            - GetTrackLockState - improved checking for validity of parameters
            - GetTrackMIDIOutState - improved checking for validity of parameters
            - GetTrackMainSendState - improved checking for validity of parameters
            - GetTrackMidiBankProgFn - improved checking for validity of parameters
            - GetTrackMidiCTL - improved checking for validity of parameters
            - GetTrackMidiColorMapFn - improved checking for validity of parameters
            - GetTrackMidiInputChanMap - improved checking for validity of parameters
            - GetTrackMidiTextStrFn - improved checking for validity of parameters
            - GetTrackMuteSoloState - improved checking for validity of parameters
            - GetTrackNChansState - improved checking for validity of parameters
            - GetTrackName - improved checking for validity of parameters
            - GetTrackPanMode - improved checking for validity of parameters
            - GetTrackPeakColorState - improved checking for validity of parameters
            - GetTrackPerfState - improved checking for validity of parameters
            - GetTrackRecCFG - improved checking for validity of parameters
            - GetTrackRecState - improved checking for validity of parameters
            - GetTrackScore - improved checking for validity of parameters
            - GetTrackShowInMixState - improved checking for validity of parameters
            - GetTrackStateChunk_Tracknumber - improved checking for validity of parameters
            - GetTrackVUState	GetTrackVolPan - improved checking for validity of parameters
            - GetTrackWidth - improved checking for validity of parameters
            - JumpForwardBy - improved checking for validity of parameters
            - JumpBackwardBy - improved checking for validity of parameters
            - JumpForwardBy_Recording - improved checking for validity of parameters
            - JumpBackwardBy_Recording - improved checking for validity of parameters
            - GetNextClosestItemEdge - improved checking for validity of parameters
            - GetPreviousClosestItemEdge - improved checking for validity of parameters
            - GetClosestNextMarker - improved checking for validity of parameters
            - GetClosestPreviousMarker - improved checking for validity of parameters
            - GetClosestNextRegionEdge - improved checking for validity of parameters
            - GetClosestPreviousRegionEdge - improved checking for validity of parameters
            - ToggleMute - improved checking for validity of parameters
            - ToggleMute_TrackObject - improved checking for validity of parameters
            - GetNextMuteState - improved checking for validity of parameters
            - GetPreviousMuteState - improved checking for validity of parameters
            - GetNextMuteState_TrackObject - improved checking for validity of parameters
            - GetPreviousMuteState_TrackObject - improved checking for validity of parameters
            - CountMuteEnvelopePoints - improved checking for validity of parameters
            - IsMarkerEdit - improved checking for validity of parameters
            - IsMarkerNormal - improved checking for validity of parameters
            - IsRegionPodrange - improved checking for validity of parameters
            - IsRegionEditRegion - improved checking for validity of parameters
            - GetProject_GetMarker - improved checking for validity of parameters
            - GetProject_CountMarkersAndRegions - improved checking for validity of parameters
            - GetProject_GetRegion - improved checking for validity of parameters
            - GetEnvelopePoint - improved checking for validity of parameters
            - GetClosestEnvelopePointIDX_ByTime - improved checking for validity of parameters
            - GetEnvelopePointIDX_Between - improved checking for validity of parameters
            - CountEnvelopePoints - improved checking for validity of parameters
            - WriteValueToFile_Insert - improved checking for validity of parameters
            - WriteValueToFile_Replace - improved checking for validity of parameters
            - GetTrackLength - improved checking for validity of parameters
            - GetLengthOfFile - improved checking for validity of parameters
            - WriteValueToFile_InsertBinary - improved checking for validity of parameters
            - WriteValueToFile_ReplaceBinary - improved checking for validity of parameters

            SetTrack-functions still need that kind of treatment.

      TODO!!  - DeleteItemExtState, DeleteTrackExtState
      TODO!!  - SetStateChunk-functions: how to check for ProjectStateChunk/TrackStateChunk/ItemStateChunk/EnvStateChunk, when new parameters are added to the function?
                                         something with ... ? Otherwise, new added parameters will break old scripts...
      TODO!!  - issue with parameters/retvals in USDocML-files: nil-error, when a retval/parameter entry is only 
                <retvals>
                    -
                </retvals> 
                also has an issue, when an empty line occurs, between numerous - It ends interpretation at that point.
                like that:
                   -
                   
                   -
                   
      TODO!!  - Mix-Snapshots, who store/retrieve the current/a former mix
      TODO!!  - totype(value, string type), converts a value to type and returns it, if impossible, returns nil; includes string, boolean, integer, float, hex, oct, base64, etc
      TODO!!  - ArrangeViewSnapshots - use reaper.JS_Window_SetScrollPos(HWND, "SB_VERT", value) to set and JS_Window_GetScrollInfo from JS new plugin to get/store vertscrollpos
      TODO!!  - Get Length of all Items in a track GetLengthOfAllItems_Track()
      TODO!!  - Add options to Normalize-Items-function, as there are numerous different actions for normalizing
      TODO!!  - Envelope-ExtStates
      TODO!!  - Planned Chapter Marker-functions! insert/set/delete/enumerate/export/import
      TODO!!  - GetReaperPaths - returns app-path(?), exe-path, resourcepath
      TODO!!  - import/export Bonus-script-packs-functions(for importing and registering additional bonus scripts)
      TODO!!  - GetLastEnvelopePoint (How to do that with AutomationItems ?)
      TODO!!  - RenderProjectRegions_RenderCFG2  and RenderProject_RenderCFG2 - set RenderPattern instead of RenderFilenameWithPath
      TODO!!  - RenderProjectRegions_RenderCFG3  and RenderProject_RenderCFG3 - set Track(s) to be rendered
      TODO!!  - Renderfunctions - full featured Video; add GIF, LCF
      TODO!!  - MP4 on Mac-Rendering
      TODO!!  - Add3rdParty-Script-support/functions-support
      TODO!!  - AddUltraschallScripts() AddUltraschall3rdPartyScripts() add all 3rd party-scripts from the 3rd-party-US-folder
            also add scripts to do that, that will be registered into the ActionList together with the ShowUSApiHelp-script as well
      TODO!!  - Import3rdPartyScripts(string filelist, integer script_target, boolean add)
              copies files from filelist into script_target
              script_target - 0, scripts-folder
                      - 1, ultraschall-3rd-party-scripts-folder
                      - -1, don't copy files
              boolean add - true, add the scripts to the actionlist; false, remove them from the action-list
      TODO!!  - create HTML-docs from all files in the functions-department of Ultraschall/3rd-party-functions
      TODO!!  - Show$ContextMenu() - ShowPopupMenu is too complicated to use. Create proper useable functions to address that
      TODO!!  - Implement the basic-concept for additional-background-script and handshake-extstate-protocol-communication, as needed for
            network/gui-engine into a concept, useable by others.
            It will create a script in a specific language, that includes the basic communication-functions, to communicate with the
            sourcescript(like extstates, using a guid as extname)
            Should support Lua, Python, Eel-Scripts(though I will only use the Lua-version for the Api)
      TODO!!  - read/include ID3-Tags/ID3-chapters from files(only the tag itself, not individual entries yet)
      TODO!!  - Get/SetMarkersFromClipboard-functions
      TODO!!  - integer bufsz = ultraschall.ShowConsoleMsg(string msg, optional integer revoffset) - stores msg into a textbuffer. When revoffset isn't given, it will replace the textbuffer.
                                                     - revoffset, 0, put msg at the end of textbuffer
                                                            1, to bufsz, cut of revoffset-bytes from the
                                                             end of textbuffer and add msg; clear console and display
                                                             message from textbuffer
                                                            -1, clear textbuffer, add msg and display message from textbuffer
                                                     Good for displaying updating-messages to the Console.
                                                     Hijacks reaper.ClearConsole() to flush textbuffer.(?)
      TODO!!  - GFX: virtual screenbuffers(create/remove/blit)
      TODO!!  - ultraschall.gfx_getkey(integer buffer), allows pipe-ing of UserInput directly into a textbuffer. The textbuffer acts like a invisible textbox, which can be shown using drawstr or something
                                                        must support arrow, bspc, enter, return, copynpaste as well
      TODO!!  - CreateItemFromTake, which creates a new item from an existing take. Like cropping, but leaves the original untouched.
      TODO!!  - CropTakeFromItem, which removes a take from an item; maybe allowing multiple ones?
      TODO!!  - MoveTakeInTakeOrderInMediaitem, which allows changing the order of takes within an item
      TODO!!  - functions to setup the LICECAP-settings, before running it; a function to run LiceCap
            set filename with .gif or .lcf to set the default filetype used!
      TODO!!  - functions for native-colorstuff like, gradients, hue
            as well as the same functions for a colorarray, which has a number of colors inside of it, that can be contrasted, gradiented, etc
            they shall support gfx.init-color-values as output(boolean gfx.init-colorvalues (0 to 1)
            Already started with ColorTables for Colorpicker(!!!!)
      TODO!!  - GetAllTakesFromMediaItem - returns an array with all takes from an item, objects as well as info_values
      TODO!!  - Get/SetProjectBay-functions
      TODO!!  - Envelope-StateChunk-functions
      TODO!!  - ultraschall.ApplyActionToEnvelope(TrackEnvelope, actioncommandid) 
                        - not possible, as I can't programatically change the selected envelope...maybe with SetCursorContext, as this allows focusing a trackenvelope, 
                                but also sets focus to arrangeview, which is quite brutal
      TODO!!  - SetProject-functions for
                  - SetProject_AutomationItemStateChunk - gets an automation-item from a project/ProjectStateChunk
                  - SetProject_ProjectBay - gets the projectbay from a project/ProjectStateChunk
                  - SetProject_Metronome - gets the statechunk for all metronome-settings from a project/ProjectStateChunk
                  - SetProject_MasterPlayspeed - gets the statechunk for all master-playspeed-settings from a project/ProjectStateChunk
                  - SetProject_Tempo - gets the statechunk for all tempo-settings from a project/ProjectStateChunk
                  - SetProject_Extensions - gets the statechunk for all extension-settings from a project/ProjectStateChunk
                  - SetProject_Lock - gets the individual lock-settings from a project/ProjectStateChunk
                  - SetProject_GlobalAuto - returns the global automation override-settings of an rpp-file or ProjectStateChunk
                  - SetProject_Tempo - returns the tempo-settings of an rpp-file or a ProjectStateChunk
                  - SetProject_Playrate 
                  - SetProject_MasterAutomode
                  - SetProject_MasterSel
                  - SetProject_MasterFXByp
                  - SetProject_MasterMuteSolo
                  - SetProject_MasterNChans
                  - SetProject_MasterTrackHeight
                  - SetProject_MasterTrackColor
                  - SetProject_MasterTrackView
                  - SetProject_CountMasterHWOuts
                  - SetProject_MasterHWOut
                  
                  - SetProject_MasterVolume - 
                  - SetProject_MasterPanMode - 
                  - SetProject_MasterWidth - 
                  - SetProject_MasterGroupFlagsState - 
                  - SetProject_MasterGroupFlagsHighState - 
                  - SetProject_GroupDisabled - 
                  
                  - SetProject_MasterHWVolEnvStateChunk
                  - SetProject_MasterFXListStateChunk - 
                  - SetProject_MasterDualPanEnvStateChunk - 
                  - SetProject_MasterDualPanEnv2StateChunk - 
                  - SetProject_MasterDualPanEnvLStateChunk - 
                  - SetProject_MasterDualPanEnvL2StateChunk - 
                  - SetProject_MasterVolEnvStateChunk - 
                  - SetProject_MasterVolEnv2StateChunk - 
                  - SetProject_MasterVolEnv3StateChunk - 
                  - SetProject_MasterHWPanEnvStateChunk - 
                  - SetProject_MasterPanMode_Ex - 
                  - SetProject_TempoEnv_ExStateChunk
                  
               - IsValid-check functions for
                    - AutomationItems, ProjectBay, Metronome, MasterPlayspeed, Tempo, Extensions, MasterHWVolEnv, MasterFXList, MasterDualPanEnv
                      MasterDualPanEnv2, MasterDualPanEnvL, MasterDualPanEnvL2, MasterVolEnv, MasterVolEnv2, MasterVolEnv3, MasterHWPanEnv, TempoEnv_Ex   
   </TODO>

###4.00 Beta 2.7: - "Frank Zappa - The Return of the Son of Monster Magnet" - 15th of December 2018

Has now 700 functions, with about 250 new ones!

####New features in 4.00beta2.7
  - SetEnvelopeHeight - set the height and compactible state of an envelope-lane/envelopestatechunk
  - GetTrackStateChunk_Tracknumber - get a TrackStateChunk without the hassle of creating a trackobject first  
  - SetTrackStateChunk_Tracknumber - set a TrackStateChunk without the hassle of creating a trackobject first
  - GetTrackWidth - gets the Track-Width
  - GetTrackVolPan - gets Vol and Pan-settings of the track
  - GetTrackScore - gets Score of the track
  - GetTrackPanMode - gets PanMode of the track
  - GetTrackMidiColorMapFn - gets MidiColorMapFilename of the track
  - GetTrackMidiBankProgFn - gets MidiBankProg-Filename of the track
  - GetTrackMidiTextStrFn - gets MidiTextStr-Filename of the track
  - GetTrackID - gets the track-ID
  - CountPatternInString - counts a pattern in a sourcestring and returns appearances and positions of appearances
  - ConvertColor - converts color to native, without the hassle that Reaper needs
  - CountNormalMarkers_NumGap - returns the first numbering-gap within shown-markernumbers
  - CenterViewToCursor - centers arrange view to play-, edit- or mousecursor-timeposition.
  - SetReaperWindowToSize - to set the size of Reaper's Main Window
  - toboolean - converts a string to boolean, if possible. Like Lua's tostring() or tonumber()-functions
  - CheckActionCommandIDFormat - checks, if an action-command-id is properly formatted
  - CheckActionCommandIDFormat2 - checks, if an action-command-id is properly formatted and if it exists in the Reaper-installation
  - IsRegionAtPosition - checks, if regions are at a certain position and returns their index-numbers
  - IsMarkerAtPosition - checks, if markers are at a certain position and returns their index-numbers
  - SetTrackID - sets the track-ID
  - SetTrackMidiColorMapFn - sets MidiColorMapFilename of the track
  - SetTrackMidiBankProgFn - sets MidiBankProg-Filename of the track
  - SetTrackMidiTextStrFn - sets MidiTextStr-Filename of the track
  - SetTrackPanMode - sets PanMode of the track
  - SetTrackWidth - sets the Track-Width
  - InsertMediaItemFromFile - inserts a mediafile into the project at position and in specific track
  - GetMediafileAttributes - returns mediafile-attributes
  - GetMarkerByName - gets markers/regions by name
  - GetMarkerByName_Pattern - gets markers/regions that have a certain character-sequence in their name
  - GetMarkerByIndex - gets values of a certain marker/region, count by either markers or regions
  - SetMarkerByIndex - sets values of a certain marker/region, count by either markers or regions
  - GetReaperAppVersion - returns the appversion and the bits-version of the Reaper-App, separated into version and bits(unlike reaper.GetAppVersion())
  - GetOS - returns the operating system and it's bits separated, unlike reaper.GetOS()
  - IsOS_Windows - returns true, if the operating-system is Windows, false if not. Also returns the bits of the os.
  - IsOS_Mac - returns true, if the operating-system is MacOS, false if not. Also returns the bits of the os.
  - IsOS_Other - returns true, if the operating-system is other(usually Linux), false if not. Also returns the bits of the os.
  - GetItemSpectralConfig - gets the FFT-size of the spectral-edit-view of a specific item/statechunk
  - SetItemSpectralConfig - sets the FFT-size of the spectral-edit-view of a specific item/statechunk
  - GetItemSpectralEdit - Get the settings of a given spectral-edit-boundary-box
  - CountItemSpectralEdits - Counts the number of spectral-edit-boundary-boxes
  - DeleteItemSpectralEdit - deletes a spectral-edit-boundary-box
  - SetTrackScore - sets SCORE-state of a track
  - SetTrackVolPan - set vol, pan, panlaw of a track
  - SetTrackRecCFG - set track-rec-encoding-configuration
  - LimitFractionOfFloat - takes a float-value and reduces the number of digits in the fraction-part of the float; (500th Api function!)
  - SearchStringInString - searches for occurrences of a string within another string; differs from CountPatternInString in that it allows
               disabling searching for strings within already found strings
  - GetAllEntriesFromTable - returns all entries from a table in an iterable form; good for unknown tables/tablestructures
  - GetItemSourceFile_Take - returns filename, pcm-source and the media-item-take-object of a requested take
  - GetAllDirectoriesInPath - gets all directory-names in path
  - GetAllFilesnamesInPath - gets all filenames in path
  - CountDirectoriesAndFilesInPath - counts files and directories in path
  - APIExists - returns, if a certain function/element exists in the ultraschall-api
  - AddItemSpectralEdit - adds an spectral-editing-box into an item/statechunk
  - GetItemSpectralVisibilityState - get the visibility-state of spectral-edit of a certain MediaItem
  - IsValidEnvStateChunk - checks, if a string is a valid envelope-state-chunk
  - IsValidTrackStateChunk - checks, if a sring is a valid trackstate-chunk
  - IsValidItemStateChunk - checks, if a string is a valid itemstate-chunk
  - EnumProjects - gets the projectfilename+path and the ReaProject-object of a requested project
  - DeleteProjExtState_Section - deletes all project-extstates from a specific section
  - DeleteProjExtState_Key - deletes the value from a specific project-extstates->section->key
  - GetProjExtState_AllKeyValues - get all keys and values from a proj-extstate
  - IsValidGuid - checks, if a string is a valid guid
  - SetGuidExtState - sets a proj-extstate with a guid as extname(good for additional metadata for tracks/items/etc
  - GetGuidExtState - gets a proj-extstate with a guid as extname(good for additional metadata for tracks/items/etc
  - GetVZoom - returns the current vertical-zoomfactor of the current project
  - SetVZoom - sets the vertical-zoomfactor of the current project
  - StoreArrangeviewSnapshot - stores a snapshot of current start/endposition and verticalzoom from the arrangeview into a proj-extstate-slot
  - IsValidArrangeviewSnapshot - checks, whether an arrangeview-snapshot-slot is set/valid
  - RetrieveArrangeviewSnapshot - returns the values set in a specific Arrangeview-Snapshot-slot
  - RestoreArrangeviewSnapshot - sets arrangeview to start/endposition/verticalzoom, as set in the arrangeview-snapshot-slot
  - DeleteArrangeviewSnapshot - deletes an arrangeview-snapshot-slot
  - SetBitfield - sets/unsets/toggles individual bits in a bitfield
  - PreventCreatingUndoPoint - prevents creation of an undo-point(only useful in non-defer-scripts)
  - SetIntConfigVar_Bitfield - allows setting config-vars, that are integer-bitfields, quite easy
  - IsValidProjectStateChunk - checks, if a string is a valid ProjectStateChunk
  - CountMarkersAndRegions - counts markers and regions and returns their count as two(!) retvals
  - GetLastMarkerPosition - gets the position and idx of the last marker in the project
  - GetLastRegion - gets start/endposition and idx of the last ending region in the project
  - GetLastTimeSigMarkerPosition - gets position, measure- and beatposition of the last time-sig-marker in the project
  - MakeCopyOfTable - creates a true copy of a table(not only references)
                      adapted from Tyler Neylon's function, found at [Stack Overflow](https://stackoverflow.com/questions/640642/how-do-you-copy-a-lua-table-by-value/26367080#26367080)
                      Thanks to him for allowing me to use it :)
  - CheckForValidFileFormats - checks for valid fileformats that are supported by Reaper(still missing mp4, opus, m4a, m4v)
  - CompareStringWithAsciiValues - Compares a string with a number of ASCII-Values, given as individual parameters
  - CountEntriesInTable_Main - Counts the entries in a table; counts only the "main"-entries; returns subtables for recursive counting
  - ConvertStringToAscii_Array - Converts a string into an array, where each entry contains the numerical representation of the accompanying character in string
  - CompareArrays - Compares two arrays and returns all entries from array2, that's missing in array1
  - GetAllMediaItemGUIDs - returns a table with the guids of all MediaItems
  - InsertImageFile - Inserts an image-file into the project, allows looping it and giving length of the newly created item
  - SetItemExtState - Sets a projextstate for an item
  - GetItemExtState - Gets a projextstate for an item
  - SetTrackExtState - Sets a projextstate for a track
  - GetTrackExtState - Gets a projextstate for a track
  - CountLinesInString - Counts the lines in a string
  - GetIDEFontSize - gets the current fontsize set for Reaper's IDE
  - SetIDEFontSize - sets a new fontsize for Reaper's IDE
  - MB - like reaper.MB, but allows omitting title and type parameters for faster use.
  - ReadFileAsLines_Array - like ReadLinerangeFromFile, but returns the read lines as an array
  - GetAllMarkersBetween - returns an array with all markers between start and endposition
  - GetAllRegionssBetween - returns an array with all regions between start and endposition
  - GetAllRegions - returns an array with all regions in the project
  - MoveMarkersTo - moves all markers between start/endposition to a specific position
  - MoveRegionsTo - moves all regions between start/endposition to a specific position
  - CreateValidTempFile - determines a valid temporary filename and creates it, if needed.
  - When using the first time, it installs automatically an action for showing the Api-Help(Ultraschall and Reaper)
  - SetItemSpectrogram - toggles displaying spectral-edit for an item or an itemstatechunk
  - SetItemSpectralEdit - sets an existing spectral-edit for an item or an itemstatechunk
  - CountProjectTabs - counts currently opened projecttabs
  - GetProject_Tabs - returns all project-tabs and their accompanying filenames
  - CheckForChangedProjectTabs - checks, if the order of the projecttabs changed, or projecttabs were new/closed since last calling this function
  - GetAllSelectedMediaItems - returns an array with all selected MediaItems in the project
  - SetMediaItemsSelected_TimeSelection - Sets MediaItems selected within Time-Selection
  - GetParentTrack_MediaItem - returns the tracknumber and trackobject, in which a given MediaItem lies
  - IsItemInTrack2 - checks, whether an item is within a track
  - IsItemInTrack3 - checks, whether an item is within a number of tracks
  - ReturnTypeOfReaperObject - returns, type of Reaper-object
  - IsObjectValidReaperObject - checks, whether an object is a valid Reaper-object(project, item, take, etc)
  - KeepTableEntriesOfType - removes entries from a table, that aren't of a certain type
  - RemoveTableEntriesOfType - removes entries from a table, that are of a certain type
  - IsValidTrackString - checks, whether a trackstring is a valid one
  - IsItemInTimerange - checks, whether an item is within a timerange
  - OnlyItemsInTracksAndTimerange - throws out all MediaItems from a MediaItemArray, that aren't in given tracks and timerange
  - ApplyActionToMediaItem - applies an action to a MediaItem
  - ZoomVertical_MidiEditor - vertical zoom in MIDI-Editor
  - ZoomHorizontal_MidiEditor - horizontal zoom in MIDI-Editor
  - OpenItemInMidiEditor - opens an item in the MIDI-editor
  - ApplyActionToMediaItemArray - applies an action to given items
  - ApplyActionToTrack - applies an action to given tracks
  - GetAllMediaItemsInTimeSelection - returns all media-items from within time-selection
  - NormalizeItems - normalizes given items
  - added an ini-file with all render-codes for Video, MP3, FLAC, DDP, OPUS, OGG and AIFF
  - GetOutputFormat_RenderString - returns the output-format of a render-cfg-string from rpp-files/ProjectStateChunks and the reaper-render.ini
  - GetProject_RenderCFG - returns the render-string(which contains all render-settings of a project) of a project/ProjectStateChunk
  - SetProject_RenderCFG - sets the render-string(which contains all render-settings of a project) of a project
  - GetAllMediaItems - gets all MediaItems from the current project in a MediaItemArray
  - CreateRenderCFG_Opus - creates the render-cfg-string for an opus-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_OGG - creates the render-cfg-string for an OGG-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_DDP - creates the render-cfg-string for a DDP-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_AIFF - creates the render-cfg-string for an AIFF-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_FLAC - creates the render-cfg-string for a FLAC-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_WAVPACK - creates the render-cfg-string for a WAVPACK-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_WebMVideo - creates the render-cfg-string for an WebM-Video-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - RenderProject_RenderCFG - renders a project, using a certain render-string, created from the aforementioned functions
  - CreateRenderCFG_MP3MaxQuality - creates the render-cfg-string for a MP3-maxquality-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3VBR - creates the render-cfg-string for a MP3-vbr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3ABR - creates the render-cfg-string for a MP3-abr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - CreateRenderCFG_MP3CBR - creates the render-cfg-string for a MP3-cbr-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - AddIntToChar - add an integer-value to the numerical representation of a character and return it as a new character
  - CreateRenderCFG_WAV - creates the render-cfg-string for a WAV-file; use it in rpp-projectfiles/ProjectStateChunks or reaper-render.ini
  - PreviewMediaItem - play a preview of a MediaItem
  - StopAnyPreview - stop preview of a MediaItem
  - InsertTrackAtIndex - insert one or more new tracks into your project; more control about that than with Reaper's original function
  - MoveTracks - moves given track(s) to a new position
  - PreviewMediaFile - play preview of a mediafile, that is not necessarily in the project
  - MakeFunctionUndoable - run a function with it and it will create an Undo-Point for that given function automatically
  - GetProject_Selection - get the time-selection of an rpp-project or ProjectStateChunk
  - SetProject_Selection - set the time-selection of an rpp-project or ProjectStateChunk
  - DirectoryExists - check, if a directory already exists in a path
  - All parts of the API have now their own build-counters in the ultraschall_api.ini
  - API checks now, if SWS2.9.7 is installed and displays an error-message, if it's missing.
  - ApplyFunctionToMediaItemArray - applies a function to all MediaItems in a MediaItemArray
  - ReturnTableAsIndividualValues - returns index 1 to 64 of a table as return-values
  - GetMediaItemTake - returns a MediaItem_Take of an item, either a specific or the active one
  - requires now Reaper 5.95
  - GetProject_MarkersAndRegions - returns Markers and Regions from a Projectfile/ProjectStateChunk into an array
  - RenderProjectRegions_RenderCFG - renders a project's region
  - GetGapsBetweenItems - returns a table with all gaps between items in a track
  - IsValidMatchingPattern - checks, if a string is a valid pattern-matching string
  - IsValidReaProject - checks, if a ReaProject-object is a valid one
  - type - returns the type of an object, either Lua's own datatypes or Reaper's own datatypes (SWS-specific-datatypes are not supported...yet(?))
  - SetTrackGroupFlagsState - sets the GroupFlagsState in a track or a TrackStateChunk for track-group 1-32
  - SetTrackGroupFlags_HighState - sets the GroupFlagsState in a track or a TrackStateChunk for track-group 33-64
  - GetTrackGroupFlags_HighState - gets the GroupFlagsState in a track or a TrackStateChunk for track-group 33-64
  - all(!) TrackStates are now get/settable(!)
  - all functions create now useful error-messages, who can be retrieved with the error-message-functions, 
            refer to the Developer -> Error Handling-functions in the index of the functions-reference
            
            Good riddance, what a long term hard work to code that...
  - GetCurrentTimeLengthOfFrame - gets the length of a frame in seconds of a certain project; good for video/image-related functions like InsertImageFile
  - GetLengthOfFrames - gets the length of a number of frames in seconds of a certain project; good for video/image-related functions like InsertImageFile
  - GetStartNewFileRecSizeState - gets, if Reaper shall start a new file during recording, after XXX MBs, and the maximum size of a recorded file til restart
  - SetStartNewFileRecSizeState - sets, if Reaper shall start a new file during recording, after XXX MBs, and the maximum size of a recorded file til restart
  - GetPlayCursorWidth - get the width of the playcursor in pixels
  - SetPlayCursorWidth - set the width of the playcursor in pixels
  - GetReaperAlwaysOnTopState - get, if Reaper is set to be always on top of other applications, as set by action 40239
  - GetInputOutputLatency_Seconds - returns the input/output-latency in seconds
  - CreateTrackString_ArmedTracks - creates a trackstring with the tracknumbers of all armed tracks
  - CreateTrackString_UnarmedTracks - creates a trackstring with the tracknumbers of all unarmed tracks
  - IsValidEnvelopePointArray - checks, if an EnvelopePointArray is a valid one
  - Api_InstallPath - an API-variable that contains the path to the install-folder of the Ultraschall-API
  - ConvertOldProjectToCurrentReaperVersion - converts an rpp-projectfile from an earlier version of Reaper to the current one
  - CreateRenderCFG_AudioCD - create a renderstring for audio-cd-images
  - GetMarkerUpdateCounter - returns an update-counter for all markers in all projects, that is updated, as soon as a marker is added/deleted/set/moved/altered
  - CreateTrackStringByGUID - creates a trackstring of all tracks, given as GUIDs
  - CreateTrackStringByTracknames - creates a trackstring of all tracks, given as tracknames
  - CreateTrackStringByMediaTracks - creates a trackstring with all track-objects in a MediaTrackArray
  - GetScreenHeight - returns the height of the screen
  - GetScreenWidth - returns the width of the screen
  - pause_follow_one_cycle - skips followmode-auto-off-checking-script for one cycle; only relevant for scripts that shall work within Ultraschall.FM-extension
  - DeleteMediaItemsBetween - deletes MediaItems between start and endposition within tracks, given by trackstring; the deleting-equivalent of GetAllMediaItemsBetween
  - GetSetConfigAcidImport - gets/sets the configuration-setting for configuration-variable acidimport; also adds the setting to reaper.ini, if needed
  - GetSetConfigActionMenu - gets/sets the configuration-setting for configuration-variable actionmenu; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecLat - gets/sets the configuration-setting for configuration-variable adjreclat; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecManLat - gets/sets the configuration-setting for configuration-variable adjrecmanlat; also adds the setting to reaper.ini, if needed
  - GetSetConfigAdjRecManLatIn - gets/sets the configuration-setting for configuration-variable adjrecmanlatin; also adds the setting to reaper.ini, if needed
  - GetSetConfigAfxCfg - gets/sets the configuration-setting for configuration-variable afxcfg; also adds the setting to reaper.ini, if needed
  - GetSetConfigAllStereoPairs - gets/sets the configuration-setting for configuration-variable afxcfg; also adds the setting to reaper.ini, if needed
  - GetDuplicatesFromArrays - returns the entries from an array, that are duplicate or are in only one of these two arrays
  - OnlyFilesOfCertainType - returns all files of a certain type from an array of filenames
  - ConcatIntegerIndexedTables - concatenate the entries from two tables into one
  - CreateColorTable - create a ColorTable that includes colorpatterns
  - CreateSonicRainboomColorTable - creates a ColorTable with Ultraschall's standard-trackcolor-pattern "Sonic Rainboom Color"
  - IsValidColorTable - checks, whether a ColorTable is a valid one
  - ApplyColorTableToTrackColors - Apply a ColorTable to colorize MediaTracks
  - Docs - added parts of Reaper Internals to the US-Apidocs, more to come
  - GetCurrentReaperWorkDir - gets the current working directory of Reaper; if you create file without a path in Lua, they will be stored in that path
  - SetCurrentReaperWorkDir - sets the current working directory of Reaper; if you create file without a path in Lua, they will be stored in that path; needs a Reaper restart!
  - DirectoryExists2 - returns, if a certain path exists. Unlike DirectoryExists, which checks, whether a directory in a path exists
  - GetScriptFilenameFromActionCommandID - gets the script-filename associated to a specific ActionCommandID
  - GetProject_CountAutomationItems - counts the automation-items in a project/ProjectStateChunk
  - GetProject_AutomationItemStateChunk - gets an automation-item from a project/ProjectStateChunk
  - GetProject_ProjectBay - gets the projectbay from a project/ProjectStateChunk
  - GetProject_Metronome - gets the statechunk for all metronome-settings from a project/ProjectStateChunk
  - GetProject_MasterPlayspeed - gets the statechunk for all master-playspeed-settings from a project/ProjectStateChunk
  - GetProject_Tempo - gets the statechunk for all tempo-settings from a project/ProjectStateChunk
  - GetProject_Extensions - gets the statechunk for all extension-settings from a project/ProjectStateChunk
  - GetProject_Lock - gets the individual lock-settings from a project/ProjectStateChunk
  - GetProject_GlobalAuto - returns the global automation override-settings of an rpp-file or ProjectStateChunk
  - GetProject_Tempo - returns the tempo-settings of an rpp-file or a ProjectStateChunk
  - GetProject_Playrate - returns the playrate-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterAutomode - returns the Mastertrack-automation-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterSel - returns the Mastertrack-selection-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterFXByp - returns the Mastertrack-fx-bypass-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterMuteSolo - returns the Mastertrack-mute-solo-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterNChans - returns the Mastertrack-num-channels-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterTrackHeight - returns the Mastertrack-trackheight-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterTrackColor - returns the Mastertrack-trackcolor-mode-settings of an rpp-file or a ProjectStateChunk
  - GetProject_CountMasterHWOuts - counts the HWOuts for a Master-track of an rpp-file or a ProjectStateChunk
  - GetProject_MasterHWOut - returns the Mastertrack-HWOUT-settings of an rpp-file or a ProjectStateChunk; there can be multiple ones, selectable by idx
  - GetProject_MasterVolume - returns the Master-volume-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterPanMode - returns the MasterPanMode of an rpp-file or a ProjectStateChunk
  - GetProject_MasterWidth - returns the Width-Knob2-settings of an rpp-file or a ProjectStateChunk
  - GetProject_MasterGroupFlagsState - returns the Master-groupflags-state of an rpp-file or a ProjectStateChunk
  - GetProject_MasterGroupFlagsHighState - returns the Master-grouphigh-flags-state of an rpp-file or a ProjectStateChunk
  - GetProject_GroupDisabled - returns the state, which groups are disabled, of an rpp-file or a ProjectStateChunk
  - GetProject_MasterHWVolEnvStateChunk - returns the statechunk of the MasterHWVolEnv
  - GetProject_MasterFXListStateChunk - returns the statechunk of the MasterFXList
  - GetProject_MasterDualPanEnvStateChunk - returns the statechunk of the MasterDualPanEnv
  - GetProject_MasterDualPanEnv2StateChunk - returns the statechunk of the MasterDualPanEnv2
  - GetProject_MasterDualPanEnvLStateChunk - returns the statechunk of the MasterDualPanEnvL
  - GetProject_MasterDualPanEnvL2StateChunk - returns the statechunk of the MasterDualPanEnvL2
  - GetProject_MasterVolEnvStateChunk - returns the statechunk of the MasterVolEnv
  - GetProject_MasterVolEnv2StateChunk - returns the statechunk of the MasterVolEnv2
  - GetProject_MasterVolEnv3StateChunk - returns the statechunk of the MasterVolEnv3
  - GetProject_MasterHWPanEnvStateChunk - returns the statechunk of the MasterHWPanEnv
  - GetProject_MasterPanMode_Ex - returns the state of the MasterPanMode_Ex
  - GetProject_TempoEnv_ExStateChunk - returns the statechunk of the TempoEnv_Ex
  - Docs: MediaItems: Moving and Manipulating - added 
  - Docs: MediaItems: Inserting Items and Files - added
  - ChangeColorBrightness - changes the brightness of a r, g, b-color-value
  - ChangeColorContrast - changes contrast of a r,g,b-color-value
  - ReverseTable - reverses the order of the entries of an integer-indexed table
  - ChangeColorSaturation - changes the saturation of a color-value
  - Docs: Datatypes_Colortables - docs about the structure of a ColorTable
  - ultraschall.Euro - holds an €-symbol, that is difficult to type into Reaper's IDE
  - Docs: MediaItems: Programming Spectral Edit - added
  - Docs: MediaItems: Miscellaneous - added
  - Docs: Added Config-Variable into the Reaper-Internals-docs
  - added converted Config-Variable-docs as USDocML-file
  - CombineBytesToInteger - combines multiple bytes into one integer-value
  - SplitIntegerIntoBytes - splits a  32-bit-integer-value into four bytes
  - GetReaperScriptPath - returns path to the scripts-folder of Reaper
  - GetReaperColorThemesPath - returns path to the theme-folder of Reaoer
  - GetReaperJSFXPath - returns path to the JSFX-plugin-folder of Reaper
  - GetReaperWebRCPath - returns path to Reaper's own and User's own WebRC-webpage-folder
  - Docs - added File Management: Introduction to the Introduction/Concepts-page
  - Docs - added docs for ultraschall.Euro, which holds the €-currency symbol
  - Docs - added   - File Management: Read to the Introduction/Concepts-page
  - Added example-scripts:
        ArrangeView_Snapshots_Example.lua
        Changed_Project_Tab_Example.lua
        Color_Example.lua
        Render_Current_Project.lua
        Render_Project.lua
        RippleCut_Selected_Tracks.lua
        Shorten_MediaItems_In_Selection_Example.lua
  - GetProject_Length - gets the length of an rpp-projectfile
  - added new analyser-scripts for statechunks: Item_State_Diffs_Monitor.lua, Track_State_Diffs_Monitor.lua, Project_State_Diffs_Monitor.lua, Env_State_Diffs_Monitor.lua
  - Docs: File Management: Write - added to Introduction/Concepts-page
  - Docs: File Management: Analyse - added to Introduction/Concepts-page
  - Docs: File Management: Misc - added to Introduction/Concepts-page
  - Docs: Project Management: Introduction - added to Introduction/Concepts-page
  - Docs: Project Management: Check for changed projecttabs - added to Introduction/Concepts-page
  - Docs: added WebRC-API-docs
  - Docs: added Video-Processor-API-docs
  - Docs: reworked slightly the header of the Reaper-Internals-page
  - Docs: Color Management: Introduction - added chapter
  - Docs: Color Management: Native Color Conversion - added chapter
  - Docs: Color Management: Brightness, Contrast and Colorsaturation - added chapter
  - Docs: Color Management: Working with Colortables - added chapter
  - Docs: Color Management: Creating Colortables - added chapter
  - Docs: Color Management: Applying Colortables - added chapter
  - ConvertColorFromMac - Converts a native-Mac to rgb-values
  - ConvertColorFromWin - Converts a native-Windows/Linux-color to rgb-values
  - ConvertColorToMac - Converts rgb-values to a native-MacOS-color
  - ConvertColorToWin - Converts rgb-values to a native-Windows/Linux-color
  - ApplyColorTableToItemColors - applies a ColorTable to MediaItems in a MediaItemArray
  - Docs: added all functions from JS-plugin by Julian Sader and Xenakios to Reaper-Api-Docs
  - ultraschall_track_old_cursorposition.lua - background-script for returning the last editcursor-position before the current one
  - RunBackgroundHelperFeatures - runs background-scripts included with the Ultraschall-API
  - GetLastCursorPosition - returns the last editcursor-position before the current one; needs Backgroundscripts started first using RunBackgroundHelperFeatures
  - Docs: Concepts-page - added chapter about Extstates for MediaTracks, MediaItems and guids
  - IsMuteAtPosition - checks, whether a mute-point exists in a track at a position
  - IsMuteAtPosition_TrackObject - checks, whether a mute-point exists in a MediaTrack-object at a position
  - DeleteMuteState - deletes a mute-point in a track at a given position
  - DeleteMuteState_TrackObject - deletes a mute-point in a MediaTrack-object at a given position
  - Docs: Concepts-page - added chapter about backgroundscripts in Ultraschall-API and the use of it for functions like GetLastCursorPosition
  - Docs: Concepts-page - added chapter about cough/mute-buttons
  - requires now Julian Sader's plugin as well
  - CloseReaConsole - closes ReaConsole-window
  - DeleteErrorMessage - deletes a specific error-message from the error-messaging-system
  - Docs: Error-Messaging-System - added docchapters to Introductions/Concepts-page
  - GFX_BlitBufferImage - blits the framebuffer into the window and resizes it, if needed, using the correct aspect ratio; preliminary support
  - Docs: Trackstate Management: Introduction - added chapter to Introduction/Concepts-page
  - Routing: Introduction - added chapter to Introduction/Concepts-page
  - Routing: Send and Receives - added chapter to Introduction/Concepts-page
  - Routing: Hardware Outs - added chapter to Introduction/Concepts-page
  - ApplyActionToMediaItemArray2 - applies an action to multiple items at once, unlike ApplyActionToMediaItemArray(which applies the action to each item individually)
  - PutMediaItemsToClipboard_MediaItemArray - puts all MediaItems from MediaItemArray into the clipboard
  - Docs: ExtState Management: Introduction - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Ini-Files - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Inifile-Functions - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Ultraschall.ini - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Track and Item-Extstates - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Track Extstates - added chapter to Introduction/Concepts-page
  - Docs: ExtState Management: Item Extstates - added chapter to Introduction/Concepts-page
  - MoveRegionsBy - moves regions by seconds
  - MoveTimeSigMarkersBy - moves Timesignature/Tempo-markers by seconds
  - ShowMenu - shows a new context-menu at a given position
  - Docs: Markers and Regions: Introduction - added to Introduction/Concepts-page
  - Docs: Markers and Regions: General How To - added to Introduction/Concepts-page
  - Docs: Markers and Regions: Helpers and Manipulation - added to Introduction/Concepts-page
  - CycleTable - cycles the entries of a table through
  - GetErrorMessage_Funcname - returns error-message of a certain function
  - CountErrorMessage_Funcname - counts all error-messages a certain function left in the error-messagin-system
  - GetLastErrorMessage_Funcname - returns the last error-message a certain function left in the error-messaging-system
  - DisplayMarkersRegions_underneath_Mouse.lua - example-script that displays the markers/regions underneath the mouse
  - ShowMediaItems_In_Timeselection_and_SelectedTracks.lua - example script that shows selected items by time-selection and track-selection
  - TrackAndItem_ColorCycler.lua - example script that cycles colors of tracks and items
  - Render_Project.gif - added example-gif that demonstrates example-script
  - DisplayMarkersRegions_underneath_Mouse.gif - added example-gif that demonstrates example-script  
  - ShowMediaItems_In_Timeselection_and_SelectedTracks.gif - added example-gif that demonstrates example-script
  - Render_Current_Project.gif - added example-gif that demonstrates example-script
  - Changed_Project_Tab_Example.gif - added example-gif that demonstrates example-script
  - ArrangeView_Snapshots_Example.gif - added example-gif that demonstrates example-script
  - RippleCut_Selected_Tracks.gif - added example-gif that demonstrates example-script
  - Color_Example.gif - added example-gif that demonstrates example-script
  - Shorten_MediaItems_In_Selection_Example.gif - added example-gif that demonstrates example-script
  - ColorTables_ColorCycler.gif - added example-gif that demonstrates example-script
  - Docs: Helper_Functions: Introduction - added chapter to the Introduction/Concepts-page
  - Docs: Helper_Functions: Clipboard Management - added chapter to the Introduction/Concepts-page
  - Docs: Helper_Functions: Data Manipulation - added chapter to the Introduction/Concepts-page
  - Docs: Helper_Functions: Undo Management - added chapter to the Introduction/Concepts-page
  - Docs: Final words - added chapter to the Introduction/Concepts-page  
  - GetSetConfigAlwaysAllowKB - gets/sets value for configvar alwaysallowkb
  - GetSetConfigApplyFXTail - get/sets value for configvar applyfxtail
  - GetSetConfigAdjRecManLatIn -get/sets value for configvar ajdrecmanlatin
  - GetSetConfigAudioPrShift - get/sets value for configvar audioprshift
  - GetSetConfigAudioCloseStop - get/sets value for configvar audioclosestop
  - GetSetConfigAudioThreadPr - get/sets value for configvar audiothreadpr
  - GetSetConfigAudioCloseTrackWnds - get/sets value for configvar audioclosetrackwnds
  - WinterlySnowflakes - replaces gfx.update with a version, that displays falling snowflakes everytime gfx.update is run

####Changes from 4.00beta2.6 to 4.00beta2.7
  - Tons of bugfixes. I mean, tons as in metric tons ;)
  - GetTrackRecCFG - added documentation, that was still missing -> fixed now; added missing return-value
  - GetLastErrorMessage2 - had wrong functionname, corrected documentation
  - cleaned up code and improved readability
  - GetPartialString - returns nil in case of error now
  - WriteValueToFile - minor additions to documentation
  - CreateTrackNumbersString - minor additions to documentation
  - SetTrackMuteSoloState - corrected documentation's-description
  - initialization of the framework on Mac could potentially not work due wrong separator -> fixed now
  - improved installation and usage-procedure of the framework heavily
  - GetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackAutomodeState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackBeatState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackBusCompState - supports now trackstatechunks as well; sped up code
  - GetTrackBypFXState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackFreeModeState - supports now trackstatechunks as well; sped up code
  - GetTrackGroupFlagsState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackHeightState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackINQState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackIPhaseState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackIcon_Filename - supports now mastertrack and trackstatechunks as well
  - GetTrackIsBusState - supports now trackstatechunks as well; sped up code
  - GetTrackLayoutNames - supports now mastertrack and trackstatechunks as well
  - GetTrackLockState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMainSendState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMidiCTL - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
  - GetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackNChansState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackName - supports now mastertrack and trackstatechunks as well
  - GetTrackPeakColorState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackPerfState - supports now trackstatechunks as well; sped up code
  - GetTrackRecCFG - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackRecState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackShowInMixState - supports now mastertrack and trackstatechunks as well; sped up code
  - GetTrackVUState - supports now mastertrack and trackstatechunks as well, fixed bug; sped up code
  - SetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well
  - SetTrackAutomodeState - supports now mastertrack and trackstatechunks as well
  - SetTrackBeatState - supports now mastertrack and trackstatechunks as well
  - SetTrackBusCompState - supports now trackstatechunks as well
  - SetTrackBypFXState - supports now mastertrack and trackstatechunks as well
  - SetTrackFreeModeState - supports now mastertrack and trackstatechunks as well
  - SetTrackHeightState - supports now mastertrack and trackstatechunks as well
  - SetTrackINQState - supports now mastertrack and trackstatechunks as well
  - SetTrackIPhaseState - supports now mastertrack and trackstatechunks as well
  - SetTrackIcon_Filename - supports now trackstatechunks as well
  - SetTrackIsBusState - supports now trackstatechunks as well
  - SetTrackLayoutNames - supports now trackstatechunks as well; minor improvements
  - SetTrackLockState - supports now trackstatechunks as well; improved speed
  - SetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well
  - SetTrackMainSendState - supports now mastertrack and trackstatechunks as well
  - SetTrackMidiCTL - supports now mastertrack and trackstatechunks as well
  - SetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
  - SetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well  
  - SetTrackNChansState - supports now mastertrack and trackstatechunks as well
  - SetTrackName - supports now mastertrack and trackstatechunks as well
  - SetTrackPeakColorState - supports now mastertrack and trackstatechunks as well
  - SetTrackPerfState - supports now trackstatechunks as well
  - SetTrackRecState - supports now mastertrack and trackstatechunks as well
  - SetTrackShowInMixState - supports now mastertrack and trackstatechunks as well
  - SetTrackVUState - supports now mastertrack and trackstatechunks as well
  - ToggleScrollingDuringPlayback - also affects scrolling during recording now; sometimes, continuous scroll wouldn't restart -> fixed now
  - GetNextClosestItemEdge - had trouble finding the end of the last item in a track -> fixed now
  - GetPreviousClosestItemEdge - had trouble finding the beginning of the first item in track as well as 
        the item before the current item at times -> fixed now
  - GetClosestPreviousMarker - always used cursorposition as calculation base, never mouseposition; it also couldn't find the previous
        marker before the current one -> fixed now
  - GetClosestNextMarker - always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetClosestNextRegionEdge - renamed from GetClosestNextRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetClosestPreviousRegionEdge - renamed from GetClosestPreviousRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
  - GetApiVersion - returns now an additional return-value of type "number", that you can use for version-comparison like "if required_version>version then"
  - SplitStringAtLineFeedToArray - was missing the returned count-variable in the documentation -> fixed now
  - ToggleScrollingDuringPlayback - changed parameter move_editcursor to boolean; added goto_playcursor which moves view to playcursor; 
                    fixed bug that messed up scrolling during recording.
  - Ultraschall-Api is now located in UserPlugins in the resources-folder(where every third-party-plugin belongs to ;) )
  - IsItemInTrack - tracknumber is now 1 based, means: 1 for track 1, 2 for track 2, etc
  - ApiTest displays only one message now (damn was it annoying before... ;) )
  - ReadFullFile - fixed small bug and returns now the number of lines of files, if binary is set to false
  - GetProject_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
  - SetProject_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
  - AddErrorMessage - new parameters, parametername and errorcode, so you can specify these better
  - ReadErrorMessage - includes the new parameters parametername and errorcode, sped up code; used to reset creation date instead of readstate -> fixed
  - GetLastErrorMessage - includes the new parameters parametername and errorcode, readstatus is now a string with "unread" or the 
              last readtime(no boolean anymore); sped up code; used to reset creation date instead of readstate -> fixed
  - DeleteLastErrorMessage - deletes now the last errormessage, only changed the errorcounter before
  - GetLastErrorMessage2 - includes the new parameters parametername and errorcode; used to reset creation date instead of readstate -> fixed
  - ShowLastErrorMessage - reworked the messagebox to include functionname, parametername, errormessage and errorcode
  - GetPath - returns nil now, if the separator can't be found, and throws an error-message as well in that case; did return parts of the path in filename -> fixed now
  - GetPartialString - returns nil now, if the separator can't be found, and throws an error-message as well in that case; sped up code
  - RunCommand - throws an error-message, if an invalid action-command-id is given
  - CSV2Line - rewritten and sped up
  - RGB2Num - removed
  - CSV2IndividualLinesAsArray - rewrote and sped up code; supports now other separators and separators longer than one character, swapped retvals
  - IsItemInTrack - minor improvements
  - Docs: removed SWS-logo from all functions, that don't require SWS
  - SetChapterMarker - removed
  - ImportChaptersFromFile - removed
  - ExportChapterMarkersToFile - removed
  - EnumerateChapterMarkers - removed
  - EnumerateDummyMarkers - removed
  - EnumerateEditRegion - removed
  - GetAllChapterMarkers - removed
  - DeleteChapterMarker - removed
  - DeleteDummyMarker - removed
  - CountChapterMarkers - removed
  - CountDummyMarkers - removed
  - ChapterToDummyMarker - removed
  - ChapterToEditMarker - removed
  - ChapterToMarker - removed
  - DummyToChapterMarker - removed
  - DummyToEditMarker - removed
  - DummyToMarker - removed
  - EditToChapterMarker - removed
  - EditToDummyMarker - removed
  - MarkerToChapterMarker - removed
  - MarkerToDummyMarker - removed
  - IsMarkerChapter - removed 
  - IsMarkerDummy - removed
  - AddChapterMarker - removed
  - AddDummyMarker - removed
  - CountUSExternalState_sec - did not check for existence of ultraschall.ini -> fixed
  - CountUSExternalState_key - did not check for existence of ultraschall.ini -> fixed
  - EnumerateUSExternalState_sec - returned empty strings, when the ultraschall.ini contained them -> fixed
  - EnumerateUSExternalState_key - number was expected to be string and produced problems -> fixed
  - SetPlayCursor_WhenPlaying - added parameter-validity-check for parameter position
  - SetPlayAndEditCursor_WhenPlaying - added parameter-validity-check for parameter position
  - JumpForwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
  - JumpBackwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
  - GetNextClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
  - GetPreviousClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
  - GetClosestNextRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
  - GetClosestPreviousRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
  - ToggleMute_TrackObject - sped up code
  - GetItemPlayRate_StateChunk - docs, added information about some of the parameters, like pitch-settings
  - ToggleStateButton - added section-info to the docs
  - RefreshToolbar_Action - added section-info to the docs
  - ToggleStateAction - added section-info to the docs
  - CountNormalMarkers - added support for planned chapter-markers(color_value 100, 255, 0); was counting wrong, when regions were available -> fixed
  - accidentally used os as return-variable in many functions, leading to overwriting of Lua's own os.functions() like os.date(), etc -> fixed
  - CountPatternInString - internal changes to prevent accidental overwriting of Lua's own string.functions()
  - SplitStringAtLineFeedToArray - the entries in the array still contained the useless line-feed -> fixed
  - integer parameters accept only integers from now on (used to be numbers)
  - CSV2IndividualLinesAsArray - the returned count-value was one too high -> fixed
  - CountNormalMarkers - added support for planned chapter marker
  - EnumerateNormalMarkers - support for planned chapter marker added; added missing info in the docs
  - EnumerateEditMarkers - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - SetNormalMarker - added support for planned chapter marker; expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - SetEditMarker - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - DeleteNormalMarker - added support for planned chapter marker; deleted in some situations non-normal-markers -> fixed
  - DeleteEditMarker - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - IsMarkerEdit - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - IsMarkerNormal - added support for planned chapter marker; expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
  - IsRegionEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
  - SetEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
  - DeleteEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
  - EnumerateEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
  - GetAllNormalMarkers - added index-number and shown-number to the array; completed docs
  - GetAllMarkers - added index-number, shown-number and color to the array; completed docs; didn't get the first marker -> fixed 
  - GetAllEditMarkers - added index-number to the array; completed docs
  - DeletePodRangeRegion - return value is now boolean
  - DeleteNormalMarker - completed docs
  - ExportNormalMarkersToFile - completed docs
  - CountNormalMarkers_NumGap - completed docs
  - MarkerToEditMarker - completed docs
  - CountEditMarkers - used to count edit-regions as well -> fixed now
  - ExportEditMarkersToFile - crashed due bug with edit-regions -> fixed now
  - WriteValueToFile_ReplaceBinary - naming conflict, 2 functions had the name WriteValueToFile_Replace; renamed one to WriteValueToFile_ReplaceBinary
  - EditToMarker - small internal changes to give the marker it's correct color: Reaper's default color for marker
  - CreateTrackNumbersString_SelectedTracks - additions to the docs
  - ReadValueFromFile - returns now all found lines as array; retval numberoflines used to give the same number as number_of_foundlines, so I 
              changed it to numberoflines_in_file, that returns the total number of lines in the file, even if fewer lines are returned
  - Renderfunctions - improved behavior when rendering currently opened project; always uses now the correct projectfile, used to guess location 
            of projectfile one dir above the recording-dir
  - GetProject_GroupOverride, GetProject_RippleState, GetProject_ReaperVersion - documentation stated "kb-ini-file" instead of "rpp-projectfile" -> fixed
  - renamed GetMarkerByIndex to GetMarkerAndRegionsByIndex to reflect the fact, that it supports markers AND regions
  - SplitStringAtLineFeedToArray - used to treat LFCR as two linebreaks, which caused empty lines in windows-strings. Treats LFCR as one linebreak now.
  - ReadLinerangeFromFile - allows now reading the whole file, when giving -1 as lastlinenumber; added missing information in the docs
  - As the Functions-Engine is essential for all parts of the Ultraschall-API, it can't be turned off anymore.
  - renamed MoveMarkers to MoveMarkersBy, reimplemented it, as sometimes, it messed up marker order after movement
  - ReadValueFromFile - sped up code, returned wrong found-lines-value -> fixed
  - CheckMediaItemArray - did not return the altered MediaItemArray and count, when returning retval=false -> fixed
  - ChangeOffsetOfMediaItems_FromArray - typos in the docs -> fixed
  - GetSelectedMediaItemsAtPosition - error in documentation -> fixed
  - OnlyMediaItemsOfTracksInTrackstring_StateChunk - had the docs of OnlyMediaItemsOfTracksInTrackstring -> fixed now
  - CSV2IndividualLinesAsArray - accidentally reversed retvals in the docs -> fixed
  - restructured index of the Api-docs
  - GetProject_AddMediaToProjectAfterRender - allows usage of ProjectStateChunks now as well
  - GetProject_ApplyFXCFG - allows usage of ProjectStateChunks now as well
  - GetProject_AutoCrossFade - allows usage of ProjectStateChunks now as well
  - GetProject_CountMarkersAndRegions - allows usage of ProjectStateChunks now as well
  - GetProject_CursorPos - allows usage of ProjectStateChunks now as well
  - GetProject_DefPitchMode - allows usage of ProjectStateChunks now as well
  - GetProject_EnvAttach - allows usage of ProjectStateChunks now as well
  - GetProject_Feedback - allows usage of ProjectStateChunks now as well
  - GetProject_GetMarker - allows usage of ProjectStateChunks now as well
  - GetProject_GetRegion - allows usage of ProjectStateChunks now as well
  - GetProject_Grid - allows usage of ProjectStateChunks now as well
  - GetProject_GroupOverride - allows usage of ProjectStateChunks now as well
  - GetProject_HorizontalZoom - allows usage of ProjectStateChunks now as well
  - GetProject_ItemMixBehavior - allows usage of ProjectStateChunks now as well
  - GetProject_Loop - allows usage of ProjectStateChunks now as well
  - GetProject_LoopGran - allows usage of ProjectStateChunks now as well
  - GetProject_MaxProjectLength - allows usage of ProjectStateChunks now as well
  - GetProject_MixerUIFlags - allows usage of ProjectStateChunks now as well
  - GetProject_NumberOfTracks - allows usage of ProjectStateChunks now as well
  - GetProject_PanLaw - allows usage of ProjectStateChunks now as well
  - GetProject_PanMode - allows usage of ProjectStateChunks now as well
  - GetProject_PeakGain - allows usage of ProjectStateChunks now as well
  - GetProject_ProjOffsets - allows usage of ProjectStateChunks now as well
  - GetProject_ReaperVersion - allows usage of ProjectStateChunks now as well; exposed internal variables -> fixed
  - GetProject_RecMode - allows usage of ProjectStateChunks now as well
  - GetProject_RecPath - allows usage of ProjectStateChunks now as well
  - GetProject_RecordCFG - allows usage of ProjectStateChunks now as well
  - GetProject_RenderDitherState - allows usage of ProjectStateChunks now as well
  - GetProject_RenderFilename - allows usage of ProjectStateChunks now as well; exposed an internal variable temp -> fixed
  - GetProject_RenderFreqNChans - allows usage of ProjectStateChunks now as well
  - GetProject_RenderPattern - allows usage of ProjectStateChunks now as well; exposed an internal variable temp -> fixed
  - GetProject_RenderRange - allows usage of ProjectStateChunks now as well
  - GetProject_RenderResample - allows usage of ProjectStateChunks now as well
  - GetProject_RenderSpeed - allows usage of ProjectStateChunks now as well
  - GetProject_RenderStems - allows usage of ProjectStateChunks now as well
  - GetProject_RippleState - allows usage of ProjectStateChunks now as well
  - GetProject_SMPTESync - allows usage of ProjectStateChunks now as well
  - GetProject_SampleRate - allows usage of ProjectStateChunks now as well
  - GetProject_TakeLane - allows usage of ProjectStateChunks now as well
  - GetProject_TempoTimeSignature - allows usage of ProjectStateChunks now as well
  - GetProject_TimeBase - allows usage of ProjectStateChunks now as well
  - GetProject_Timemode - allows usage of ProjectStateChunks now as well
  - GetProject_TrackMixingDepth - allows usage of ProjectStateChunks now as well
  - GetProject_TrackStateChunk - allows usage of ProjectStateChunks now as well
  - GetProject_UseRecConfig - allows usage of ProjectStateChunks now as well
  - GetProject_VerticalZoom - allows usage of ProjectStateChunks now as well
  - GetProject_VideoConfig - allows usage of ProjectStateChunks now as well
  - TimeStringToSeconds_hh_mm_ss_mss - had wrong functionname and link in the docs -> fixed  
  - GetItemAllTakes - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemBeat - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemChanMode - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeFlag - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeIn - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemFadeOut - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemGUID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemGroup - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemIGUID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemIID - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLength - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLock - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemLoop - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemMixFlag - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!); returned the BEAT-state, not MIXFLAG -> fixed
  - GetItemMute - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemName - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemPlayRate - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemPosition - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemRecPass - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSampleOffset - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSelected - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemSnapOffset - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemUSTrackNumber_StateChunk - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - GetItemVolPan - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - SetTrackHWOut - had wrong link in the docs -> fixed
  - SetItemUSTrackNumber_StateChunk - tracknumbers are 1 based now
  - SetItemLength - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - SetItemPosition - allows usage of MediaItems themselves as well now; added parameter MediaItem before StateChunk(!)
  - RenderProjectToAIFF - removed, use CreateRenderCFG_AIFF and RenderProject_RenderCFG instead
  - RenderProjectToFLAC - removed, use CreateRenderCFG_FLAC and RenderProject_RenderCFG instead
  - RenderProjectToMP3_ABR - removed, use CreateRenderCFG_MP3ABR and RenderProject_RenderCFG instead
  - RenderProjectToMP3_CBR - removed, use CreateRenderCFG_AMP3CBR and RenderProject_RenderCFG instead
  - RenderProjectToMP3_MaxQuality - removed, use CreateRenderCFG_MP3MaxQuality and RenderProject_RenderCFG instead
  - RenderProjectToMP3_VBR - removed, use CreateRenderCFG_MP3VBR and RenderProject_RenderCFG instead
  - RenderProjectToOpus - removed, use CreateRenderCFG_Opus and RenderProject_RenderCFG instead
  - GetProject_VideoConfig - corrected documentation
  - SetProject_VideoConfig - corrected documentation
  - SetProject_RecMode - corrected documentation
  - GetProject_SMPTESync - returned wrong retvals, fixed
  - GetPath - returns now also the filename, returns "", "" instead of nil in case of error.
  - SetProject_AddMediaToProjectAfterRender - allows usage of ProjectStateChunks now as well
  - SetProject_ApplyFXCFG - allows usage of ProjectStateChunks now as well
  - SetProject_AutoCrossFade - allows usage of ProjectStateChunks now as well
  - SetProject_CursorPos - allows usage of ProjectStateChunks now as well
  - SetProject_DefPitchMode - allows usage of ProjectStateChunks now as well
  - SetProject_EnvAttach - allows usage of ProjectStateChunks now as well
  - SetProject_Feedback - allows usage of ProjectStateChunks now as well
  - SetProject_Grid - allows usage of ProjectStateChunks now as well
  - SetProject_GroupOverride - allows usage of ProjectStateChunks now as well
  - SetProject_HorizontalZoom - allows usage of ProjectStateChunks now as well
  - SetProject_ItemMixBehavior - allows usage of ProjectStateChunks now as well
  - SetProject_Loop - allows usage of ProjectStateChunks now as well
  - SetProject_LoopGran - allows usage of ProjectStateChunks now as well
  - SetProject_MaxProjectLength - allows usage of ProjectStateChunks now as well
  - SetProject_MixerUIFlags - allows usage of ProjectStateChunks now as well
  - SetProject_PanLaw - allows usage of ProjectStateChunks now as well
  - SetProject_PanMode - allows usage of ProjectStateChunks now as well
  - SetProject_PeakGain - allows usage of ProjectStateChunks now as well
  - SetProject_ProjOffsets - allows usage of ProjectStateChunks now as well
  - SetProject_RecMode - allows usage of ProjectStateChunks now as well
  - SetProject_RecPath - allows usage of ProjectStateChunks now as well
  - SetProject_RecordCFG - allows usage of ProjectStateChunks now as well
  - SetProject_RenderCFG - allows usage of ProjectStateChunks now as well
  - SetProject_RenderDitherState - allows usage of ProjectStateChunks now as well
  - SetProject_RenderFilename - allows usage of ProjectStateChunks now as well
  - SetProject_RenderFreqNChans - allows usage of ProjectStateChunks now as well
  - SetProject_RenderPattern - allows usage of ProjectStateChunks now as well; now allows removing the RENDERPATTERN-entry from a Projectfile using nil as parameter. Good, if you only want to set a Rendername in a project.
  - SetProject_RenderRange - allows usage of ProjectStateChunks now as well
  - SetProject_RenderResample - allows usage of ProjectStateChunks now as well
  - SetProject_RenderSpeed - allows usage of ProjectStateChunks now as well
  - SetProject_RenderStems - allows usage of ProjectStateChunks now as well
  - SetProject_RippleState - allows usage of ProjectStateChunks now as well
  - SetProject_SMPTESync - allows usage of ProjectStateChunks now as well
  - SetProject_SampleRate - allows usage of ProjectStateChunks now as well
  - SetProject_Selection - allows usage of ProjectStateChunks now as well
  - SetProject_TakeLane - allows usage of ProjectStateChunks now as well
  - SetProject_TempoTimeSignature - allows usage of ProjectStateChunks now as well
  - SetProject_TimeBase - allows usage of ProjectStateChunks now as well
  - SetProject_Timemode - allows usage of ProjectStateChunks now as well
  - SetProject_TrackMixingDepth - allows usage of ProjectStateChunks now as well; hadn't correct parameters in the docs -> fixed
  - SetProject_UseRecConfig - allows usage of ProjectStateChunks now as well
  - SetProject_VerticalZoom - allows usage of ProjectStateChunks now as well
  - OpenURL - had a problem on Windows, when the url-string contained spaces -> fixed; returns -1 in case of error, now
  - GetReaperAppVersion - returns now the operating system as well if the Reaper-installation is a portable one.
  - GetClosestGoToPoints - added options to get closest goto-points from current edit/playcursor-position; added returning marker/region name
  - ReadBinaryFileFromPattern - corrected docs, rewrote function for more speed
  - CountKeysByPattern - checks for malformed patterns, now
  - CountSectionsByPattern - checks for malformed patterns, now
  - CountValuesByPattern - checks for malformed patterns, now
  - EnumerateKeysByPattern - checks for malformed patterns, now
  - EnumerateSectionsByPattern - checks for malformed patterns, now
  - EnumerateValuesByPattern - checks for malformed patterns, now
  - ReadBinaryFileFromPattern - checks for malformed patterns, now
  - ReadBinaryFileUntilPattern - had wrong functionname in error-message -> fixed, checks for malformed patterns, now
  - ReadValueFromFile - checks for malformed patterns, now
  - RippleInsert_MediaItemStateChunks - had a bug that could cause an error-message -> fixed
  - GetTrackGroupFlagsState - had a bug in checking for validity of TrackStateChunks -> fixed
  - SetKBIniActions - rewritten, as the previous version wasn't working right
  - SetKBIniScripts - rewritten, as the previous version wasn't working right
  - SetKBIniKeys - rewritten, as the previous version wasn't working right
  - AddTrackAUXSendReceives - didn't support Master Track, changed that
  - SetTrackAUXSendReceives - didn't support Master Track, changed that
  - DeleteTrackAUXSendReceives - didn't support Master Track, changed that
  - ToggleScrollingDuringPlayback - minor corrections in the docs
  - GetAllRegionsBetween - corrections in the docs
  - GetItemSpectralVisibilityState - had wrong functionname in docs -> fixed
  - GetTrackExtState - corrections in the docs
  - DeleteArrangeviewSnapshot - had wrong functionname in docs -> fixed
  - CenterViewToCursor - had documented a retval that the function doesn't return -> fixed
  - CreateTrackNumbersString - renamed to CreateTrackString
  - CreateTrackNumbersString_SelectedTracks - renamed to CreateTrackString_SelectedTracks
  - GetMediaItemsFromClipboard - using renamed function CreateTrackString() now
  - InsertMediaItemFromFile - using renamed function CreateTrackString_SelectedTracks() now
  - GetClosestNextRegionEdge - docs: was missing additional return-value edge_type -> fixed now
  - JumpBackwardBy - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpForwardBy - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpBackwardBy_Recording - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - JumpForwardBy_Recording - docs: changed name of parameter position to seconds, as that represents more, what the parameter does
  - GetClosestGoToPoints - added mouse-cursor-position as possible option
  - GetNextClosestItemEdge - was returning wrong retvals when no item was found -> fixed
  - CenterViewToCursor - added parameter for a non-cursor-position of your choice to center to
  - SetItemPosition - exchanged position and optional statechunk-parameters to be in line with SetProject/Track-statefunctions
  - SetItemLength - exchanged length and optional statechunk-parameters to be in line with SetProject/Track-statefunctions
  - GetSplitCrossFadeState_ReaperIni - removed, will return as a new function
  - MoveMediaItemsSectionTo - renamed to MoveMediaItemsBetween_To, as this is more in line with the corresponding of functionnames for getting, deleting, splitting items
  - InsertMediaItem_MediaItem - allows now inserting MediaItems from other projects as well and into tracks of other projects
  - InsertMediaItem_MediaItemStateChunk - allows now tracks in other projects to be target; h
                                          ad an issue, that it always required ULTRASCHALL_TRACKNUMBER in the itemstatechunk to get the target-track -> fixed now to also allow passing a MediaTrack, as the docs always stated
                                          has now additional retvals startposition, endposition, length 
                                          fixed the docs
  - ReadBinaryFile_Offset - if startoffset is negative, the offset will be seen from the end of the file now
  - ReadBinaryFile - removed, due being a duplication of ReadFullFile
  - ReadFileAsLines_Array - corrected docs
  - CreateTrackString_AllTracks - renamed from CreateAllTracksTrackString to be more in line with other CreateTrackString-functions
  - RippleCut - removed the move_markers parameter; added add_to_clipboard parameters, which puts the cut-items to the clipboard
  - RippleCut_Reverse - removed the move_markers parameter; added add_to_clipboard parameters, which puts the cut-items to the clipboard
  - SectionCut - removed the move_markers parameter; added add_to_clipboard parameters, which puts the cut-items to the clipboard
  - SectionCut_Inverse - removed the move_markers parameter; added add_to_clipboard parameters, which puts the cut-items to the clipboard
  - EnumerateIniFileExternalState_sec - added error-messages for invalid section-indices
  - GetUSExternalState - returns now only the value-returnvalue
  - GetID3TagsFromCurrentProject - removed, due being useless in Ultraschall 4.0
  - GetID3TagsFromCurrentProject_PodcastTags - removed, due being useless in Ultraschall 4.0
  - SetID3TagsForCurrentProject - removed, due being useless in Ultraschall 4.0
  - SetID3TagsForCurrentProject_PodcastTags - removed, due being useless in Ultraschall 4.0
  - Msg - removed, was useless
  
### 4.00 Beta 2.6: - "Is that all there is? - Peggy Lee" - 19th of October 2017
####New features in 4.00beta2.6 - has now 450 functions, with about 30 new ones:
  - CreateAllTracksTrackString - creates a trackstring with all tracks in the current project
  - new datastructure "EnvelopePointObjects" and "EnvelopePointArrays"(for EnvelopePointObjects) for easier massworking with envelopepoints
  - CreateEnvelopePointObject - creates an EnvelopePointObject
  - GetEnvelopePoint - gets envelopepoint easier than Reaper's own functions. Returns value converted to db-value as well
  - GetClosestEnvelopePointIDX_ByTime - gets envelope-point-idx closest to a given timeposition
  - GetEnvelopePointIDX_Between - gets envelope-points between start and endtime
  - AddEnvelopePoints_EnvelopePointObject - adds an EnvelopePointObject
  - AddEnvelopePoints_EnvelopePointArray - adds an array of EnvelopePointObjects
  - CheckEnvelopePointObject - checks, if an EnvelopePointObject is a valid one
  - DeleteEnvelopePoints_EnvelopePointObject - deletes an envelope-point, according to the EnvelopePointObject 
  - DeleteEnvelopePoints_EnvelopePointArray -  deletes envelope-points, according to EnvelopePointObjects in EnvelopePointArray
  - SetEnvelopePoints_EnvelopePointObject - sets an envelope-point, according to the EnvelopePointObject 
  - SetEnvelopePoints_EnvelopePointArray - sets envelope-points, according to EnvelopePointObjects in EnvelopePointArray
  - CountEnvelopePoints - counts envelope-point in a given track and envelope-name
  - ToggleIDE_Errormessages - toggles, if API shows the errormessages in Reaper's IDE or not
  - WriteValueToFile_Insert - inserts a string into a specific line-position of a file
  - WriteValueToFile_Replace - replaces specific lines in a file with value
  - GetLengthOfFile - returns length of a file
  - ReadBinaryFile_Offset - reads a binary file. Allows partial reading of a file as well.
  - WriteValueToFile_InsertBinary - inserts a value into a binary file at specified position
  - WriteValueToFile_Replace - replaces a specified portion of a file with a value
  - GetStringFromClipboard_SWS - returns the content of the clipboard, using the SWS-function reaper.CF_GetClipboardBig, but manages the stuff
      necessary, that surrounds using this function
  - SecondsToTimeString_hh_mm_ss_mss - converts seconds into a timestring of the format hh:mm:ss.mss
  - TimeStringToSeconds_hh_mm_ss_mss - converts a timestring of the format hh:mm:ss.mss into seconds
  - ParseMarkerString - converts a string with markernames or a string with timestrings and markernames into an array
  - RenumerateMarkers - renumbers the shown-marker-ids in the project, beginning with the first one to the last one. Good for
                "ordering" markers, that were included in unordered way.
  - ReadFullFile - reads a file and returns it's contents
  - StartTime - a new api-variable that contains the starting time of the current instance of the api, which probably means, your script, that
    embeds the framework
  
####Changes from 4.00beta2.5 to 4.00beta2.6
  - corrections in the documentation
  - GetClosestNextMarker - couldn't find last marker and showed a time, even if no marker was found -> fixed now; 
      markers that are at time_position are now seen as a previous marker
  - GetClosestPreviousMarker - couldn't find first marker and showed a time, even if no marker was found -> fixed now; 
      markers that are at time_position are now seen as a next marker
  - GetClosestPreviousRegion - fixed possible bug preventing from finding the first region -> fixed now
  - GetClosestNextRegion - fixed possible bug preventing from finding the last region -> fixed now
  - GetClosestGoToPoints - new boolean parameters check_itemedge, check_marker, check_region to set, for which type of elements to look for;
      returns now also an item-number; instead of "Item", it uses "Itembeg" for the beginning and "Itemend" for the end of an item now as
      elementtype for items; added the itemtypes to the docs
  - GetNextClosestItemEdge - new return values: closest_item, item_number, edgetype, found_item  
  - GetPreviousClosestItemEdge - new return values: closest_item, item_number, edgetype, found_item  
  - WriteValueToFile - new parameter for optional appending a value to a file, other minor corrections
  - SetTrackRecState - missing parameter description for tracknumber in the docs -> fixed now
  - GetMediaItemsFromClipboard - produced an error, that made this function unusable -> fixed now
  - RippleInsert - didn't move an item close to "position" sometimes, before inserting -> fixed now
  - RippleInsert_MediaItemStateChunks - didn't move an item close to "position" sometimes, before inserting -> fixed now
  - GetPreviousMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
  - GetNextMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
  - CountMuteEnvelopePoints used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
        could also produce an error when using an invalid track. -> Fixed now.
  - ToggleMute - could produce an error, when using an invalid track. -> Fixed now.
  - GetTrackAutoRecArmState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackAutomodeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBeatState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBusCompState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackBypFXState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackFreeModeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackGroupFlagsState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackHeightState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackINQState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIPhaseState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIcon_Filename - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackIsBusState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackLayoutNames - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackLockState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMIDIOutState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMainSendState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMidiCTL - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMidiInputChanMap - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackMuteSoloState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackNChansState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackName - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackPeakColorState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackPerfState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackRecState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackShowInMixState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - GetTrackVUState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
  - SetTrackAutoRecArmState     - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackAutomodeState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBeatState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBusCompState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackBypFXState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackFreeModeState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackHeightState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackINQState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIPhaseState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIcon_Filename    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackIsBusState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackLayoutNames  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackLockState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMIDIOutState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMainSendState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMidiCTL  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMidiInputChanMap    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackMuteSoloState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackNChansState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackName  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackPeakColorState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackPerfState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackRecState    - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackShowInMixState  - tracknumbers start now with 1 for track 1, instead of 0
  - SetTrackVUState  - tracknumbers start now with 1 for track 1, instead of 0
   

### 4.00 Beta 2.5: - "Musique non stop - Technopop - Kraftwerk" - 10th of September 2017
####New features in 4.00beta2.5
  - Import Markers/Regions from RPP-Projectfiles
  - Selection/Deselection of items, as well as getting functions for getting selected items
  - functions for checking MediaItemArray and MediaItemStateChunkArrays for validity
  - Trackstatechunks: getting/adding/setting/deleting/counting items in/to trackstate-chunks
  - Routing-Send/Receive - functions for count, add, get, set, delete
  - HWOut-settings - functions for count, add, get, set, delete
  - Lock Track Controls - get, set functions
  - Track Selection functions - get, set
  - Functions to lock-MediaItems easily
  - added RippleInsert for mediaitemstatechunkarrays
  - get MediaItems from clipboard
  - many functions for getting MediaItem-states from MediaItemStateChunks
  - some functions for setting MediaItem-states into MediaItemStateChunks
  - more MediaItem-insertion functions for MediaItemStateChunks
  - choosing MediaItems from specific tracks from MediaItemArray
  - new trackstring-analysis and manipulation-functions
  - functions for getting Mediaitems from specific tracks
  - apply statechunk to MediaItems, for extended manipulation of MediaItems using manipulated MediaItemStateChunks
  - Reaper-Main-Window: get left and right sides in relation to the screen position
  - client2screen2client x-coordinate conversion functions
  - developer: new Errormessaging system, that will, in the future, give readable error-messages, 
      when errors occur during execution of functions. Currently only some functions return error messages; will change over time.
  - tons of other helper-functions in many areas
 
####Changes from 4.00beta2.1 to 4.00beta2.5
  - minor corrections in documentation
  - RenderProjectToAIFF - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToFLAC - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3_ABR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3_CBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3_MaxQuality - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToMP3_VBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToOPUS - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - RenderProjectToWebMVideo - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
  - GetProject_HorizontalZoom was incorrectly named GetProject_Zoom in the docs -> fixed
  - GetApiVersion was incorrectly linked to GetPath in the docs -> fixed
  - GetAllMediaItemsBetween - adds "ULTRASCHALL_TRACKNUMBER tracknumber" to returned statechunks, to know, from which track the item originated from
  - SplitMediaItems_Position - bug introduced in beta 2.1 that split only first track -> fixed
  - RippleInsert - bug introduced in beta 2.1 -> fixed
  - InsertMediaItemArray - bug introduced in beta 2.1 -> fixed
  - GetMediaItemsAtPosition - bug introduced in beta 2.1 -> fixed
  - OnlyMediaItemsOfTracksInTrackstring - bug introduced in beta 2.1 -> fixed
  - DeleteMediaItems_Position - bug introduced in beta 2.1 -> fixed
  - GetAllMediaItemsBetween - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsAfter_By - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsBefore_By - bug introduced in beta 2.1 -> fixed
  - MoveMediaItemsSectionTo - bug introduced in beta 2.1 -> fixed
  - SectionCut - bug introduced in beta 2.1 -> fixed
  - SectionCut_Inverse - bug introduced in beta 2.1 -> fixed
  - RippleCut - bug introduced in beta 2.1 -> fixed
  - RippleCut_Reverse - bug introduced in beta 2.1 -> fixed
  - RemoveDuplicateTracksInTrackstring - entries in trackstringarray are now numbers, not strings
  - SetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIcon_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - SetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackGroupFlagsState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIcon_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
  - GetMediaItemsAtPosition - returns now an array with the MediaItemStateChunks as well
  - RemoveDuplicateTracksInTrackstring - produced Lua-error, when giving nil as parameter -> fixed
   
   
### 4.00 Beta2.1: - "Ich und der Rock - Renft" - 30th of August
####New features in 4.00beta2.1
  - mostly bugfixes
  - ultraschall.Separator - contains the proper separator for the system it runs on. If you want to do file-operation, 
                you should use this instead of \\ or /, to make your script Mac and Windows compliant.
  - ultraschall.Script_Path - contains the path to the scripts-folder of Reaper
  
####Changes from 4.00beta2 to 4.00beta2.1 
  - changed the lines, you need to include into your script. refer "3. How to use the API in your LUA-Script" in the doc-file.
  - some functions didn't work on Mac, due it's use of / instead of \ as directory-separator. Has been fixed now.
  - moved all ultraschall-related variables into the ultraschall-table.
  - GetPartialString - returns nil in case of error
  - CSV2Line - returns nil in case of error, bugfixing
  - RGB2Num - returns nil in case or error
  - CSV2IndividualLinesAsArray - returns nil in case or error, bugfixing
  - GetNextMuteState - corrected documentation
  - GetNextMuteState_TrackObject - corrected documentation
  - GetPreviousMuteState - corrected documentation
  - GetPreviousMuteState_TrackObject - corrected documentation
  - ImportChaptersFromFile - corrected documentation
  - ImportEditFromFile - corrected documentation
  - ImportMarkersFromFile - corrected documentation
  - ImportChaptersFromFile_Filerequester - corrected documentation
  - ImportEditFromFile_Filerequester - corrected documentation
  - ImportMarkersFromFile_Filerequester - corrected documentation
  - RemoveDuplicateTracksInTrackstring - improved return values
  - OnlyMediaItemsOfTracksInTrackstring - improved return values
  - ChangeDeltaOffsetOfMediaItems_FromArray - bugfixing
  - InsertMediaItem_MediaItem - improved return values
  - InsertMediaItem_MediaItemStateChunk - improved return values
 
   
### 4.00 Beta2: - "Shock The Monkey - Peter Gabriel" - 20th August 2017
####New Features in 4.00beta2 - about 190 new functions with:
  - Configuration: Import/Export from/to reaper-kb.ini-files
  - Configuration: New Management-functions for Configuration-files that follow standard ini-files
  - Clipboard: Clipboard Functions, get and put (thanks to fernsehmuell for the mac-side)
  - Envelopes: Move Envelope-Points in a track
  - File-Management: extended fileread-functions, including reading lines that follow patterns, and more
  - Markers: Move Markers, as well as Edit Markers
  - Markers: Get Markers/Regions/Time-Signature-marker by their graphical representation, means: you can use e.g. the mouse to find markers
        the mouse is hovering above
  - Items: Get, Split, Insert, Delete, Shorten, Cut, RippleCut, RippleInsert, etc of single and multiple MediaItems in 1 or more tracks
  - Projectfiles: Get and set 40 settings in rpp-projectfiles. More to come.
  - Projectfiles: Import Tracks with Items and all FX and settings from project-files using GetProject_TrackStateChunk. 
          You can insert them with the new item function InsertMediaItem_MediaItemStateChunk
  - Rendering: Render projectfiles as mp3, mp3_vbr, mp3_cbr, mp3_abr, opus, flac, aiff, and webm(video). That's right: no render dialog necessary!
  - Docs: The Documentation-System, that automatically creates the API-Docs from the API itself, using CreateUSApiDocs_HTML. 
      Will be extended to be a fully equipped automatic-documentation-system for Ultraschall
  - Tons of other functions in all areas.
      
####Changes from 4.00beta1 to 4.00beta2
  - Marker/Regions-functions - they used to ignore regions which led to wrong markers/regions -> fixed
  - ultraschall.WriteValueToFile - default write-mode changed to binary-file behavior(doesn't add useless newlines anymore)
                    non binary-mode can be chosen by a new parameter "binarymode" set to false, if it's   
                    set to nil or true, value will be treated as binaryvalue and saved as such.
                    ultraschall.WriteValueToFile(Filename_with_path, Value, binarymode)
  - CSV2IndividualLines - renamed to CSV2IndividualLinesAsArray and added number of lines as additional return-value
  - NumberRangeAsCsvOfNumbers - renamed to CreateTrackNumbersString
  - Structure - reworked API-structure
 
 
### 4.00 beta1: - "Tomorrow Never Knows - The Beatles" - 10th of July 2017
####New Features in 4.00beta1 - about 140 new functions with:
  - Markers: extensive marker-management, with markers for chapter, edit, dummy, normal and podrange-regions
  - Configuration: functions for an Ultraschall.ini. Ultraschall needs it's own config-file, at last ;)
  - CoughButtons: CoughButton-management for setting, toggling, getting envelope-points in the mute-envelope-lane
  - Navigation: Jumping to position, setting playcursor, toggling scrolling during playback, finding next item/marker/region and more
  - Track-Management: Getting and Setting tons of track-states, that are usually hard to fumble out of Reaper.
  - File-Management: Write a value to a file.
  - Dozens of helper-functions here and there